{"version":3,"sources":["icon.js","submenu.js","attach.js","use-component.js","icon-button.js","label-button.js","button.js","fields/button-field.js","form-control.js","fields/help-tool-tip.js","fields/form-label.js","fields/common-field.js","fields/display-value-typography.js","fields/boolean-field.js","card.js","fields/component-field.js","flex-break.js","utils.js","fields/field.js","fields/composite-field.js","fields/date-field.js","form.js","fields/form-field.js","fragment.js","grid-item.js","grid.js","form-card-buttons.js","form-card.js","form-dialog.js","confirmation-dialog.js","fields/select-order.js","fields/collection-field.js","fields/list-item-field.js","fields/list-field.js","fields/re-captcha-field.js","fields/autocomplete-select.js","fields/select-field.js","fields/time-field.js","fields/text-field.js","fields/url-field.js","components.js","alert.js","container.js","tabs.js","text.js","component-utils.js","inner-component.js","component.js","menu.js","search-bar.js","snackbar.js","app.js","app-container.js","register-service-worker.js","render.js","demo/components/app.js","demo/components/contact-no-mson.js","demo/components/contacts.js","demo/components/fields.js","demo/components/index.js","demo/components/contacts-local-storage.js","demo/components/contacts-firebase.js","demo/components/edit-contact.js","demo/components/fields-screen.js","demo/components/form-builder.js","demo/components/generate-component.js","demo/components/grid.js","demo/components/home.js","demo/components/tasks.js","demo/components/tasks-local-storage.js","demo/components/tasks-firebase.js","demo/components/router.js","field-editor-form.js","form-editor.js","demo/components/custom-component.js","demo/components/custom-component-js.js","demo/components/custom-component-no-props.js","demo/components/custom-component-attach.js","demo/app.js","demo/index.js"],"names":["Icon","handleClick","event","props","onClick","svgIconName","snakeCase","this","className","icon","role","iconContents","toFontIconName","React","PureComponent","Submenu","item","items","setState","open","state","onNavigate","onDrawerToggle","childSelected","path","each","classes","listItems","forEach","index","isSelected","classNames","secondary","push","selected","roles","registrar","client","user","hasRole","hidden","ListItem","button","nested","ListItemText","disableTypography","primary","Typography","variant","join","label","Collapse","in","timeout","unmountOnExit","List","disablePadding","withStyles","theme","paddingLeft","spacing","color","palette","text","fontWeight","attach","_watchProps","componentOrName","Component","wasMounted","getComponent","component","handleFieldChange","name","value","watchProps","indexOf","difference","Object","keys","hasComponent","get","prevProps","removeListener","addListener","setInitialState","on","initialState","useComponent","useState","setProps","watchedProps","useRef","current","useEffect","IconButton","tooltip","hovered","setHovered","onMouseEnter","Tooltip","title","useStyles","makeStyles","leftIcon","marginRight","marginTop","Button","type","disabled","fullWidth","ButtonField","emitClick","FormControl","children","marginBottom","fullWidthClassName","noMarginBottomClassName","noMarginBottom","formControl","margin","width","HelpToolTip","help","disableTouchListener","FormLabel","shrink","childProps","assign","undefined","noShrink","typography","caption","subtitle1","CommonField","fld","required","err","editable","touched","hideLabelUI","hideLabel","useDisplayValue","shrinkLabel","inlineLabel","autoHideLabel","lbl","isBlank","id","getUniqueId","labelText","htmlFor","error","InputLabel","firstErr","getFirstErr","FormHelperText","DisplayValueTypography","root","display","BooleanField","handleChange","setValue","target","checked","FormControlLabel","control","Switch","onChange","getDisplayValue","Card","content","container","justify","xs","sm","md","lg","Paper","paper","wrap","padding","flex","ComponentField","marginLeft","FlexBreak","break","definedProps","Field","block","accessEditable","didCreate","noBlock","getClassName","componentUtils","getUIComponent","Fragment","utils","getIfDefined","CompositeField","fields","lastIsBlock","first","eachField","field","last","DateField","handleDateChange","date","handleBlur","setTouched","includeTime","minDate","maxDate","format","dis","DateTimePicker","DatePicker","DateFnsUtils","clearable","onClose","Form","fieldsCanAccess","handleSave","preventDefault","validate","getErrs","length","submit","turnOnAutoValidate","access","calcFieldsCanAccess","set","autoValidate","mode","getFields","ignoreErrs","prevState","adjustAccess","formTag","isLoading","key","getKey","flds","map","onSubmit","FormField","form","flexFlow","GridItem","xl","Grid","FormCardButtons","forbidUpdate","forbidDelete","archivedAt","onEdit","onDelete","updateButton","deleteButton","FormCard","handleEdit","handleDelete","cardButtons","buttons","cursor","FormDialog","saveClicked","previousMode","handleClose","withCancelButton","onCancel","currentForm","disableSubmit","onSave","CollectionFieldCore","MODES","DELETE","RESTORE","fullScreen","disableSave","hasErrorForTouchedField","isOpen","Dialog","DialogContent","DialogActions","withMobileDialog","ConfirmationDialog","yes","alert","DialogTitle","DialogContentText","autoFocus","SelectOrder","sortOrder","sortBy","flipped","options","option","MenuItem","Select","flip","transform","getItemStyle","isDragging","draggableStyle","userSelect","background","getListStyle","isDraggingOver","grey","CollectionField","handleCancel","preventReadAction","READ","UPDATE","handleNew","CREATE","a","save","formToDelete","getValue","handleConfirmationClose","archive","handleOrdering","order","onDragEnd","result","destination","source","moveAndSaveForm","sourceIndex","destinationIndex","canCreate","canUpdate","canArchive","bufferTopId","_infiniteLoader","resizeSpacer","spacerHeight","setSpacerResizing","change","forbidOrder","showArchived","searchString","maxGrids","maxColumns","cards","getForms","setEditable","getUniqueItemId","_getFormKey","formExtras","getFormExtras","canDrag","draggableId","provided","snapshot","ref","innerRef","draggableProps","dragHandleProps","style","isDefaultField","numCards","forbidCreate","forbidSort","store","singularLabel","getSingularLabel","reachedMax","showNewButton","canOrder","sortOptions","showOrder","align","noResults","preventUpdate","preventDeleteAction","confirmationOpen","confirmationTitle","toLowerCase","spacerStyle","height","spacerId","cardContainer","droppableId","placeholder","showNoRecords","header","spacer","footer","backgroundColor","animation","withTheme","ListItemField","emit","allowDelete","ListField","createField","autoCreateFields","canDeleteEmpty","hideDeleteButton","fieldIsBlank","ReCAPTCHAField","isEditable","siteKey","globals","captcha","sitekey","inputComponent","inputRef","components","Control","optionalProps","selectProps","InputProps","inputProps","input","ariaLabel","innerProps","textFieldProps","Menu","square","MultiValue","Chip","tabIndex","chip","chipFocused","isFocused","isDisabled","removeProps","deleteIcon","NoOptionsMessage","noOptionsMessage","Option","buttonRef","SingleValue","singleValue","ValueContainer","valueContainer","AutoCompleteSelect","isClearable","onBlur","onFocus","onInputChange","isMulti","selectStyles","dropdownIndicator","base","clearIndicator","menuPortal","zIndex","styles","menuPortalTarget","document","body","minWidth","flexWrap","alignItems","emphasize","fontSize","position","SelectField","focus","multiple","val","blankString","opts","Checkbox","autocomplete","fieldValue","renderValue","Input","chips","getOptionLabel","autocompleteValue","isValueBlank","handleAutocompleteChange","handleFocus","renderOptions","displayValue","TimeField","showSeconds","TimePicker","seconds","invalidDateMessage","TextField","fromUIValue","handleKeyUp","keyCode","TextMaskCustom","other","mask","inputElement","maxLength","multiline","rows","rowsMax","optional","uiValue","getUIValue","onKeyUp","URLField","newWindow","href","rel","Alert","severity","ChainedSelectField","ChainedSelectListField","Container","IdField","IntegerField","MoneyField","NumberField","PhoneField","SelectListField","Tabs","AppBar","elevation","itemName","emitChange","indicatorColor","textColor","scrollButtons","Tab","Text","renderers","paragraph","TextListField","User","register","compiler","isCompiled","Parent","getPrototypeOf","constructor","ancestorName","getOldestCompiledAncestor","Ancestor","InnerComponent","handlerName","charAt","toUpperCase","slice","addChangeListener","removeChangeListener","others","getOrZero","definition","compiledComponent","setCompiledComponent","styleProps","comp","newComponent","destroy","innerComponent","handleDrawerToggle","handleNavigate","menuItem","submenus","mobileOpen","responsive","headerElement","drawer","drawerHeader","Divider","temporaryDrawer","Drawer","anchor","direction","drawerPaper","ModalProps","keepMounted","permanentDrawer","drawPaperResponsive","Hidden","mdUp","smDown","implementation","breakpoints","up","SearchBar","autoFullWidth","onSearch","handleClearSearch","full","grow","disableUnderline","textFieldInput","textField","iconContainer","searchIcon","closeIcon","borderRadius","common","white","top","left","right","flexGrow","Snackbar","reason","message","anchorOrigin","vertical","horizontal","autoHideDuration","ContentProps","action","close","App","snackbarOpen","snackbarMessage","nextMenuItem","showArchivedToggle","searchStringInput","showSearch","showSearchOnMobile","callback","producedContent","has","displayConfirmation","history","confirmation","switchContent","parameters","currentComponent","emitUnload","location","menu","route","toRoute","queryString","search","substr","hash","parentItem","getParent","requireAccess","Action","run","ComponentMSON","emitLoad","canSearch","onLocation","pathname","pathHash","pathSearch","handleSnackbarClose","handleArchivedChange","window","scrollTo","handleSearchStringInputChange","handleSearch","toggleShowSearch","setGlobalOnNavigate","setOnNavigate","redirectPath","getItemAndParsePath","params","redirectAfterLogin","emitLoggedOut","canAccess","displaySnackbar","redirect","navigateTo","unlisten","listen","awaitSession","addEventListener","e","showArchivedChecked","archivedToggle","searchBox","alignRight","isResponsive","navIconHide","noWrap","onMobile","isWidthDown","bar","menuButton","appBar","appBarResponsive","Toolbar","menuAlwaysTemporary","menuSidebar","fullScreenStyle","appFrame","contentResponsive","overflow","default","withWidth","withRouter","createTheme","blueGrey","lightBlue","useNextVariants","AppContainer","basename","CssBaseline","getUserConfirmation","isLocalhost","Boolean","hostname","match","navigator","URL","process","origin","swUrl","fetch","then","response","status","headers","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","console","log","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","render","app","ReactDOM","getElementById","registerServiceWorker","actions","ContactNoMSON","EmailField","setValues","firstName","lastName","email","values","getValues","reset","registerComponent","chainedSelectOptions","parentValue","Contacts","schema","formFactory","product","ContactsLocalStorage","storeName","ContactsFirebase","apiKey","authDomain","projectId","collection","EditContact","baseForm","listeners","storeWhere","FieldsScreen","addressLine1","addressLine2","city","stateProvince","postalCode","country","github","medium","twitter","if","$ne","else","Fields","elevate","fieldFactory","FormBuilder","GenerateComponent","JSON","stringify","Home","Tasks","TasksLocalStorage","TasksFirebase","Router","personId","messageId","FieldEditorForm","handleValueChange","componentName","clearErr","isField","preview","card","CardContent","gutterBottom","overflowY","maxHeight","FormEditor","CustomComponent","compile","CustomComponentJS","UIComponent","ReactCustomComponentJS","CustomComponentNoProps","ReactCustomComponentAttach","CustomComponentAttach","reCAPTCHASiteKey","uiRegister","FieldEditorFormUI","FormEditorUI"],"mappings":"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","file":"static/js/main.a2519fca.chunk.js","sourcesContent":["import React from 'react';\nimport IconMui from '@material-ui/core/Icon';\nimport snakeCase from 'lodash/snakeCase';\n\n// Note: we use font icons instead of SVG icons as this allows us to support any icon dynamically\n// without adding all icons to the JS bundle. The MaterialUI icons are about 54KB which is\n// substantially smaller than their SVG counterparts.\n//\n// import * as Icons from '@material-ui/icons';\n\nexport default class Icon extends React.PureComponent {\n  handleClick = (event) => {\n    if (this.props.onClick) {\n      this.props.onClick(event);\n    }\n  };\n\n  // Convert to the font icon name so that we can use the SVG Icon names. This allows us to make\n  // changes to this logic without changing the calling code.\n  toFontIconName(svgIconName) {\n    return snakeCase(svgIconName);\n  }\n\n  render() {\n    const { className, icon, role } = this.props;\n\n    const iconContents = icon ? this.toFontIconName(icon) : null;\n\n    return (\n      <IconMui\n        className={className}\n        onClick={this.handleClick}\n        aria-hidden={this.props['aria-hidden']}\n        aria-label={this.props['aria-label']}\n        role={role}\n      >\n        {iconContents}\n      </IconMui>\n    );\n  }\n}\n","import React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport Typography from '@material-ui/core/Typography';\nimport Icon from './icon';\nimport each from 'lodash/each';\nimport registrar from 'mson/lib/compiler/registrar';\n\nconst styles = (theme) => ({\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n  primary: {\n    color: theme.palette.text.primary,\n  },\n  secondary: {\n    color: theme.palette.text.secondary,\n  },\n  selected: {\n    fontWeight: 'bold',\n  },\n});\n\nclass Submenu extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open: this.childSelected(),\n    };\n  }\n\n  childSelected() {\n    const { item, path } = this.props;\n\n    let childSelected = false;\n\n    each(item.items, (item) => {\n      if (path === item.path) {\n        childSelected = true;\n        return false; // exit loop\n      }\n    });\n\n    return childSelected;\n  }\n\n  handleClick = (item) => {\n    // Has sub items?\n    if (item.items) {\n      this.setState({ open: !this.state.open });\n    } else {\n      // Note: the navigation is handled by the parent as we want to be able to prevent the\n      // navigation if say a form is dirty, etc...\n      if (this.props.onNavigate) {\n        this.props.onNavigate(item);\n      }\n\n      if (this.props.onDrawerToggle) {\n        // Close the drawer\n        this.props.onDrawerToggle();\n      }\n    }\n  };\n\n  items() {\n    const { classes, item, path } = this.props;\n    const listItems = [];\n    item.items.forEach((item, index) => {\n      const isSelected = path === item.path;\n      let classNames = [classes.secondary];\n      if (isSelected) {\n        classNames.push(classes.selected);\n      }\n\n      if (\n        (!item.roles ||\n          (registrar.client && registrar.client.user.hasRole(item.roles))) &&\n        item.hidden !== true\n      ) {\n        listItems.push(\n          <ListItem\n            button\n            className={classes.nested}\n            key={index}\n            onClick={() => this.handleClick(item)}\n          >\n            <ListItemText\n              disableTypography\n              primary={\n                <Typography variant=\"body2\" className={classNames.join(' ')}>\n                  {item.label}\n                </Typography>\n              }\n            />\n          </ListItem>\n        );\n      }\n    });\n    return listItems;\n  }\n\n  render() {\n    const { item, classes, path } = this.props;\n    const items = item.items ? this.items() : null;\n\n    const isSelected = path === item.path;\n    let classNames = [classes.primary];\n    if (isSelected) {\n      classNames.push(classes.selected);\n    }\n\n    let listItems = null;\n    if (items) {\n      listItems = (\n        <Collapse in={this.state.open} timeout=\"auto\" unmountOnExit>\n          <List disablePadding>{this.items()}</List>\n        </Collapse>\n      );\n    }\n\n    return (\n      <div>\n        <ListItem button onClick={() => this.handleClick(item)}>\n          <ListItemText\n            disableTypography\n            primary={\n              <Typography variant=\"subtitle1\" className={classNames.join(' ')}>\n                {item.label}\n              </Typography>\n            }\n          />\n          {items ? (\n            this.state.open ? (\n              <Icon icon=\"ExpandLess\" />\n            ) : (\n              <Icon icon=\"ExpandMore\" />\n            )\n          ) : null}\n        </ListItem>\n        {listItems}\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(Submenu);\n","import React from 'react';\nimport difference from 'lodash/difference';\n\n// Usage: attach(['prop1', 'prop2', ...], componentOrName)(Component)\n\nconst attach = (_watchProps, componentOrName) => {\n  return (Component) => {\n    return class extends React.PureComponent {\n      wasMounted = false;\n\n      getComponent = (props) => {\n        if (!props) {\n          props = this.props;\n        }\n\n        if (!componentOrName) {\n          return props.component;\n        } else if (typeof componentOrName === 'string') {\n          return props[componentOrName];\n        } else {\n          // componentOrName is a component\n          return componentOrName;\n        }\n      };\n\n      // The component can be created at any time, e.g. when the definition is set. Therefore, we\n      // need to handle a missing component until the component is present.\n      hasComponent() {\n        return !!this.getComponent();\n      }\n\n      constructor(props) {\n        super(props);\n\n        // The field props that we want to expose in the state. Remove any names that are in\n        // this.props so that we can override those values.\n        this.watchProps = difference(_watchProps, Object.keys(this.props));\n\n        // These values need to be in the state so that the component is rerendered when they change.\n        if (this.hasComponent()) {\n          this.state = this.getComponent().get(this.watchProps);\n        }\n      }\n\n      handleFieldChange = (name, value) => {\n        if (this.watchProps.indexOf(name) !== -1) {\n          // Is the component mounted? Prevent a race condition where the handler tries to set the\n          // state after the component has been unmounted.\n          if (this.wasMounted) {\n            this.setState({ [name]: value });\n          }\n        }\n      };\n\n      componentDidUpdate(prevProps) {\n        if (this.getComponent() !== this.getComponent(prevProps)) {\n          // The component is changing so recreate the listener\n          this.removeListener();\n          this.addListener();\n\n          // Set the initial state as the component has changed\n          this.setInitialState();\n        }\n      }\n\n      addListener() {\n        if (this.hasComponent()) {\n          this.getComponent().on('$change', this.handleFieldChange);\n        }\n      }\n\n      removeListener() {\n        if (this.hasComponent()) {\n          this.getComponent().removeListener('$change', this.handleFieldChange);\n        }\n      }\n\n      setInitialState() {\n        if (this.hasComponent()) {\n          const initialState = this.getComponent().get(this.watchProps);\n          this.setState(initialState);\n        }\n      }\n\n      componentDidMount() {\n        // Note: we have to use componentDidMount and not componentWillMount as handleFieldChange\n        // can change the state and we aren't allowed to change the state until the component has\n        // mounted.\n\n        this.wasMounted = true;\n\n        this.addListener();\n\n        // Update state with any changes that have occured since construction, but before mounting\n        this.setInitialState();\n      }\n\n      componentWillUnmount() {\n        this.removeListener();\n        this.wasMounted = false;\n      }\n\n      render() {\n        return <Component {...this.state} {...this.props} />;\n      }\n    };\n  };\n};\n\nexport default attach;\n","import { useState, useEffect, useRef } from 'react';\n\nexport default function useComponent(component, watchProps) {\n  const [props, setProps] = useState({});\n\n  // We need useRef so that we can reference watchProps in the useEffect below\n  const watchedProps = useRef(watchProps).current;\n\n  useEffect(() => {\n    // The component can be created at any time, e.g. when the definition is set. Therefore, we need\n    // to handle a missing component until the component is present.\n    const hasComponent = () => !!component;\n\n    function handleFieldChange(name, value) {\n      if (watchedProps.indexOf(name) !== -1) {\n        setProps((prevProps) => ({ ...prevProps, [name]: value }));\n      }\n    }\n\n    function addListener() {\n      if (hasComponent()) {\n        component.on('$change', handleFieldChange);\n\n        // Initialize the props using the component's values\n        setProps(component.get(watchedProps));\n      }\n    }\n\n    function removeListener() {\n      if (hasComponent()) {\n        component.removeListener('$change', handleFieldChange);\n      }\n    }\n\n    addListener();\n    return () => removeListener();\n  }, [component, watchedProps]); // Only rerun if component changes\n\n  return props;\n}\n","import React, { useState } from 'react';\nimport IconButtonMui from '@material-ui/core/IconButton';\nimport Icon from './icon';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst IconButton = (props) => {\n  const { onClick, icon, tooltip } = props;\n\n  const [hovered, setHovered] = useState(false);\n\n  // NOTE: using Tooltips when we have 100 more items leads to a significant latency. We sidestep\n  // this by only loading the tooltip on the initial mouse over.\n\n  const button = (\n    <IconButtonMui\n      onClick={onClick}\n      onMouseEnter={() => setHovered(true)}\n      aria-label={props['aria-label']}\n    >\n      <Icon icon={icon} />\n    </IconButtonMui>\n  );\n\n  if (hovered && tooltip) {\n    return <Tooltip title={tooltip}>{button}</Tooltip>;\n  } else {\n    return button;\n  }\n};\n\nexport default IconButton;\n","import React from 'react';\nimport ButtonMui from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Icon from './icon';\n\nconst useStyles = makeStyles((theme) => ({\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  marginTop: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nconst handleClick = (onClick) => {\n  if (onClick) {\n    onClick();\n  }\n};\n\nconst Button = (props) => {\n  const classes = useStyles();\n\n  const {\n    type,\n    disabled,\n    label,\n    icon,\n    fullWidth,\n    variant,\n    marginTop,\n    onClick,\n  } = props;\n\n  const className = marginTop !== false ? classes.marginTop : null;\n\n  return (\n    <ButtonMui\n      className={className}\n      type={type}\n      color=\"primary\"\n      disabled={disabled}\n      onClick={() => handleClick(onClick)}\n      fullWidth={fullWidth}\n      variant={variant}\n    >\n      {icon ? <Icon className={classes.leftIcon} icon={icon} /> : null}\n      {label}\n    </ButtonMui>\n  );\n};\n\nexport default Button;\n","import React from 'react';\nimport IconButton from './icon-button';\nimport LabelButton from './label-button';\n\nconst Button = (props) => {\n  const {\n    type,\n    disabled,\n    label,\n    icon,\n    fullWidth,\n    variant,\n    marginTop,\n    onClick,\n    tooltip,\n  } = props;\n\n  if (label || !icon) {\n    return (\n      <LabelButton\n        type={type}\n        disabled={disabled}\n        label={label}\n        icon={icon}\n        fullWidth={fullWidth}\n        variant={variant}\n        marginTop={marginTop}\n        onClick={onClick}\n      />\n    );\n  } else {\n    return <IconButton onClick={onClick} icon={icon} tooltip={tooltip} />;\n  }\n};\n\nexport default Button;\n","import React from 'react';\nimport attach from '../attach';\nimport Button from '../button';\n\nclass ButtonField extends React.PureComponent {\n  handleClick = () => {\n    const { type } = this.props;\n\n    // Is the button not a submit button? Let the form handle submit buttons so that the form\n    // performs the validation\n    if (type !== 'submit') {\n      this.props.component.emitClick();\n    }\n  };\n\n  render() {\n    const {\n      label,\n      type,\n      disabled,\n      icon,\n      fullWidth,\n      variant,\n      tooltip,\n    } = this.props;\n    return (\n      <Button\n        type={type}\n        label={label}\n        disabled={disabled}\n        onClick={this.handleClick}\n        icon={icon}\n        fullWidth={fullWidth}\n        variant={variant}\n        tooltip={tooltip}\n      />\n    );\n  }\n}\n\nexport default attach([\n  'label',\n  'type',\n  'disabled',\n  'icon',\n  'fullWidth',\n  'variant',\n  'tooltip',\n])(ButtonField);\n","import React from 'react';\nimport FormControlMU from '@material-ui/core/FormControl';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = (theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n  },\n  fullWidth: {\n    // TODO: bug in material ui?\n    width: `calc(100% - ${theme.spacing(2)}px)`,\n  },\n  noMarginBottom: {\n    marginBottom: 0,\n  },\n});\n\nclass FormControl extends React.PureComponent {\n  render() {\n    const { fullWidth, children, classes, marginBottom } = this.props;\n\n    const fullWidthClassName = fullWidth ? classes.fullWidth : '';\n    const noMarginBottomClassName =\n      marginBottom === false ? classes.noMarginBottom : '';\n\n    return (\n      <FormControlMU\n        fullWidth={fullWidth}\n        className={`${classes.formControl} ${fullWidthClassName} ${noMarginBottomClassName}`}\n      >\n        {children}\n      </FormControlMU>\n    );\n  }\n}\n\nexport default withStyles(styles)(FormControl);\n","// TODO: make full width of field include right margin if there is help?\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Icon from '../icon';\n\nexport default class HelpToolTip extends React.PureComponent {\n  render() {\n    const { help } = this.props;\n\n    // Note: we use disableTouchListener as otherwise the user needs to press and hold before the\n    // tooltip appears, something that is not intuitive. With this configuration, the user can just\n    // click the button to view the tooltip.\n    return (\n      <Tooltip disableTouchListener title={help}>\n        <IconButton aria-label=\"Help\">\n          <Icon icon=\"HelpOutline\" />\n        </IconButton>\n      </Tooltip>\n    );\n  }\n}\n","import React from 'react';\nimport FormLabelMui from '@material-ui/core/FormLabel';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = (theme) => ({\n  shrink: {\n    ...Object.assign({}, theme.typography.caption, { color: undefined }),\n  },\n  noShrink: {\n    ...Object.assign({}, theme.typography.subtitle1, { color: undefined }),\n  },\n});\n\nclass FormLabel extends React.PureComponent {\n  render() {\n    const { children, classes, shrink } = this.props;\n\n    const childProps = Object.assign({}, this.props, {\n      shrink: undefined,\n      classes: undefined,\n    });\n\n    const className = shrink ? classes.shrink : classes.noShrink;\n\n    return (\n      <FormLabelMui {...childProps} className={className}>\n        {children}\n      </FormLabelMui>\n    );\n  }\n}\n\nexport default withStyles(styles)(FormLabel);\n","import React from 'react';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '../form-control';\nimport attach from '../attach';\nimport HelpToolTip from './help-tool-tip';\nimport FormLabel from './form-label';\n\nclass CommonField extends React.PureComponent {\n  render() {\n    const {\n      component,\n      children,\n      label,\n      required,\n      fullWidth,\n      err,\n      editable,\n      touched,\n      help,\n      hideLabelUI,\n      hideLabel,\n      useDisplayValue,\n      shrinkLabel,\n      inlineLabel,\n      marginBottom,\n      autoHideLabel,\n    } = this.props;\n\n    let fld = null;\n\n    let lbl = null;\n\n    const isBlank = component.isBlank();\n\n    const id = component.getUniqueId();\n\n    if (!hideLabelUI && !hideLabel && (!autoHideLabel || label)) {\n      if (editable && !useDisplayValue && !inlineLabel) {\n        lbl = (\n          <InputLabel\n            htmlFor={id}\n            error={touched && err ? true : false}\n            // If label is blank then don't show as required\n            required={label && required}\n            shrink={shrinkLabel}\n          >\n            {label}\n          </InputLabel>\n        );\n      } else {\n        // We display a non-breaking space when the label is empty so that CompositeFields, like the\n        // ChainedSelectField, print all their display values on the same line.\n        const labelText = label ? label : '\\u00A0';\n\n        lbl = (\n          <FormLabel\n            id={`label-${id}`}\n            htmlFor={id}\n            error={touched && err ? true : false}\n            required={required && !useDisplayValue && editable}\n            shrink={useDisplayValue || !editable || shrinkLabel}\n          >\n            {labelText}\n          </FormLabel>\n        );\n\n        if (!inlineLabel) {\n          // We wrap the label in a div tag so that the proceeding display value appears on a\n          // different line\n          lbl = <div>{lbl}</div>;\n        }\n      }\n    }\n\n    const firstErr = component.getFirstErr();\n\n    fld = (\n      <span>\n        {lbl}\n        {children}\n        {help && editable ? <HelpToolTip help={help} /> : ''}\n        {touched && err ? (\n          <FormHelperText error>{firstErr}</FormHelperText>\n        ) : null}\n      </span>\n    );\n\n    if (editable || !isBlank) {\n      return (\n        <FormControl fullWidth={fullWidth} marginBottom={marginBottom}>\n          {fld}\n        </FormControl>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\n// 'value' is needed in the event we are showing the display value\nCommonField = attach([\n  'label',\n  'required',\n  'fullWidth',\n  'value',\n  'err',\n  'editable',\n  'touched',\n  'help',\n  'hideLabel',\n  'useDisplayValue',\n  'autoHideLabel',\n])(CommonField);\n\nexport default CommonField;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = (theme) => ({\n  root: {\n    display: 'inline-block',\n  },\n});\n\nclass DisplayValueTypography extends React.PureComponent {\n  render() {\n    const { children, classes, id } = this.props;\n\n    // We use a span tag so that the element is inline\n    return (\n      <Typography\n        variant=\"subtitle1\"\n        component=\"span\"\n        className={classes.root}\n        id={id}\n        aria-label={this.props['aria-label']}\n      >\n        {children}\n      </Typography>\n    );\n  }\n}\n\nexport default withStyles(styles)(DisplayValueTypography);\n","import React from 'react';\nimport Switch from '@material-ui/core/Switch';\nimport CommonField from './common-field';\nimport attach from '../attach';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport DisplayValueTypography from './display-value-typography';\n\nclass BooleanField extends React.PureComponent {\n  handleChange = (event) => {\n    this.props.component.setValue(event.target.checked);\n  };\n\n  render() {\n    const {\n      value,\n      disabled,\n      component,\n      editable,\n      useDisplayValue,\n      label,\n    } = this.props;\n\n    let hideLabelUI = null;\n\n    let fld = null;\n    if (editable && !useDisplayValue) {\n      hideLabelUI = true;\n      fld = (\n        <FormControlLabel\n          control={\n            <Switch\n              checked={value ? value : false}\n              onChange={this.handleChange}\n              value=\"true\"\n              disabled={disabled}\n            />\n          }\n          label={label}\n        />\n      );\n    } else {\n      fld = (\n        <DisplayValueTypography>\n          {component.getDisplayValue()}\n        </DisplayValueTypography>\n      );\n    }\n\n    return (\n      <CommonField component={component} hideLabelUI={hideLabelUI}>\n        {fld}\n      </CommonField>\n    );\n  }\n}\n\nexport default attach([\n  'value',\n  'err',\n  'disabled',\n  'editable',\n  'useDisplayValue',\n  'label',\n])(BooleanField);\n","import React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Component from './component';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = (theme) => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(2),\n  },\n  content: {\n    flex: 1, // TODO: needed?\n  },\n});\n\nclass Card extends React.PureComponent {\n  render() {\n    const { classes, component } = this.props;\n\n    const content = component.get('content');\n    const title = component.get('title');\n\n    return (\n      <Grid container spacing={0} justify=\"center\">\n        <Grid item xs={12} sm={9} md={6} lg={6}>\n          <Paper className={classes.paper}>\n            <Grid container wrap=\"nowrap\">\n              <Grid item className={classes.content}>\n                <Typography variant=\"h5\" component=\"h2\">\n                  {title}\n                </Typography>\n                <Component component={content} />\n              </Grid>\n            </Grid>\n          </Paper>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(styles)(Card);\n","import React from 'react';\nimport attach from '../attach';\nimport Component from '../component';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = (theme) => ({\n  root: {\n    marginLeft: theme.spacing(1),\n  },\n});\n\nclass ComponentField extends React.PureComponent {\n  render() {\n    const { content, classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <Component component={content} />\n      </div>\n    );\n  }\n}\n\nComponentField = withStyles(styles)(ComponentField);\nComponentField = attach(['content'])(ComponentField);\nexport default ComponentField;\n","import React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = (theme) => ({\n  // break: {\n  //   flexBasis: '100%',\n  //   width: '0px',\n  //   height: '0px',\n  //   overflow: 'hidden'\n  // }\n  break: {\n    width: '100%',\n  },\n});\n\nclass FlexBreak extends React.PureComponent {\n  render() {\n    const { classes } = this.props;\n    return <div className={classes.break} />;\n  }\n}\n\nexport default withStyles(styles)(FlexBreak);\n","import each from 'lodash/each';\nclass Utils {\n  getIfDefined(props) {\n    const definedProps = {};\n    each(props, (value, name) => {\n      if (value !== undefined) {\n        definedProps[name] = value;\n      }\n    });\n    return definedProps;\n  }\n}\nexport default new Utils();\n","import React from 'react';\nimport componentUtils from '../component-utils';\nimport attach from '../attach';\nimport FlexBreak from '../flex-break';\nimport utils from '../utils';\n\n// Use MSON React Component instead?\nclass Field extends React.PureComponent {\n  render() {\n    const {\n      component,\n      hidden,\n      block,\n      accessEditable,\n      didCreate,\n      noBlock,\n      disabled,\n    } = this.props;\n\n    // Don't show the component until didCreate is true as we may need to wait for fields to be\n    // hidden or otherwise modified by listeners\n    if (hidden || !didCreate) {\n      return null;\n    } else if (component.getClassName() === 'Field') {\n      // Prevent an infinite loop caused by trying to render component=Field\n      return null;\n    } else {\n      // Get corresponding UI component\n      const Field = componentUtils.getUIComponent(component);\n\n      // Note: we use React.Fragment over a span as spans can cause issues with the flexbox layout\n      // when displaying a nested form\n      return (\n        <React.Fragment>\n          <Field\n            component={component}\n            accessEditable={accessEditable}\n            block={block}\n            {...utils.getIfDefined({ disabled })}\n          />\n          {!noBlock && block ? <FlexBreak /> : null}\n        </React.Fragment>\n      );\n    }\n  }\n}\n\nexport default attach(['hidden', 'block', 'didCreate'])(Field);\n","import React from 'react';\nimport Field from './field';\nimport attach from '../attach';\nimport HelpToolTip from './help-tool-tip';\nimport FlexBreak from '../flex-break';\n\nclass CompositeField extends React.PureComponent {\n  render() {\n    const {\n      component,\n      help,\n      editable,\n      useDisplayValue,\n      block,\n      disabled,\n    } = this.props;\n\n    let fields = [];\n\n    let lastIsBlock = false;\n\n    let first = true;\n\n    component.eachField((field, index, last) => {\n      // Don't show the field if we are using the display value and it is blank, e.g. it is the\n      // empty \"next\" field.\n      if (first || !useDisplayValue || !field.isBlank()) {\n        if (last && field.get('block')) {\n          lastIsBlock = true;\n        }\n        fields.push(\n          <Field\n            component={field}\n            key={index}\n            noBlock={last}\n            disabled={disabled}\n          />\n        );\n      }\n\n      if (first) {\n        first = false;\n      }\n    });\n\n    if (help && editable) {\n      fields.push(<HelpToolTip help={help} key=\"help\" />);\n    }\n\n    if (lastIsBlock && block !== false) {\n      // Break after any help\n      fields.push(<FlexBreak key=\"break\" />);\n    }\n\n    return fields;\n  }\n}\n\n// We want the component to update when we receive new fields\nexport default attach(['change', 'help', 'editable', 'useDisplayValue'])(\n  CompositeField\n);\n","import React from 'react';\nimport attach from '../attach';\nimport CommonField from './common-field';\nimport {\n  MuiPickersUtilsProvider,\n  DateTimePicker,\n  DatePicker,\n} from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport DisplayValueTypography from './display-value-typography';\n\nconst styles = (theme) => ({\n  root: {\n    // We need to add a margin as the picker doesn't play well with the Material-UI label\n    marginTop: theme.spacing(2),\n  },\n});\n\nclass DateField extends React.PureComponent {\n  handleDateChange = (date) => {\n    this.props.component.setValue(date);\n  };\n\n  handleBlur = () => {\n    this.props.component.setTouched(true);\n  };\n\n  render() {\n    const {\n      component,\n      classes,\n      value,\n      includeTime,\n      editable,\n      useDisplayValue,\n      minDate,\n      maxDate,\n      fullWidth,\n      disabled,\n      accessEditable,\n      format,\n    } = this.props;\n\n    const dis = accessEditable === false || disabled;\n\n    let shrinkLabel = false;\n\n    const Component = includeTime ? DateTimePicker : DatePicker;\n\n    let fld = null;\n    if (editable && !useDisplayValue) {\n      // The picker doesn't play well with the label from Material-UI so we need to manually shrink\n      // the label when there is a value.\n      shrinkLabel = !!value;\n      fld = (\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n          <span>\n            <Component\n              // Value cannot be undefined or else picker will default to today\n              value={value ? value : null}\n              onChange={this.handleDateChange}\n              clearable\n              className={classes.root}\n              minDate={minDate}\n              maxDate={maxDate}\n              onClose={this.handleBlur}\n              fullWidth={fullWidth}\n              disabled={dis}\n              id={component.getUniqueId()}\n              format={format}\n            />\n          </span>\n        </MuiPickersUtilsProvider>\n      );\n    } else {\n      fld = (\n        <DisplayValueTypography>\n          {component.getDisplayValue()}\n        </DisplayValueTypography>\n      );\n    }\n\n    return (\n      <CommonField component={component} shrinkLabel={shrinkLabel}>\n        {fld}\n      </CommonField>\n    );\n  }\n}\n\nDateField = withStyles(styles)(DateField);\n\nexport default attach([\n  'value',\n  'includeTime',\n  'editable',\n  'useDisplayValue',\n  'minDate',\n  'maxDate',\n  'fullWidth',\n  'disabled',\n  'format',\n])(DateField);\n","import React from 'react';\nimport Field from './fields/field';\nimport attach from './attach';\nimport access from 'mson/lib/access';\n\nclass Form extends React.PureComponent {\n  state = {\n    fieldsCanAccess: null,\n  };\n\n  // Enable automatic validation whenever a user changes data. This feature allows the user to see\n  // errors in real-time.\n  turnOnAutoValidate() {\n    this.props.component.set({ autoValidate: true });\n  }\n\n  calcFieldsCanAccess() {\n    const { component, mode } = this.props;\n    const canDowngrade = true;\n    const fieldsCanAccess = access.fieldsCanAccess(\n      // Default to update so that access control has a sensible default\n      mode ? mode : 'update',\n      component,\n      null,\n      canDowngrade\n    );\n\n    // We need to set the ignoreErrs state as there may be a field that is not accessible that is\n    // generating an error.\n    for (const field of component.getFields()) {\n      const ignoreErrs = fieldsCanAccess[field.get('name')] === undefined;\n      field.set({ ignoreErrs });\n    }\n\n    return fieldsCanAccess;\n  }\n\n  adjustAccess() {\n    let fieldsCanAccess = null;\n\n    // Was access specified? We check the form instead of this.props.access as this.props.access may\n    // not have been updated yet.\n    if (this.props.component.get('access')) {\n      fieldsCanAccess = this.calcFieldsCanAccess();\n    }\n\n    this.setState({ fieldsCanAccess });\n  }\n\n  constructor(props) {\n    super(props);\n    this.turnOnAutoValidate();\n\n    if (props.access) {\n      const fieldsCanAccess = this.calcFieldsCanAccess();\n      this.state.fieldsCanAccess = fieldsCanAccess;\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { component, access, mode } = this.props;\n\n    // Did the form change?\n    if (prevProps.component !== component) {\n      this.turnOnAutoValidate();\n    }\n\n    // Did the access, mode or form change?\n    if (\n      prevProps.access !== access ||\n      prevProps.mode !== mode ||\n      prevProps.component !== component ||\n      prevProps.value !== this.props.value\n    ) {\n      this.adjustAccess();\n    }\n  }\n\n  handleSave = (event) => {\n    // Stop the form from refreshing the page. We can't rely on the default functionality as there\n    // may be form errors that need to stop the form from submitting.\n    event.preventDefault();\n\n    // No errors?\n    const { component } = this.props;\n\n    // Is the submit action enabled?\n    if (!component.get('disableSubmit')) {\n      component.setTouched(true);\n      component.validate();\n      if (component.getErrs().length === 0) {\n        component.submit();\n      }\n    }\n  };\n\n  render() {\n    const { component, formTag, isLoading, disabled } = this.props;\n    const { fieldsCanAccess } = this.state;\n    const fields = component.get('fields');\n\n    // Hide until the data has finished loading\n    if (isLoading) {\n      return null;\n    }\n\n    // The form key is needed or else React will not re-render all fields when the field indexes are\n    // the same and we switch from route to another.\n    const key = component.getKey();\n\n    const flds = fields.map((field, index) => {\n      if (\n        fieldsCanAccess === null ||\n        fieldsCanAccess[field.get('name')] !== undefined\n      ) {\n        let accessEditable = null;\n        if (\n          fieldsCanAccess !== null &&\n          fieldsCanAccess[field.get('name')] === 'read'\n        ) {\n          accessEditable = false;\n        }\n        return (\n          <Field\n            key={key + '_' + index}\n            component={field}\n            accessEditable={accessEditable}\n            disabled={disabled}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n\n    if (formTag !== false) {\n      return <form onSubmit={this.handleSave}>{flds}</form>;\n    } else {\n      return flds;\n    }\n  }\n}\n\nexport default attach([\n  'access',\n  'mode',\n  'isLoading',\n\n  // We listen for a change to fields so that we can render when a field is added\n  'change',\n  'value',\n])(Form);\n","import React from 'react';\nimport CommonField from './common-field';\nimport Component from '../component';\nimport attach from '../attach';\nimport FlexBreak from '../flex-break';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = (theme) => ({\n  root: {\n    marginLeft: theme.spacing(2),\n\n    // The following flex properties are needed so that we can set a margin for all fields in the\n    // nested form\n    display: 'flex',\n    flexFlow: 'wrap',\n  },\n});\n\nclass FormField extends React.PureComponent {\n  render() {\n    const { component, hideLabel, classes, disabled } = this.props;\n\n    const isBlank = component.isBlank();\n\n    const form = component.get('form');\n\n    return (\n      <span>\n        {!hideLabel && (\n          <CommonField\n            component={component}\n            inlineLabel=\"true\"\n            shrinkLabel={!isBlank}\n            marginBottom={false}\n          />\n        )}\n        <FlexBreak />\n        <span className={classes.root}>\n          <Component component={form} formTag={false} disabled={disabled} />\n        </span>\n      </span>\n    );\n  }\n}\n\nFormField = withStyles(styles)(FormField);\n\nexport default attach([\n  'hideLabel',\n  'value', // Changes when the value is or isn't blank\n])(FormField);\n","import React from 'react';\nimport attach from './attach';\nimport Component from './component';\n\nclass Fragment extends React.PureComponent {\n  render() {\n    return (\n      <React.Fragment>\n        {this.props.items.map((item, index) => (\n          <Component component={item} key={index} />\n        ))}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default attach(['items'])(Fragment);\n","import React from 'react';\nimport attach from './attach';\nimport GridMui from '@material-ui/core/Grid';\nimport Component from './component';\n\nclass GridItem extends React.PureComponent {\n  render() {\n    const { hidden, content, xl, lg, md, sm, xs } = this.props;\n    if (hidden) {\n      return null;\n    } else {\n      return (\n        <GridMui item xl={xl} lg={lg} md={md} sm={sm} xs={xs}>\n          <Component component={content} />\n        </GridMui>\n      );\n    }\n  }\n}\n\nexport default attach(['hidden', 'content', 'xl', 'lg', 'md', 'sm', 'xs'])(\n  GridItem\n);\n","import React from 'react';\nimport attach from './attach';\nimport GridMui from '@material-ui/core/Grid';\nimport GridItem from './grid-item';\n\nclass Grid extends React.PureComponent {\n  render() {\n    return (\n      <GridMui container>\n        {this.props.items.map((item, index) => (\n          <GridItem component={item} key={index} />\n        ))}\n      </GridMui>\n    );\n  }\n}\n\nexport default attach(['items'])(Grid);\n","import React from 'react';\nimport IconButton from './icon-button';\nimport Grid from '@material-ui/core/Grid';\n\n// FUTURE: support for hamburger menus\nexport default class FormCardButtons extends React.PureComponent {\n  render() {\n    const {\n      forbidUpdate,\n      forbidDelete,\n      editable,\n      disabled,\n      archivedAt,\n      onEdit,\n      onDelete,\n      id,\n    } = this.props;\n\n    let updateButton = null;\n    if (!forbidUpdate) {\n      updateButton = (\n        <IconButton\n          onClick={onEdit}\n          icon=\"Edit\"\n          tooltip=\"Edit\"\n          aria-label={`Edit ${id}`}\n        />\n      );\n    }\n\n    let deleteButton = null;\n    if (!forbidDelete) {\n      const title = archivedAt ? 'Restore' : 'Delete';\n      deleteButton = (\n        <IconButton\n          onClick={onDelete}\n          icon={title}\n          tooltip={title}\n          aria-label={`Delete ${id}`}\n        />\n      );\n    }\n\n    if (editable && !disabled && (!forbidUpdate || !forbidDelete)) {\n      return (\n        <Grid item>\n          {updateButton}\n          {deleteButton}\n        </Grid>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n","import React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Component from './component';\nimport attach from './attach';\nimport FormCardButtons from './form-card-buttons';\n\nconst styles = (theme) => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(2),\n  },\n  content: {\n    flex: 1,\n    cursor: 'pointer',\n  },\n});\n\n// Use PureComponent so that we avoid unnecessary re-rendering\nclass FormCard extends React.PureComponent {\n  handleClick = (event) => {\n    if (this.props.onClick) {\n      this.props.onClick(event, this.props.component);\n    }\n  };\n\n  handleEdit = (event, id) => {\n    if (this.props.onEdit) {\n      this.props.onEdit(event, this.props.component);\n    }\n  };\n\n  handleDelete = (event) => {\n    // this.handleMoreClose();\n    if (this.props.onDelete) {\n      this.props.onDelete(this.props.component);\n    }\n  };\n\n  render() {\n    const {\n      classes,\n      component,\n      forbidUpdate,\n      forbidDelete,\n      editable,\n      disabled,\n      value,\n      buttons,\n      id,\n    } = this.props;\n\n    let cardButtons;\n    if (buttons) {\n      cardButtons = <Component component={buttons} />;\n    } else {\n      cardButtons = (\n        <FormCardButtons\n          forbidUpdate={forbidUpdate}\n          forbidDelete={forbidDelete}\n          editable={editable}\n          disabled={disabled}\n          archivedAt={value.archivedAt}\n          onEdit={(event) => this.handleEdit(event)}\n          onDelete={(event) => this.handleDelete(event)}\n          id={id}\n        />\n      );\n    }\n\n    return (\n      <div>\n        <Paper className={classes.paper}>\n          <Grid container wrap=\"nowrap\">\n            <Grid\n              item\n              className={classes.content}\n              onClick={(event) => this.handleClick(event)}\n              role=\"button\"\n              aria-label={this.props['aria-label']}\n              id={id}\n            >\n              <Component component={component} formTag={false} mode=\"read\" />\n            </Grid>\n            {cardButtons}\n          </Grid>\n        </Paper>\n      </div>\n    );\n  }\n}\n\nFormCard = withStyles(styles)(FormCard);\nexport default attach(['value'])(FormCard);\n","import React from 'react';\nimport Button from './button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport withMobileDialog from '@material-ui/core/withMobileDialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Component from './component';\nimport attach from './attach';\nimport CollectionFieldCore from 'mson/lib/fields/collection-field';\n\nclass FormDialog extends React.PureComponent {\n  state = { saveClicked: false, previousMode: null };\n\n  handleClose = (withCancelButton) => {\n    // Prevent the user from losing data when pressing esc or clicking outside dialog\n    const { mode, onClose, onCancel, currentForm } = this.props;\n    if (withCancelButton || mode !== 'update') {\n      if (mode === 'update') {\n        if (onCancel) {\n          onCancel(currentForm);\n        }\n      } else {\n        if (onClose) {\n          onClose(currentForm);\n        }\n      }\n    }\n  };\n\n  handleEdit = () => {\n    if (this.props.onEdit) {\n      this.props.onEdit(this.props.currentForm);\n    }\n  };\n\n  handleSave = (event) => {\n    // Stop the form from refreshing the page\n    event.preventDefault();\n\n    // Should the submit action be disabled? For example, we may be editing in a nested dialog\n    if (!this.props.disableSubmit) {\n      if (this.props.onSave) {\n        this.props.onSave();\n      }\n\n      // Disable the save button so that the user sees that something is being processed\n      this.setState({ saveClicked: true });\n    }\n  };\n\n  handleDelete = () => {\n    if (this.props.onDelete) {\n      this.props.onDelete(this.props.currentForm);\n    }\n  };\n\n  isOpen() {\n    const { mode } = this.props;\n    if (\n      mode === CollectionFieldCore.MODES.DELETE ||\n      mode === CollectionFieldCore.MODES.RESTORE\n    ) {\n      // Don't show the dialog when restoring\n      return false;\n    } else {\n      return !!mode;\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    // If the mode or err changes then allow the user to click save\n    if (\n      this.props.mode !== prevProps.mode ||\n      this.props.err !== prevProps.err\n    ) {\n      this.setState({ saveClicked: false });\n    }\n\n    if (this.props.mode !== prevProps.mode) {\n      this.setState({ previousMode: prevProps.mode });\n    }\n  }\n\n  render() {\n    const {\n      mode,\n      component,\n      forbidUpdate,\n      forbidDelete,\n      value,\n      fullScreen,\n    } = this.props;\n\n    const { saveClicked, previousMode } = this.state;\n\n    const disableSave =\n      component.hasErrorForTouchedField() ||\n      !component.get('dirty') ||\n      saveClicked;\n\n    const open = this.isOpen();\n\n    let buttons = null;\n\n    // Note: we analyze the previousMode so that the user isn't flashed with new buttons immediately\n    // after they click save or close the dialog\n    if (\n      mode === 'update' ||\n      mode === 'create' ||\n      (mode === null &&\n        (previousMode === 'update' || previousMode === 'create'))\n    ) {\n      buttons = (\n        <div>\n          {/* We use type=submit so that the form is submitted when the user presses enter */}\n          <Button\n            type=\"submit\"\n            label=\"Save\"\n            icon=\"Save\"\n            disabled={disableSave}\n          />\n          <Button\n            label=\"Cancel\"\n            icon=\"Cancel\"\n            onClick={() => this.handleClose(true)}\n          />\n        </div>\n      );\n    } else if (!forbidUpdate || !forbidDelete) {\n      buttons = (\n        <div>\n          {forbidUpdate ? (\n            ''\n          ) : (\n            <Button label=\"Edit\" icon=\"Edit\" onClick={this.handleEdit} />\n          )}\n          {forbidDelete ? (\n            ''\n          ) : (\n            <Button\n              label={value.archivedAt ? 'Restore' : 'Delete'}\n              icon={value.archivedAt ? 'Restore' : 'Delete'}\n              onClick={this.handleDelete}\n            />\n          )}\n          <Button\n            label=\"Close\"\n            icon=\"Cancel\"\n            onClick={() => this.handleClose(true)}\n          />\n        </div>\n      );\n    }\n\n    return (\n      <Dialog\n        // fullScreen will be true on a small screen\n        fullScreen={fullScreen}\n        open={open}\n        onClose={() => this.handleClose(false)}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        {/* We use a form element so that we can submit the form on enter */}\n        <form onSubmit={this.handleSave}>\n          <DialogContent>\n            <Component component={component} formTag={false} mode={mode} />\n          </DialogContent>\n          {buttons ? <DialogActions>{buttons}</DialogActions> : ''}\n        </form>\n      </Dialog>\n    );\n  }\n}\n\nFormDialog = withMobileDialog()(FormDialog);\nFormDialog = attach(['err', 'dirty', 'value', 'mode', 'disableSubmit'])(\n  FormDialog\n);\nexport default FormDialog;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport default class ConfirmationDialog extends React.PureComponent {\n  handleClose = (yes) => {\n    if (this.props.onClose) {\n      this.props.onClose(yes);\n    }\n  };\n\n  render() {\n    const { title, text, open, alert } = this.props;\n    return (\n      <div>\n        <Dialog\n          open={open}\n          onClose={() => this.handleClose(false)}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">\n            {title ? title : ''}\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              {text}\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            {alert ? null : (\n              <Button onClick={() => this.handleClose(false)} color=\"primary\">\n                No\n              </Button>\n            )}\n            <Button\n              onClick={() => this.handleClose(true)}\n              color=\"primary\"\n              autoFocus\n            >\n              {alert ? 'OK' : 'Yes'}\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Icon from '../icon';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = (theme) => ({\n  formControl: {\n    // Specify a more appropriate min width so that the field is wide enough to cover most labels\n    // minWidth: 120\n  },\n  flip: {\n    transform: 'scaleY(-1)',\n  },\n});\n\nclass SelectOrder extends React.PureComponent {\n  handleClick = () => {\n    const sortOrder = this.props.sortOrder === 'ASC' ? 'DESC' : 'ASC';\n    this.props.onChange({ sortOrder });\n  };\n\n  handleChange = (event) => {\n    this.props.onChange({ sortBy: event.target.value });\n  };\n\n  render() {\n    const { classes, sortBy, sortOrder, options } = this.props;\n\n    const flipped = sortOrder !== 'DESC';\n\n    const items = options.map((option) => {\n      return (\n        <MenuItem value={option.value} key={option.value}>\n          {option.label}\n        </MenuItem>\n      );\n    });\n\n    // If we wanted the icon as an adornment:\n    // <TextField\n    //   select\n    //   InputProps={{\n    //     startAdornment:\n    //     <InputAdornment position=\"start\">\n    //       <IconButton color=\"primary\" aria-label=\"new\" onClick={this.handleOrder}>\n    //         <Icon icon=\"Sort\" className={classes.flip} />\n    //       </IconButton>\n    //     </InputAdornment>,\n    //   }}\n    // >\n    //   <MenuItem value={10}>Ten</MenuItem>\n    //   <MenuItem value={20}>Twenty</MenuItem>\n    //   <MenuItem value={30}>Thirty</MenuItem>\n    // </TextField>\n    return (\n      <div>\n        <FormControl className={classes.formControl}>\n          {/*\n          <InputLabel>Sort by</InputLabel>\n          */}\n          <Select value={sortBy} onChange={this.handleChange}>\n            <MenuItem value=\"\">\n              <em>None</em>\n            </MenuItem>\n            {items}\n          </Select>\n        </FormControl>\n        <IconButton\n          color=\"primary\"\n          aria-label=\"sort order\"\n          onClick={this.handleClick}\n        >\n          <Icon icon=\"Sort\" className={flipped ? classes.flip : null} />\n        </IconButton>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(SelectOrder);\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport FormCard from '../form-card';\nimport FormDialog from '../form-dialog';\nimport attach from '../attach';\nimport Button from '../button';\nimport Typography from '@material-ui/core/Typography';\nimport ConfirmationDialog from '../confirmation-dialog';\nimport access from 'mson/lib/access';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './collection-field.css';\nimport SelectOrder from './select-order';\nimport ButtonField from 'mson/lib/fields/button-field';\nimport Icon from '../icon';\nimport CommonField from './common-field';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport CollectionFieldCore from 'mson/lib/fields/collection-field';\n\nconst getItemStyle = (isDragging, draggableStyle, theme) => ({\n  // some basic styles to make the items look a bit nicer\n  userSelect: 'none',\n  padding: theme.spacing(0.125),\n  margin: `0 0 ${theme.spacing(0.125)}px 0`,\n\n  // change background colour if dragging\n  background: isDragging ? theme.palette.secondary[400] : undefined,\n\n  // styles we need to apply on draggables\n  ...draggableStyle,\n});\n\nconst getListStyle = (isDraggingOver, theme) => ({\n  background: isDraggingOver ? theme.palette.grey[300] : undefined,\n  width: '100%',\n});\n\n// Note:\n//   - We use a dialog to view/edit the forms as we want to be able to display just a few pieces\n//     of data in the list and all the data when viewing/editing.\n\nconst styles = (theme) => ({\n  root: {\n    // Needed when field is nested in a form that is nested in a form, e.g. FormEditor\n    width: '100%',\n  },\n  spacer: {\n    backgroundColor: theme.palette.grey[300],\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    animation: 'fadeIn 1s infinite alternate',\n  },\n  footer: {\n    // Create space at the footer so that it is more evident to the user that the next page has been\n    // loaded\n    height: 50,\n    backgroundColor: theme.palette.grey[300],\n    margin: theme.spacing(1),\n    animation: 'fadeIn 1s infinite alternate',\n  },\n});\n\nclass CollectionField extends React.PureComponent {\n  state = {\n    sortBy: '',\n    sortOrder: 'ASC',\n  };\n\n  handleClose = () => {\n    this.props.component.set({ mode: null });\n  };\n\n  handleCancel = (form) => {\n    const { component, preventReadAction } = this.props;\n    if (component.get('skipRead') || preventReadAction) {\n      component.set({ mode: null });\n    } else {\n      component.set({\n        currentForm: form,\n        mode: CollectionFieldCore.MODES.READ,\n      });\n    }\n  };\n\n  handleClick = (form) => {\n    const { component } = this.props;\n    if (component.get('skipRead')) {\n      component.set({\n        currentForm: form,\n        mode: CollectionFieldCore.MODES.UPDATE,\n      });\n    } else {\n      component.set({\n        currentForm: form,\n        mode: CollectionFieldCore.MODES.READ,\n      });\n    }\n  };\n\n  handleEdit = (form) => {\n    this.props.component.set({\n      currentForm: form,\n      mode: CollectionFieldCore.MODES.UPDATE,\n    });\n  };\n\n  handleNew = () => {\n    this.props.component.set({\n      currentForm: null,\n      mode: CollectionFieldCore.MODES.CREATE,\n    });\n  };\n\n  handleSave = async () => {\n    await this.props.component.save();\n  };\n\n  handleDelete = async (formToDelete) => {\n    const { component } = this.props;\n\n    const form = formToDelete ? formToDelete : component.get('form');\n\n    const archivedAt = form.getValue('archivedAt');\n\n    // Are we restoring?\n    if (archivedAt) {\n      component.set({\n        currentForm: form,\n        mode: CollectionFieldCore.MODES.RESTORE,\n      });\n    } else if (formToDelete) {\n      component.set({\n        currentForm: formToDelete,\n        mode: CollectionFieldCore.MODES.DELETE,\n      });\n    }\n  };\n\n  handleConfirmationClose = async (yes) => {\n    const { component } = this.props;\n    if (yes) {\n      await component.archive(component.get('form'));\n    }\n    component.set({ mode: null });\n  };\n\n  canCreate() {\n    return access.canCreate(this.props.component.get('form'));\n  }\n\n  canUpdate() {\n    return access.canUpdate(this.props.component.get('form'));\n  }\n\n  canArchive() {\n    return access.canArchive(this.props.component.get('form'));\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.bufferTopId !== prevProps.bufferTopId) {\n      // Resize the spacer now that the newly prepended items have been rendered\n      this.props.component._infiniteLoader.resizeSpacer(this.props.bufferTopId);\n    }\n\n    if (this.props.spacerHeight !== prevProps.spacerHeight) {\n      this.props.component._infiniteLoader.setSpacerResizing(false);\n    }\n\n    if (this.props.change !== prevProps.change) {\n      this.props.component.set({ isLoading: false });\n    }\n  }\n\n  canDrag() {\n    const { forbidOrder, showArchived, searchString, order } = this.props;\n\n    // Can we order by dragging?\n    return !forbidOrder && !showArchived && !searchString && !order;\n  }\n\n  cards(canUpdate, canArchive) {\n    const {\n      component,\n      forbidUpdate,\n      forbidDelete,\n      forbidOrder,\n      editable,\n      disabled,\n      useDisplayValue,\n      theme,\n    } = this.props;\n\n    // Force to 1 colum when ordering allowed\n    const maxColumns = forbidOrder === false ? 1 : this.props.maxColumns;\n\n    const maxGrids = 12 / maxColumns;\n\n    let cards = [];\n\n    let index = 0;\n    for (const form of component.getForms()) {\n      // TODO: Rendering should not change form. Use utils.getIfDefined() in form to allow passing\n      // in of editable via React layer\n      form.setEditable(false);\n\n      // We need to use the id for the key as we use the same list of cards when toggling\n      // showArchive\n      const key = form.getUniqueId();\n\n      // Note: we use an id instead of ref so that more of our logic can be reused across different\n      // frameworks. We use the form id so that we have a consistent way of referencing the element\n      // for things like infinite loading.\n      const id = component.getUniqueItemId(component._getFormKey(form));\n\n      const formExtras = component.getFormExtras(form);\n\n      const item = (\n        <Grid item xs={12} sm={maxGrids} lg={maxGrids} key={key} id={id}>\n          <FormCard\n            onClick={() => this.handleClick(form)}\n            onEdit={() => this.handleEdit(form)}\n            onDelete={this.handleDelete}\n            component={form}\n            forbidUpdate={forbidUpdate || !canUpdate || useDisplayValue}\n            forbidDelete={forbidDelete || !canArchive || useDisplayValue}\n            editable={editable}\n            disabled={disabled}\n            buttons={formExtras?.buttons}\n            id={id}\n            aria-label={`View ${id}`}\n          />\n        </Grid>\n      );\n\n      if (this.canDrag()) {\n        cards.push(\n          <Draggable key={id} draggableId={id} index={index++}>\n            {(provided, snapshot) => (\n              <div\n                ref={provided.innerRef}\n                {...provided.draggableProps}\n                {...provided.dragHandleProps}\n                style={getItemStyle(\n                  snapshot.isDragging,\n                  provided.draggableProps.style,\n                  theme\n                )}\n                aria-label={`Drag ${id}`}\n              >\n                {item}\n              </div>\n            )}\n          </Draggable>\n        );\n      } else {\n        cards.push(item);\n      }\n    }\n\n    return cards;\n  }\n\n  handleOrdering = (props) => {\n    // TODO: shouldn't the ordering just be in the field and not have to be in this state?\n    this.setState(props, () => {\n      this.props.component.set({\n        order: this.state.sortBy\n          ? [[this.state.sortBy, this.state.sortOrder]]\n          : null,\n      });\n    });\n  };\n\n  sortOptions() {\n    const { component } = this.props;\n    if (component && component.get('form')) {\n      const form = component.get('form');\n      const fieldsCanAccess = access.fieldsCanAccess('read', form);\n      const fields = [];\n      form.eachField((field) => {\n        const name = field.get('name');\n\n        // Do we have access to the field? Allowed to sort? Not hidden? Not a button?\n        if (\n          fieldsCanAccess[name] !== undefined &&\n          !field.get('forbidSort') &&\n          !field.get('hidden') &&\n          !(field instanceof ButtonField)\n        ) {\n          fields.push({\n            value: (form.isDefaultField(name) ? '' : 'fieldValues.') + name,\n            label: field.get('label'),\n          });\n        }\n      });\n      return fields;\n    }\n  }\n\n  header(numCards) {\n    const {\n      forbidCreate,\n      editable,\n      disabled,\n      component,\n      forbidSort,\n      store,\n      useDisplayValue,\n    } = this.props;\n\n    const { sortBy, sortOrder } = this.state;\n\n    const singularLabel = component.getSingularLabel();\n\n    const reachedMax = component.reachedMax();\n\n    const canCreate = this.canCreate();\n\n    const showNewButton =\n      editable &&\n      !disabled &&\n      !useDisplayValue &&\n      !forbidCreate &&\n      !reachedMax &&\n      canCreate;\n\n    const canOrder = !forbidSort;\n\n    const sortOptions = this.sortOptions();\n\n    // Sorting only works when there is a backing store\n    const hasStore = !!store;\n    const showOrder = numCards > 0 && hasStore;\n\n    return (\n      <Grid container spacing={0}>\n        <Grid item xs={12} sm={6} lg={6}>\n          {showNewButton ? (\n            <Button\n              aria-label=\"new\"\n              onClick={this.handleNew}\n              icon=\"Add\"\n              label={'New ' + singularLabel}\n              marginTop={false}\n            />\n          ) : null}\n        </Grid>\n        <Grid item xs={12} sm={6} lg={6} align=\"right\">\n          {showOrder && canOrder ? (\n            <SelectOrder\n              onChange={this.handleOrdering}\n              sortBy={sortBy}\n              sortOrder={sortOrder}\n              options={sortOptions}\n            />\n          ) : null}\n        </Grid>\n      </Grid>\n    );\n  }\n\n  onDragEnd = (result) => {\n    // dropped outside the list\n    if (!result.destination) {\n      return;\n    }\n\n    if (result.destination.index !== result.source.index) {\n      this.props.component.moveAndSaveForm({\n        sourceIndex: result.source.index,\n        destinationIndex: result.destination.index,\n      });\n    }\n  };\n\n  // TODO: how to prevent re-rendering of all form-cards when dialog open state is changed? Or, does\n  // it not really matter as we are using PureComponents?\n  field() {\n    const {\n      forbidUpdate,\n      forbidDelete,\n      component,\n      spacerHeight,\n      classes,\n      isLoading,\n      form,\n      currentForm,\n      noResults,\n      disabled,\n      accessEditable,\n      useDisplayValue,\n      theme,\n      preventUpdate,\n      preventDeleteAction,\n      mode,\n    } = this.props;\n\n    const dis = accessEditable === false || disabled;\n\n    let confirmationOpen = false;\n    let confirmationTitle = null;\n    if (\n      !preventDeleteAction &&\n      currentForm &&\n      mode === CollectionFieldCore.MODES.DELETE &&\n      !currentForm.getValue('archivedAt')\n    ) {\n      confirmationOpen = true;\n      // confirmationTitle: `Are you sure you want to delete this ${singularLabel}?`\n      confirmationTitle = 'Delete this?';\n    }\n\n    const label = component.get('label').toLowerCase();\n\n    const canUpdate = this.canUpdate();\n    const canArchive = this.canArchive();\n\n    const spacerStyle = { height: spacerHeight };\n\n    const spacerId = component.get('spacerId');\n\n    let cards = this.cards(canUpdate, canArchive);\n\n    let cardContainer = cards;\n\n    if (this.canDrag()) {\n      cardContainer = (\n        <DragDropContext onDragEnd={this.onDragEnd}>\n          <Droppable droppableId=\"droppable\">\n            {(provided, snapshot) => (\n              <div\n                ref={provided.innerRef}\n                style={getListStyle(snapshot.isDraggingOver, theme)}\n              >\n                {cards}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </DragDropContext>\n      );\n    }\n\n    const searchString = component.get('searchString');\n\n    // Is the user searching and there are no records?\n    const showNoRecords = searchString && noResults;\n\n    const header = this.header(cards.length);\n\n    return (\n      <div>\n        {header}\n\n        {showNoRecords ? (\n          <Typography variant=\"h4\">\n            <Icon icon=\"Info\" /> No {label} found\n          </Typography>\n        ) : null}\n\n        <div id={spacerId} className={classes.spacer} style={spacerStyle} />\n\n        <Grid container spacing={0}>\n          {cardContainer}\n        </Grid>\n\n        {isLoading ? <div className={classes.footer} /> : null}\n\n        {/* TODO: would it be better to have a single, global FormDialog instance? Or, is it better\n        to have multiple instances so that you can have different memory spaces. Currenly we have a\n        hybrid where we have a dialog per form. There is almost certainly more overhead in having an\n        instance per record, right? */}\n        <FormDialog\n          component={form}\n          currentForm={currentForm}\n          onClose={this.handleClose}\n          onCancel={this.handleCancel}\n          onSave={this.handleSave}\n          onEdit={this.handleEdit}\n          onDelete={this.handleDelete}\n          forbidUpdate={\n            forbidUpdate ||\n            !canUpdate ||\n            dis ||\n            useDisplayValue ||\n            preventUpdate\n          }\n          forbidDelete={\n            forbidDelete ||\n            !canArchive ||\n            dis ||\n            useDisplayValue ||\n            preventDeleteAction\n          }\n        />\n\n        <ConfirmationDialog\n          open={confirmationOpen}\n          onClose={this.handleConfirmationClose}\n          title={confirmationTitle}\n        />\n      </div>\n    );\n  }\n\n  render() {\n    const { component, hideLabel, classes } = this.props;\n\n    const isBlank = component.isBlank();\n\n    return (\n      <span className={classes.root}>\n        {!hideLabel && (\n          <CommonField\n            component={component}\n            inlineLabel=\"true\"\n            shrinkLabel={!isBlank}\n          />\n        )}\n        {this.field()}\n      </span>\n    );\n  }\n}\n\nCollectionField = withStyles(styles, { withTheme: true })(CollectionField);\nCollectionField = attach([\n  'change',\n  'label',\n  'singularLabel',\n  'forbidCreate',\n  'forbidUpdate',\n  'forbidDelete',\n  'forbidSort',\n  'forbidOrder',\n  'editable',\n  'disabled',\n  'spacerHeight',\n  'bufferTopId',\n  'isLoading',\n  'form',\n  'currentForm',\n  'mode',\n  'noResults',\n  'store',\n  'maxColumns',\n  'useDisplayValue',\n  'hideLabel',\n  'showArchived',\n  'searchString',\n  'order',\n  'preventReadAction',\n  'preventUpdate',\n  'preventDeleteAction',\n  'buttonsFactory',\n])(CollectionField);\nexport default CollectionField;\n","import React from 'react';\nimport Field from './field';\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from '../icon';\nimport FlexBreak from '../flex-break';\nimport attach from '../attach';\nimport HelpToolTip from './help-tool-tip';\n\nclass ListItemField extends React.PureComponent {\n  handleDelete = () => {\n    this.props.component.emit('delete');\n  };\n\n  render() {\n    // Note: allowDelete and help have to be passed in as a prop as it is really the parent's values\n    // that we need\n    const { component, allowDelete, help, disabled, editable } = this.props;\n\n    if (component) {\n      const block = component.get('block');\n      return (\n        <span>\n          <Field component={component} block={false} disabled={disabled} />\n          {allowDelete && !disabled && editable ? (\n            <IconButton aria-label=\"Delete\" onClick={this.handleDelete}>\n              <Icon icon=\"DeleteIcon\" />\n            </IconButton>\n          ) : null}\n          {help && editable ? <HelpToolTip help={help} /> : ''}\n          {block ? <FlexBreak /> : null}\n        </span>\n      );\n    } else {\n      // component can be falsy if it was just deleteed\n      return null;\n    }\n  }\n}\n\n// We want the component to update when the value changes as blank fields should not display a\n// delete button\nexport default attach(['value', 'disabled', 'editable'])(ListItemField);\n","import React from 'react';\nimport ListItemField from './list-item-field';\nimport attach from '../attach';\nimport Button from '../button';\nimport CommonField from './common-field';\n\nclass ListField extends React.PureComponent {\n  handleNew = () => {\n    this.props.component.createField();\n\n    // Reset the touched state so that errors aren't reported immediately when the user hasn't\n    // finished entering the new value.\n    this.props.component.set({ touched: false });\n  };\n\n  render() {\n    const {\n      component,\n      allowDelete,\n      useDisplayValue,\n      autoCreateFields,\n      hideLabel,\n      editable,\n      canDeleteEmpty,\n      accessEditable,\n      disabled,\n      hideDeleteButton,\n    } = this.props;\n\n    const singularLabel = component.getSingularLabel();\n\n    const dis = accessEditable === false || disabled;\n\n    let fields = [];\n    let first = true;\n\n    const isBlank = component.isBlank();\n\n    component.eachField((field, index) => {\n      const fieldIsBlank = field.isBlank();\n\n      // When using the display value, we hide any blank fields, e.g. the empty \"next\" fields\n      if (first || !useDisplayValue || !fieldIsBlank) {\n        // We have to pass allowDelete as it is the allowDelete of the parent\n        fields.push(\n          <ListItemField\n            component={field}\n            key={index}\n            allowDelete={\n              allowDelete &&\n              !useDisplayValue &&\n              (canDeleteEmpty || !fieldIsBlank) &&\n              !hideDeleteButton\n            }\n            disabled={disabled}\n          />\n        );\n      }\n\n      if (first) {\n        first = false;\n      }\n    });\n\n    if (!autoCreateFields && !useDisplayValue && editable && !dis) {\n      fields.push(\n        <Button\n          key=\"button\"\n          aria-label=\"add\"\n          onClick={this.handleNew}\n          icon=\"Add\"\n          label={'Add ' + (singularLabel ? singularLabel : '')}\n          marginTop={false}\n        />\n      );\n    }\n\n    return (\n      <span>\n        {!hideLabel && (\n          <CommonField\n            component={component}\n            inlineLabel=\"true\"\n            marginBottom={false}\n            shrinkLabel={!isBlank}\n          />\n        )}\n        <div>{fields}</div>\n      </span>\n    );\n  }\n}\n\n// We want the component to update when we receive new fields\nexport default attach([\n  'change',\n  'help',\n  'allowDelete',\n  'useDisplayValue',\n  'autoCreateFields',\n  'hideLabel',\n  'value',\n  'editable',\n  'canDeleteEmpty',\n  'disabled',\n  'hideDeleteButton',\n  'singularLabel',\n  'label',\n])(ListField);\n","import React from 'react';\nimport attach from '../attach';\nimport ReCAPTCHA from 'react-google-recaptcha';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport globals from 'mson/lib/globals';\n\nconst styles = (theme) => ({\n  captcha: {\n    margin: theme.spacing(1),\n  },\n});\n\nclass ReCAPTCHAField extends React.PureComponent {\n  handleChange = (value) => {\n    this.props.component.setValue(value);\n  };\n\n  render() {\n    const {\n      disabled,\n      editable,\n      accessEditable,\n      classes,\n      useDisplayValue,\n    } = this.props;\n\n    const isEditable = accessEditable !== false && editable && !disabled;\n\n    const siteKey = globals.get('reCAPTCHASiteKey');\n\n    if (isEditable && !useDisplayValue) {\n      return (\n        <div className={classes.captcha}>\n          <ReCAPTCHA\n            ref=\"recaptcha\"\n            sitekey={siteKey}\n            onChange={this.handleChange}\n          />\n        </div>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nReCAPTCHAField = withStyles(styles)(ReCAPTCHAField);\n\nexport default attach(['disabled', 'editable', 'useDisplayValue'])(\n  ReCAPTCHAField\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport Select from 'react-select';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Chip from '@material-ui/core/Chip';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Icon from '../icon';\nimport { emphasize } from '@material-ui/core/styles/colorManipulator';\n\nconst styles = (theme) => ({\n  input: {\n    display: 'flex',\n    padding: 0,\n    minWidth: 240, // A good default for most labels\n    height: 'auto',\n  },\n  valueContainer: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    flex: 1,\n    alignItems: 'center',\n\n    // Adjust for MUI label\n    marginTop: theme.spacing(2) + 5,\n  },\n  chip: {\n    margin: `${theme.spacing(1)}px ${theme.spacing(0.25)}px`,\n  },\n  chipFocused: {\n    backgroundColor: emphasize(\n      theme.palette.type === 'light'\n        ? theme.palette.grey[300]\n        : theme.palette.grey[700],\n      0.08\n    ),\n  },\n  noOptionsMessage: {\n    padding: `${theme.spacing(1)}px ${theme.spacing(2)}px`,\n  },\n  singleValue: {\n    fontSize: theme.typography.subtitle1.fontSize,\n  },\n  // placeholder: {\n  //   position: 'absolute',\n  //   left: 2,\n  //   fontSize: theme.typography.subtitle1.fontSize\n  // },\n  paper: {\n    position: 'absolute',\n    zIndex: 1,\n\n    // Adjust for MUI label\n    // marginTop: theme.spacing.unit * 7\n    marginTop: theme.spacing(1),\n  },\n  root: {\n    // Allow for help icon to be placed on right of field\n    display: 'inline-flex',\n  },\n  fullWidth: {\n    width: '100%',\n  },\n  disabled: {\n    color: theme.palette.text.secondary,\n  },\n});\n\nfunction NoOptionsMessage(props) {\n  return (\n    <Typography\n      color=\"textSecondary\"\n      className={props.selectProps.classes.noOptionsMessage}\n      {...props.innerProps}\n    >\n      {props.children}\n    </Typography>\n  );\n}\n\nfunction inputComponent({ inputRef, ...props }) {\n  return <div ref={inputRef} {...props} />;\n}\n\nfunction Control(props) {\n  const optionalProps = {};\n  if (props.selectProps.fullWidth) {\n    optionalProps.fullWidth = true;\n  }\n  return (\n    <TextField\n      {...optionalProps}\n      InputProps={{\n        inputComponent,\n        inputProps: {\n          className: props.selectProps.classes.input,\n          inputRef: props.innerRef,\n          children: props.children,\n          // We need to specify the aria-label so that this element is the one that receives focus\n          // for the target field label\n          'aria-label': props.selectProps.ariaLabel,\n          ...props.innerProps,\n        },\n      }}\n      {...props.selectProps.textFieldProps}\n    />\n  );\n}\n\nfunction Option(props) {\n  return (\n    <MenuItem\n      buttonRef={props.innerRef}\n      selected={props.isFocused}\n      component=\"div\"\n      style={{\n        fontWeight: props.isSelected ? 500 : 400,\n      }}\n      {...props.innerProps}\n    >\n      {props.children}\n    </MenuItem>\n  );\n}\n\n// Note: kept in case we want to implement the placeholder in the future\n// function Placeholder(props) {\n//   return (\n//     <Typography\n//       color=\"textSecondary\"\n//       className={props.selectProps.classes.placeholder}\n//       {...props.innerProps}\n//     >\n//       {props.children}\n//     </Typography>\n//   );\n// }\n\nfunction SingleValue(props) {\n  return (\n    <Typography\n      className={classNames(\n        props.selectProps.classes.singleValue,\n        props.selectProps.isDisabled ? props.selectProps.classes.disabled : null\n      )}\n      {...props.innerProps}\n    >\n      {props.children}\n    </Typography>\n  );\n}\n\nfunction ValueContainer(props) {\n  return (\n    <div className={props.selectProps.classes.valueContainer}>\n      {props.children}\n    </div>\n  );\n}\n\nfunction MultiValue(props) {\n  return (\n    <Chip\n      tabIndex={-1}\n      label={props.children}\n      className={classNames(props.selectProps.classes.chip, {\n        [props.selectProps.classes.chipFocused]: props.isFocused,\n        [props.selectProps.classes.disabled]: props.selectProps.isDisabled,\n      })}\n      onDelete={props.removeProps.onClick}\n      deleteIcon={\n        <Icon\n          icon=\"Cancel\"\n          aria-label=\"Remove\"\n          role=\"button\"\n          aria-hidden=\"false\"\n        />\n      }\n    />\n  );\n}\n\nfunction Menu(props) {\n  return (\n    <Paper\n      square\n      className={props.selectProps.classes.paper}\n      {...props.innerProps}\n    >\n      {props.children}\n    </Paper>\n  );\n}\n\nconst components = {\n  Control,\n  Menu,\n  MultiValue,\n  NoOptionsMessage,\n  Option,\n  // Placeholder,\n  SingleValue,\n  ValueContainer,\n};\n\nclass AutoCompleteSelect extends React.Component {\n  render() {\n    const {\n      classes,\n      options,\n      isClearable,\n      placeholder,\n      onChange,\n      onBlur,\n      onFocus,\n      onInputChange,\n      value,\n      isDisabled,\n      fullWidth,\n      isMulti,\n      id,\n    } = this.props;\n\n    const selectStyles = {\n      dropdownIndicator: (base) => ({\n        ...base,\n        cursor: 'pointer',\n      }),\n      clearIndicator: (base) => ({\n        ...base,\n        cursor: 'pointer',\n      }),\n\n      // Needed so that the menu appears above any dialog windows\n      menuPortal: (base) => ({\n        ...base,\n        zIndex: 2000,\n      }),\n    };\n\n    return (\n      <Select\n        id={id}\n        className={classNames(classes.root, fullWidth && classes.fullWidth)}\n        classes={classes}\n        styles={selectStyles}\n        options={options}\n        components={components}\n        value={value}\n        onChange={onChange}\n        onBlur={onBlur}\n        onFocus={onFocus}\n        onInputChange={onInputChange}\n        placeholder={placeholder}\n        isClearable={isClearable}\n        isDisabled={isDisabled}\n        fullWidth={fullWidth}\n        isMulti={isMulti}\n        // Needed so that the menu is not clipped by the app's root level overflow:hidden or when it\n        // appears in a dialog window\n        menuPortalTarget={document.body}\n        // Specify ariaLabel instead of aria-label as it is the Control that needs to render the\n        // aria-label\n        ariaLabel={this.props['aria-label']}\n      />\n    );\n  }\n}\n\nexport default withStyles(styles)(AutoCompleteSelect);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Input from '@material-ui/core/Input';\nimport Chip from '@material-ui/core/Chip';\nimport CommonField from './common-field';\nimport attach from '../attach';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport DisplayValueTypography from './display-value-typography';\nimport AutoCompleteSelect from './autocomplete-select';\n\nconst styles = (theme) => ({\n  formControl: {\n    // Specify a more appropriate min width so that the field is wide enough to cover most labels\n    minWidth: 120,\n  },\n  chip: {\n    margin: theme.spacing(0.25),\n  },\n});\n\nclass SelectField extends React.PureComponent {\n  state = {\n    focus: false,\n  };\n\n  handleChange(value) {\n    this.props.component.setValue(value);\n  }\n\n  handleAutocompleteChange(value) {\n    const { multiple } = this.props;\n    if (multiple) {\n      this.handleChange(value ? value.map((val) => val.value) : null);\n    } else {\n      this.handleChange(value && (value.value ? value.value : null));\n    }\n  }\n\n  handleFocus() {\n    this.setState({ focus: true });\n  }\n\n  handleBlur() {\n    this.setState({ focus: false });\n    this.props.component.setTouched(true);\n  }\n\n  renderOptions() {\n    const { options, blankString, value, multiple } = this.props;\n\n    if (options) {\n      let opts = [];\n\n      if (!multiple && blankString) {\n        // Note: the blankString doesn't make sense when we allow multiple selections\n        opts.push(\n          <MenuItem value=\"\" key=\"\">\n            <em>{blankString}</em>\n          </MenuItem>\n        );\n      }\n\n      options.forEach((option) => {\n        if (multiple) {\n          const checked = value ? value.indexOf(option.value) !== -1 : false;\n          opts.push(\n            <MenuItem value={option.value} key={option.value}>\n              <Checkbox checked={checked} />\n              <ListItemText primary={option.label} />\n            </MenuItem>\n          );\n        } else {\n          opts.push(\n            <MenuItem value={option.value} key={option.value}>\n              {option.label}\n            </MenuItem>\n          );\n        }\n      });\n\n      return opts;\n    }\n  }\n\n  render() {\n    const {\n      value,\n      err,\n      touched,\n      disabled,\n      component,\n      fullWidth,\n      classes,\n      editable,\n      multiple,\n      accessEditable,\n      useDisplayValue,\n      options,\n      autocomplete,\n    } = this.props;\n\n    const { focus } = this.state;\n\n    const dis = accessEditable === false || disabled;\n\n    let fieldValue = multiple ? [] : '';\n    if (value) {\n      fieldValue = value;\n    }\n\n    let input = undefined;\n    let renderValue = undefined;\n    if (multiple) {\n      input = <Input />;\n\n      renderValue = (selected) => (\n        <div className={classes.chips}>\n          {selected.map((value) => (\n            <Chip\n              key={value}\n              label={component.getOptionLabel(value)}\n              className={classes.chip}\n            />\n          ))}\n        </div>\n      );\n    }\n\n    const optionalProps = {};\n\n    let fld = null;\n    const ariaLabel = component.get('label');\n    if (editable && !useDisplayValue) {\n      if (autocomplete) {\n        let autocompleteValue = null;\n\n        if (multiple) {\n          autocompleteValue = fieldValue.map((value) => ({\n            value: value,\n            label: component.getOptionLabel(value),\n          }));\n        } else {\n          autocompleteValue = {\n            value: fieldValue,\n            label: component.getOptionLabel(fieldValue),\n          };\n        }\n\n        // Shrink the label?\n        if (focus || !component.isValueBlank(fieldValue)) {\n          optionalProps.shrinkLabel = true;\n        }\n\n        fld = (\n          <AutoCompleteSelect\n            id={component.getUniqueId()}\n            options={options}\n            isClearable={true}\n            placeholder=\"\"\n            onChange={(value) => this.handleAutocompleteChange(value)}\n            onBlur={() => this.handleBlur()}\n            onFocus={() => this.handleFocus()}\n            value={autocompleteValue}\n            isDisabled={dis}\n            fullWidth={fullWidth}\n            isMulti={multiple}\n            aria-label={ariaLabel}\n          />\n        );\n      } else {\n        fld = (\n          <Select\n            id={component.getUniqueId()}\n            multiple={multiple}\n            error={touched && err ? true : false}\n            onChange={(event) => this.handleChange(event.target.value)}\n            onBlur={() => this.handleBlur()}\n            input={input}\n            renderValue={renderValue}\n            value={fieldValue}\n            disabled={dis}\n            fullWidth={fullWidth}\n            className={classes.formControl}\n            aria-label={ariaLabel}\n          >\n            {this.renderOptions()}\n          </Select>\n        );\n      }\n    } else {\n      let displayValue = null;\n      if (multiple && value) {\n        displayValue = value.map((val) => (\n          <Chip\n            key={val}\n            label={component.getOptionLabel(val)}\n            className={classes.chip}\n          />\n        ));\n      } else {\n        displayValue = component.getDisplayValue();\n      }\n      fld = (\n        <DisplayValueTypography aria-label={ariaLabel}>\n          {displayValue}\n        </DisplayValueTypography>\n      );\n    }\n\n    return (\n      <CommonField component={component} {...optionalProps}>\n        {fld}\n      </CommonField>\n    );\n  }\n}\n\nSelectField = withStyles(styles)(SelectField);\n\nexport default attach([\n  'value',\n  'err',\n  'options',\n  'touched',\n  'blankString',\n  'disabled',\n  'fullWidth',\n  'editable',\n  'multiple',\n  'useDisplayValue',\n  'autocomplete',\n])(SelectField);\n","import React from 'react';\nimport attach from '../attach';\nimport CommonField from './common-field';\nimport { MuiPickersUtilsProvider, TimePicker } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport DisplayValueTypography from './display-value-typography';\n\nconst styles = (theme) => ({\n  root: {\n    // We need to add a margin as the picker doesn't play well with the Material-UI label\n    marginTop: theme.spacing(2),\n  },\n});\n\nclass TimeField extends React.PureComponent {\n  handleDateChange = (date) => {\n    this.props.component.setValue(date);\n  };\n\n  handleBlur = () => {\n    this.props.component.setTouched(true);\n  };\n\n  render() {\n    const {\n      component,\n      classes,\n      value,\n      editable,\n      useDisplayValue,\n      showSeconds,\n      fullWidth,\n      disabled,\n      accessEditable,\n    } = this.props;\n\n    const dis = accessEditable === false || disabled;\n\n    let shrinkLabel = false;\n\n    let fld = null;\n    if (editable && !useDisplayValue) {\n      // The picker doesn't play well with the label from Material-UI so we need to manually shrink\n      // the label when there is a value.\n      shrinkLabel = !!value;\n      fld = (\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n          <span>\n            <TimePicker\n              // Value cannot be undefined or else picker will default to today\n              value={value ? value : null}\n              onChange={this.handleDateChange}\n              clearable\n              className={classes.root}\n              seconds={showSeconds}\n              // The minDate and maxDate are not used as they are confusing. They impose a\n              // restriction on the actual day, which doesn't make sense as the time is store as a\n              // timestamp with today's date and therefore the days may not match. Moreover, the\n              // picker doesn't change when these dates are specified so we can just handle the\n              // validation at the MSON-core layer. TODO: we can implement these ranges in the\n              // MSON-core layer by constructing dates with the current day and specified time from\n              // minDate and maxDate.\n              // minDate={minDate}\n              // maxDate={maxDate}\n\n              onClose={this.handleBlur}\n              fullWidth={fullWidth}\n              disabled={dis}\n              invalidDateMessage=\"\" // Let CommonField display the error\n              // format=\"M/d/YYYY h:m a\"\n            />\n          </span>\n        </MuiPickersUtilsProvider>\n      );\n    } else {\n      fld = (\n        <DisplayValueTypography>\n          {component.getDisplayValue()}\n        </DisplayValueTypography>\n      );\n    }\n\n    return (\n      <CommonField component={component} shrinkLabel={shrinkLabel}>\n        {fld}\n      </CommonField>\n    );\n  }\n}\n\nTimeField = withStyles(styles)(TimeField);\n\nexport default attach([\n  'value',\n  'editable',\n  'useDisplayValue',\n  'showSeconds',\n  'fullWidth',\n  'disabled',\n])(TimeField);\n","import React from 'react';\nimport Input from '@material-ui/core/Input';\nimport CommonField from './common-field';\nimport attach from '../attach';\nimport DisplayValueTypography from './display-value-typography';\nimport MaskedInput from 'react-text-mask';\n\nclass TextField extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    // Create a custom TextMask component. This is done once in the constructor so that it is not\n    // done in each call to render()\n    this.TextMaskCustom = (props) => {\n      const { inputRef, ...other } = props;\n      const { mask } = this.props;\n\n      return (\n        <MaskedInput\n          {...other}\n          ref={(ref) => {\n            inputRef(ref ? ref.inputElement : null);\n          }}\n          mask={mask}\n        />\n      );\n    };\n  }\n\n  handleChange = (event) => {\n    const { component } = this.props;\n    const value = component.fromUIValue(event.target.value);\n    component.setValue(value);\n  };\n\n  handleBlur = () => {\n    this.props.component.setTouched(true);\n  };\n\n  handleKeyUp = (event) => {\n    // If the user presses enter on the field then mark as touched. This is necessary for when the\n    // user is using the keyboard to enter data and there is an error on the last field that needs\n    // to be reported when the user presses enter.\n    if (event.keyCode === 13) {\n      this.props.component.setTouched(true);\n    }\n  };\n\n  render() {\n    const {\n      err,\n      maxLength,\n      touched,\n      disabled,\n      component,\n      fullWidth,\n      type,\n      editable,\n      accessEditable,\n      multiline,\n      rows,\n      rowsMax,\n      useDisplayValue,\n      mask,\n      displayValue,\n    } = this.props;\n\n    const dis = accessEditable === false || disabled;\n\n    let fld = null;\n    if (editable && !useDisplayValue) {\n      const optional = {};\n      if (mask) {\n        optional.inputComponent = this.TextMaskCustom;\n      }\n      const uiValue = component.getUIValue();\n\n      fld = (\n        <Input\n          id={component.getUniqueId()}\n          error={touched && err ? true : false}\n          inputProps={{\n            maxLength: maxLength,\n          }}\n          onChange={this.handleChange}\n          onBlur={this.handleBlur}\n          onKeyUp={this.handleKeyUp}\n          value={uiValue ? uiValue : ''}\n          disabled={dis}\n          fullWidth={fullWidth}\n          type={type}\n          multiline={multiline}\n          rows={rows}\n          rowsMax={rowsMax}\n          {...optional}\n        />\n      );\n    } else {\n      fld = (\n        <DisplayValueTypography\n          id={component.getUniqueId()}\n          // We need to specify the aria-label so that this element is linked to the target field\n          // label\n          aria-label={component.get('label')}\n        >\n          {displayValue ? displayValue : component.getDisplayValue()}\n        </DisplayValueTypography>\n      );\n    }\n\n    return <CommonField component={component}>{fld}</CommonField>;\n  }\n}\n\nexport default attach([\n  'value',\n  'err',\n  'maxLength',\n  'touched',\n  'disabled',\n  'fullWidth',\n  'type',\n  'editable',\n  'multiline',\n  'rows',\n  'rowsMax',\n  'useDisplayValue',\n  'mask',\n  'unmask',\n])(TextField);\n","import React from 'react';\nimport TextField from './text-field';\nimport attach from '../attach';\n\nclass URLField extends React.PureComponent {\n  render() {\n    const { component, value, editable, useDisplayValue, newWindow } =\n      this.props;\n\n    let displayValue = null;\n\n    // Note: editable & useDisplayValue are checked to avoid unnecessary rendering\n    if ((!editable || useDisplayValue) && value) {\n      let href = value;\n      if (href.indexOf('http') !== 0) {\n        href = 'http://' + href;\n      }\n\n      // Using target=_blank without rel=noreferrer is a security risk:\n      // https://html.spec.whatwg.org/multipage/links.html#link-type-noopener\n      displayValue = (\n        <a href={href} rel=\"noreferrer\" target={newWindow ? '_blank' : '_self'}>\n          {value}\n        </a>\n      );\n    }\n\n    return <TextField component={component} displayValue={displayValue} />;\n  }\n}\n\nexport default attach(['value', 'editable', 'useDisplayValue', 'newWindow'])(\n  URLField\n);\n","// NOTE: this file should only contain the component registrations\n\nimport Alert from './alert';\nimport ButtonField from './fields/button-field';\nimport BooleanField from './fields/boolean-field';\nimport Card from './card';\nimport ComponentField from './fields/component-field';\nimport CompositeField from './fields/composite-field';\nimport DateField from './fields/date-field';\nimport Field from './fields/field';\nimport Form from './form';\nimport FormField from './fields/form-field';\nimport Fragment from './fragment';\nimport Grid from './grid';\nimport GridItem from './grid-item';\nimport CollectionField from './fields/collection-field';\nimport Container from './container';\nimport ListField from './fields/list-field';\nimport ReCAPTCHAField from './fields/re-captcha-field';\nimport SelectField from './fields/select-field';\nimport Tabs from './tabs';\nimport TimeField from './fields/time-field';\nimport Text from './text';\nimport TextField from './fields/text-field';\nimport URLField from './fields/url-field';\n\nconst components = {\n  Alert,\n  ButtonField,\n  BooleanField,\n  Card,\n  ChainedSelectField: CompositeField,\n  ChainedSelectListField: ListField,\n  ComponentField,\n  CompositeField,\n  DateField,\n  Field,\n  Form,\n  FormField,\n  Fragment,\n  Grid,\n  GridItem,\n  CollectionField,\n  Container,\n  IdField: TextField,\n  IntegerField: TextField,\n  ListField,\n  MoneyField: TextField,\n  NumberField: TextField,\n  PhoneField: TextField,\n  ReCAPTCHAField,\n  SelectField,\n  SelectListField: ListField,\n  Tabs,\n  TimeField,\n  Text,\n  TextField,\n  TextListField: ListField,\n  URLField,\n  User: Form,\n};\n\nexport const register = (name, component) => {\n  components[name] = component;\n};\n\nexport default components;\n","import React from 'react';\nimport useComponent from './use-component';\nimport Component from './component';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nexport default function Alert(props) {\n  const { severity, content } = useComponent(props.component, [\n    'severity',\n    'content',\n  ]);\n  return (\n    <MuiAlert severity={severity}>\n      {content && <Component component={content} />}\n    </MuiAlert>\n  );\n}\n","import React from 'react';\nimport useComponent from './use-component';\nimport Component from './component';\n\nexport default function Container(props) {\n  const { content } = useComponent(props.component, ['content']);\n  if (content) {\n    return <Component component={content} />;\n  } else {\n    return null;\n  }\n}\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport TabsMui from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Icon from './icon';\nimport useComponent from './use-component';\n\nexport default function Tabs(props) {\n  const { component } = props;\n  const { items, value } = useComponent(component, ['items', 'value']);\n\n  function handleChange(event, value) {\n    component.set({ value });\n\n    const itemName = items[value].name;\n    component.emitChange(itemName);\n  }\n\n  // FUTURE: option to make this fixed under the main app bar?\n  return (\n    <AppBar\n      position=\"static\"\n      color=\"default\"\n      elevation={1} // tone down the elevation>\n    >\n      <TabsMui\n        value={value}\n        onChange={handleChange}\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n        scrollButtons=\"auto\"\n        variant=\"fullWidth\"\n      >\n        {items &&\n          items.map((item, index) => (\n            <Tab\n              label={item.label}\n              icon={<Icon icon={item.icon} />}\n              key={index}\n            />\n          ))}\n      </TabsMui>\n    </AppBar>\n  );\n}\n","import React from 'react';\nimport useComponent from './use-component';\nimport ReactMarkdown from 'react-markdown';\n\nexport default function Text(props) {\n  const { text } = useComponent(props.component, ['text']);\n\n  // As per https://github.com/remarkjs/react-markdown/issues/42, `renderers={{paragraph: 'span'}}`\n  // substitutes the p tag with a span so that there is no margin\n  return <ReactMarkdown renderers={{ paragraph: 'span' }} source={text} />;\n}\n","import components from './components';\nimport compiler from 'mson/lib/compiler';\n\nclass Utils {\n  getUIComponent(component) {\n    const name = component.getClassName();\n    const Component = components[name];\n    if (component.get('render')) {\n      return component.get('render');\n    } else if (Component !== undefined) {\n      return Component;\n    } else if (compiler.isCompiled(compiler.getComponent(name))) {\n      const Parent = Object.getPrototypeOf(component.constructor);\n      return this.getUIComponent(new Parent());\n    } else {\n      // The React component wasn't found so check the MSON layer to see if we can automatically\n      // determine the component from any MSON.\n      const ancestorName = compiler.getOldestCompiledAncestor(name);\n      const Ancestor = compiler.getComponent(ancestorName);\n      return this.getUIComponent(new Ancestor());\n    }\n  }\n}\n\nexport default new Utils();\n","import React from 'react';\nimport componentUtils from './component-utils';\n\nexport default class InnerComponent extends React.PureComponent {\n  handleChange = (name, value) => {\n    const { on, component } = this.props;\n\n    // Generic handler\n    if (on) {\n      on({ name, value, component });\n    }\n\n    // Handler for specific event\n    const handlerName = 'on' + name.charAt(0).toUpperCase() + name.slice(1);\n    if (this.props[handlerName]) {\n      this.props[handlerName]({ value, component });\n    }\n  };\n\n  addChangeListener() {\n    this.props.component.on('$change', this.handleChange);\n\n    // Emit a mount event so that the component can load any initial data, etc... We emit this event\n    // here and not in componentDidMount() as the component may actually be set after\n    // componentDidMount() was run.\n    this.props.component.emitChange('mount');\n  }\n\n  removeChangeListener() {\n    this.props.component.removeListener('$change', this.handleChange);\n  }\n\n  componentDidMount() {\n    if (this.props.component) {\n      this.addChangeListener();\n    }\n  }\n\n  componentWillUnmount() {\n    // Emit a unmount event so that we can perform any needed clean up\n    this.props.component.emitChange('unmount');\n\n    this.removeChangeListener();\n  }\n\n  componentDidUpdate(prevProps) {\n    // Is the component changing?\n    if (this.props.component !== prevProps.component) {\n      // Recreate the listener\n      this.removeChangeListener();\n      this.addChangeListener();\n    }\n  }\n\n  render() {\n    const { component, ...others } = this.props;\n\n    if (component) {\n      const Component = componentUtils.getUIComponent(component);\n      return <Component component={component} {...others} />;\n    } else {\n      return null;\n    }\n  }\n}\n","import React, { useState, useEffect } from 'react';\nimport InnerComponent from './inner-component';\nimport compiler from 'mson/lib/compiler';\nimport useComponent from './use-component';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst getOrZero = (value) => (value ? value : 0);\n\nconst useStyles = makeStyles((theme) => ({\n  root: (props) => {\n    const { marginTop, marginRight, marginBottom, marginLeft } = props;\n    return {\n      marginTop: theme.spacing(getOrZero(marginTop)),\n      marginRight: theme.spacing(getOrZero(marginRight)),\n      marginBottom: theme.spacing(getOrZero(marginBottom)),\n      marginLeft: theme.spacing(getOrZero(marginLeft)),\n    };\n  },\n}));\n\nexport default function Component(props) {\n  const { component, definition, ...childProps } = props;\n  const [compiledComponent, setCompiledComponent] = useState(null);\n\n  const { hidden, styles } = useComponent(component, ['hidden', 'styles']);\n  const styleProps = styles ? styles.get() : {};\n  const classes = useStyles(styleProps);\n\n  // Should we use the component generated from the definition?\n  const comp = component ? component : compiledComponent;\n\n  // Compile the component when the definition changes\n  useEffect(() => {\n    if (definition) {\n      setCompiledComponent(compiler.newComponent(definition));\n    }\n  }, [definition]);\n\n  useEffect(() => {\n    return () => {\n      // Unmount. Did we use a definition to define a component in the state?\n      if (comp) {\n        // Fire the unmount before we destroy the component so that the event is not lost\n        comp.emitChange('unmount');\n\n        // Remove all listeners to prevent listener leaks\n        comp.destroy();\n      }\n    };\n  }, [comp]);\n\n  // Note: the component can be falsy, e.g. it has not yet been defined\n  if (comp && hidden) {\n    return null;\n  } else {\n    // As a slight optimization, only display a wrapping tag if styles is truthy\n    const innerComponent = <InnerComponent component={comp} {...childProps} />;\n    if (styles) {\n      // Use a div so that we have a block-level element that supports vertical margins\n      return <div className={classes.root}>{innerComponent}</div>;\n    } else {\n      return innerComponent;\n    }\n  }\n}\n","// TODO: when click on another section, close other sections? Requires moving menu state to app?\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport Divider from '@material-ui/core/Divider';\nimport Submenu from './submenu';\nimport attach from './attach';\nimport registrar from 'mson/lib/compiler/registrar';\nimport Component from './component';\n\nconst drawerWidth = 240;\n\nconst styles = (theme) => ({\n  drawerHeader: {\n    // Blank so that header component defines styling\n  },\n  drawerPaper: {\n    width: 250,\n  },\n  drawPaperResponsive: {\n    [theme.breakpoints.up('md')]: {\n      width: drawerWidth,\n      // position: 'relative',\n      // height: '100%',\n\n      // Extend to bottom of screen. TODO: does this work on mobile?\n      // https://stackoverflow.com/a/48506883/2831606\n      position: 'fixed',\n      height: '100vh',\n    },\n  },\n});\n\nclass Menu extends React.PureComponent {\n  handleDrawerToggle = () => {\n    if (this.props.onDrawerToggle) {\n      this.props.onDrawerToggle();\n    }\n  };\n\n  handleNavigate = (menuItem) => {\n    if (this.props.onNavigate) {\n      this.props.onNavigate(menuItem);\n    }\n  };\n\n  items() {\n    const { component, path } = this.props;\n    const items = component.get('items');\n    const submenus = [];\n    items.forEach((item, index) => {\n      // Has access to item?\n      if (\n        (!item.roles ||\n          (registrar.client && registrar.client.user.hasRole(item.roles))) &&\n        item.hidden !== true\n      ) {\n        submenus.push(\n          <Submenu\n            item={item}\n            key={index}\n            onNavigate={this.handleNavigate}\n            path={path}\n            onDrawerToggle={this.handleDrawerToggle}\n          />\n        );\n      }\n    });\n    return submenus;\n  }\n\n  render() {\n    const {\n      classes,\n      theme,\n      mobileOpen,\n      responsive,\n      header /*, roles*/,\n    } = this.props;\n\n    let items = null;\n    // if (!roles || (registrar.client && registrar.client.user.hasRole(roles))) {\n    items = this.items();\n    // }\n\n    const headerElement = header && <Component component={header} />;\n\n    const drawer = (\n      <div>\n        <div className={classes.drawerHeader}>{headerElement}</div>\n        <Divider />\n        {items}\n      </div>\n    );\n\n    const temporaryDrawer = (\n      <Drawer\n        variant=\"temporary\"\n        anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n        open={mobileOpen}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n        onClose={this.handleDrawerToggle}\n        ModalProps={{\n          keepMounted: true, // Better open performance on mobile.\n        }}\n      >\n        {drawer}\n      </Drawer>\n    );\n\n    const permanentDrawer = (\n      <Drawer\n        variant=\"permanent\"\n        open\n        classes={{\n          paper:\n            classes.drawerPaper +\n            (responsive ? ` ${classes.drawPaperResponsive}` : ''),\n        }}\n      >\n        {drawer}\n      </Drawer>\n    );\n\n    if (responsive) {\n      return (\n        <div>\n          <Hidden mdUp>{temporaryDrawer}</Hidden>\n          <Hidden smDown implementation=\"css\">\n            {permanentDrawer}\n          </Hidden>\n        </div>\n      );\n    } else {\n      return temporaryDrawer;\n    }\n  }\n}\n\nMenu = withStyles(styles, { withTheme: true })(Menu);\nMenu = attach(['items', 'header' /*, 'roles'*/])(Menu);\nexport default Menu;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from './icon';\nimport classNames from 'classnames';\n\n// TODO: see https://material-ui-next.com/style/icons/#icons and implement:\n// 1. Mouseover to change background color\n\nconst styles = (theme) => ({\n  textField: {\n    width: '100%',\n  },\n\n  textFieldInput: {\n    borderRadius: 3,\n    backgroundColor: theme.palette.primary[400],\n    fontSize: theme.typography.subtitle1.fontSize,\n    padding: '10px 34px 10px 34px',\n    marginTop: '2px',\n    width: 'calc(100%)',\n    color: theme.palette.common.white,\n  },\n\n  // Needed so that relative components don't take up any space\n  iconContainer: {\n    position: 'relative',\n    width: '100%', // Set 100% so that we can position the close icon relative to this\n    height: '0px',\n  },\n\n  searchIcon: {\n    position: 'absolute',\n    top: '-31px',\n    left: '6px',\n  },\n\n  closeIcon: {\n    position: 'absolute',\n    top: '-43px',\n    right: '-5px',\n  },\n\n  grow: {\n    flexGrow: 1,\n  },\n});\n\nclass SearchBar extends React.PureComponent {\n  state = { autoFullWidth: false };\n\n  handleKeyUp = (event) => {\n    // Enter pressed?\n    if (event.keyCode === 13) {\n      this.props.onSearch(this.props.searchString);\n    }\n  };\n\n  handleClearSearch = (event) => {\n    this.props.onSearch('');\n  };\n\n  handleFocus = () => {\n    this.setState({ autoFullWidth: true });\n  };\n\n  handleBlur = () => {\n    this.setState({ autoFullWidth: false });\n  };\n\n  render() {\n    const {\n      classes,\n      className,\n      searchString,\n      onChange,\n      fullWidth,\n    } = this.props;\n\n    const { autoFullWidth } = this.state;\n\n    const full = fullWidth || autoFullWidth;\n\n    return (\n      <div className={classNames(className, full ? classes.grow : null)}>\n        <TextField\n          InputProps={{\n            disableUnderline: true,\n            classes: {\n              input: classes.textFieldInput,\n            },\n          }}\n          value={searchString}\n          onKeyUp={this.handleKeyUp}\n          onChange={(event) => onChange(event.target.value)}\n          className={classes.textField}\n          onFocus={this.handleFocus}\n          onBlur={this.handleBlur}\n        />\n        <div className={classes.iconContainer}>\n          <Icon icon=\"Search\" className={classes.searchIcon} />\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"clear search\"\n            onClick={this.handleClearSearch}\n            className={classes.closeIcon}\n          >\n            <Icon icon=\"Close\" />\n          </IconButton>\n        </div>\n      </div>\n    );\n  }\n}\n\nSearchBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nSearchBar = withStyles(styles)(SearchBar);\n\nexport default SearchBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\n// import Button from '@material-ui/core/Button';\nimport SnackbarMUI from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from './icon';\n\nconst styles = (theme) => ({\n  close: {\n    padding: theme.spacing(0.5),\n  },\n});\n\nclass Snackbar extends React.PureComponent {\n  handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    if (this.props.onClose) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    const { classes, message, open } = this.props;\n    return (\n      <SnackbarMUI\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={this.handleClose}\n        ContentProps={{\n          'aria-describedby': 'message-id',\n        }}\n        message={<span id=\"message-id\">{message}</span>}\n        action={[\n          // <Button key=\"undo\" color=\"secondary\" size=\"small\" onClick={this.handleClose}>\n          //   UNDO\n          // </Button>,\n          <IconButton\n            key=\"close\"\n            aria-label=\"Close\"\n            color=\"inherit\"\n            className={classes.close}\n            onClick={this.handleClose}\n          >\n            <Icon icon=\"Close\" />\n          </IconButton>,\n        ]}\n      />\n    );\n  }\n}\n\nSnackbar.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Snackbar);\n","// TODO:\n//   - On mobile when using search bar, display title and search icon. When user clicks icon then\n//     hides title and allows for search string to be entered.\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from './icon';\nimport Menu from './menu';\nimport SearchBar from './search-bar';\nimport { Switch, Route } from 'react-router-dom';\nimport Component from './component';\nimport ComponentMSON from 'mson/lib/component';\n// import compiler from 'mson/lib/compiler';\nimport { withRouter } from 'react-router';\nimport withWidth, { isWidthDown } from '@material-ui/core/withWidth';\nimport attach from './attach';\nimport globals from 'mson/lib/globals';\nimport Snackbar from './snackbar';\nimport ConfirmationDialog from './confirmation-dialog';\nimport MUISwitch from '@material-ui/core/Switch';\n// import UserMenu from './user-menu';\nimport Action from 'mson/lib/actions/action';\nimport CollectionField from 'mson/lib/fields/collection-field';\nimport Form from 'mson/lib/form';\nimport access from 'mson/lib/access';\nimport registrar from 'mson/lib/compiler/registrar';\n\nconst drawerWidth = 240;\n\nconst styles = (theme) => ({\n  root: {\n    width: '100%',\n    // height: 430,\n    // marginTop: theme.spacing.unit * 3,\n    zIndex: 1,\n    overflow: 'hidden',\n  },\n  appFrame: {\n    position: 'relative',\n    display: 'flex',\n    width: '100%',\n    height: '100%',\n  },\n  appBar: {\n    position: 'fixed',\n    marginLeft: drawerWidth,\n  },\n  appBarResponsive: {\n    [theme.breakpoints.up('md')]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n    },\n  },\n  navIconHide: {\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n  content: {\n    backgroundColor: theme.palette.background.default,\n    width: '100%',\n    padding: theme.spacing(3),\n    height: 'calc(100% - 56px)',\n    marginTop: 56,\n    [theme.breakpoints.up('sm')]: {\n      height: 'calc(100% - 64px)',\n      marginTop: 64,\n    },\n\n    // Disable Chrome's Scroll Anchoring as it causes problems with infinite scrolling when\n    // scrolling up. Specifically, the scroll location is locked after items are prepended to the\n    // top of the list before the spacer is resized.\n    overflowAnchor: 'none',\n  },\n  contentResponsive: {\n    // Also needed to extend menu vertically\n    [theme.breakpoints.up('md')]: {\n      marginLeft: drawerWidth,\n    },\n  },\n  alignRight: {\n    marginLeft: 'auto', // right align\n  },\n});\n\n// TODO: break up into components for header, menu, body, etc...\nclass App extends React.PureComponent {\n  state = {\n    mobileOpen: false,\n    menuItem: null,\n    snackbarOpen: false,\n    snackbarMessage: '',\n    confirmationOpen: false,\n    nextMenuItem: null,\n    showArchivedToggle: false,\n\n    // Note: we need both searchStringInput and globals.searchString as searchStringInput is the\n    // controlled value for the text input and globals.searchString is the actual string with which\n    // we are searching. These values not the same as we expect the user to submit the search before\n    // it is performed so that we don't search on every keystroke. FUTURE: wait a little bit after\n    // characters have been entered and then automatically search.\n    searchStringInput: '',\n    showSearch: false,\n\n    showSearchOnMobile: false,\n\n    // isLoggedIn: false\n  };\n\n  form = null;\n\n  path = null;\n\n  constructor(props) {\n    super(props);\n    this.setGlobalOnNavigate();\n  }\n\n  onNavigate = (callback) => {\n    // We don't warn about discarding changes when fullScreen, e.g. a login page\n    const menuItem = this.state.menuItem;\n    if (\n      menuItem &&\n      menuItem.producedContent.has('dirty') &&\n      menuItem.producedContent.get('dirty') &&\n      !menuItem.fullScreen\n    ) {\n      // Show a confirmation dialog to see if the user wants to continue\n      globals.displayConfirmation({\n        title: 'Discard changes?',\n        callback,\n      });\n    } else {\n      // Nothing is dirty so allow the navigation to continue\n      callback(true);\n    }\n  };\n\n  setGlobalOnNavigate() {\n    globals.setOnNavigate(this.onNavigate);\n  }\n\n  handleDrawerToggle = () => {\n    this.setState({ mobileOpen: !this.state.mobileOpen });\n  };\n\n  redirect(path) {\n    const { history } = this.props;\n\n    // Clear the redirectPath so that back-to-back redirects to the same route are considered\n    // unique, e.g. if / routes to /somepage and then the user hits back.\n    globals.set({ redirectPath: null });\n\n    history.push(path);\n  }\n\n  navigateTo(path) {\n    const { component } = this.props;\n    const menu = component.get('menu');\n    const item = menu.getItemAndParsePath(path);\n    return this.switchContent(item.item, item.params);\n  }\n\n  handleNavigate = async (menuItem) => {\n    this.props.history.push(menuItem.path);\n  };\n\n  handleConfirmationClose = async (yes) => {\n    const { confirmation } = this.props;\n    if (confirmation.callback && yes) {\n      // Allow/prohibit the route change\n      confirmation.callback(yes);\n    }\n    this.setState({ confirmationOpen: false });\n  };\n\n  canArchive(currentComponent) {\n    let canArchive = false;\n    let canSearch = false;\n    if (currentComponent && currentComponent instanceof Form) {\n      for (const field of currentComponent.getFields()) {\n        if (field instanceof CollectionField) {\n          canArchive =\n            !field.get('forbidViewArchived') &&\n            access.canArchive(field.get('form'));\n          canSearch = !field.get('forbidSearch');\n        }\n      }\n    }\n    return {\n      canArchive,\n      canSearch,\n    };\n  }\n\n  emitLoggedOut() {\n    globals.set({ redirectAfterLogin: this.props.location.pathname });\n    this.props.component.emitLoggedOut();\n  }\n\n  requireAccess(roles) {\n    const canAccess =\n      !roles || (registrar.client && registrar.client.user.hasRole(roles));\n    if (!canAccess) {\n      this.emitLoggedOut();\n    }\n    return canAccess;\n  }\n\n  switchContent = async (menuItem, parameters) => {\n    const { currentComponent } = this.state;\n\n    // Prevent infinite recursion when menuItem is null by making sure that the menuItem is\n    // changing before changing anything else; especially the state\n    if (currentComponent) {\n      // Emit an unload event so that the component can unload any data, etc...\n      currentComponent.emitUnload();\n    }\n\n    // Note: menuItem can be null if there is no content on the landing page\n    const content = menuItem && menuItem.content;\n\n    if (content) {\n      const { location, component } = this.props;\n      const menu = component.get('menu');\n      globals.set({\n        route: menu.toRoute({\n          parameters,\n          queryString: location.search.substr(1),\n          hash: location.hash.substr(1),\n        }),\n      });\n\n      const parentItem = menu.getParent(menuItem.path);\n      if (\n        this.requireAccess(menuItem.roles) &&\n        (!parentItem || this.requireAccess(parentItem.roles))\n      ) {\n        let producedContent = null;\n\n        if (content instanceof Action) {\n          // Execute the actions\n          producedContent = await content.run({ component: content });\n        } else {\n          producedContent = content;\n        }\n\n        // producedContent can be null if content is an action, which doesn't generate a\n        // component. And, producedContent can also be something other than a Component if content\n        // is an action that returns a non-component\n        if (producedContent && producedContent instanceof ComponentMSON) {\n          // TODO: we are mutating the menuItem object directory. Would it be better to promote\n          // the MenuItem to a component and set the producedContent there?\n          menuItem.producedContent = producedContent;\n\n          const newComponent = producedContent;\n\n          // Emit a load event so that the component can load any initial data, etc...\n          newComponent.emitLoad();\n\n          const { canArchive, canSearch } = this.canArchive(newComponent);\n\n          globals.set({ searchString: null });\n\n          // Set showArchived to false whenever we change the route\n          this.setState({\n            menuItem,\n            showArchived: false,\n            showArchivedToggle: canArchive,\n            searchStringInput: '',\n            showSearch: canSearch,\n            currentComponent: newComponent,\n          });\n        }\n      }\n    } else {\n      this.setState({ currentComponent: null });\n    }\n  };\n\n  onLocation = (location) => {\n    globals.set({\n      path: location.pathname,\n      pathHash: location.hash,\n      pathSearch: location.search,\n    });\n  };\n\n  componentDidUpdate(prevProps) {\n    const snackbarMessage = globals.get('snackbarMessage');\n    if (snackbarMessage) {\n      this.displaySnackbar(snackbarMessage);\n      globals.set({ snackbarMessage: null });\n    }\n\n    if (\n      this.props.redirectPath &&\n      this.props.redirectPath !== prevProps.redirectPath\n    ) {\n      this.redirect(this.props.redirectPath);\n    }\n\n    if (\n      this.props.path !== prevProps.path ||\n      this.props.pathHash !== prevProps.pathHash ||\n      this.props.pathSearch !== prevProps.pathSearch\n    ) {\n      this.navigateTo(this.props.path);\n    }\n\n    if (this.props.confirmation !== prevProps.confirmation) {\n      // Show the popup if any of the confirmation info has changed\n      this.setState({ confirmationOpen: true });\n    }\n\n    if (this.props.searchString !== prevProps.searchString) {\n      // Pass search string down to current component\n      const menuItem = this.state.menuItem;\n      if (menuItem && menuItem.producedContent.has('searchString')) {\n        menuItem.producedContent.set({\n          searchString: this.props.searchString,\n        });\n      }\n    }\n  }\n\n  componentDidMount() {\n    // Allows us to listen to back and forward button clicks\n    this.unlisten = this.props.history.listen(this.onLocation);\n\n    if (registrar.client) {\n      // Wait for the session to load before loading the initial component so that we can do things\n      // like route based on a user's role\n      registrar.client.user.awaitSession();\n    }\n\n    // Load the correct component based on the initial path\n    this.onLocation(this.props.location);\n\n    // TODO: is this too inefficient in that it cascades a lot of unecessary events? Instead, could:\n    // 1. move more logic to app layer so that only cascade when need new window 2. use something\n    // like a global scroll listener that the component can use when it is active\n    window.addEventListener('scroll', (e) => {\n      const { menuItem } = this.state;\n      if (menuItem) {\n        menuItem.producedContent.emit('scroll', e);\n      }\n    });\n\n    // Handle immediate redirects, e.g. if user is not logged in\n    if (this.props.redirectPath) {\n      this.redirect(this.props.redirectPath);\n    }\n  }\n\n  componentWillUnmount() {\n    this.unlisten();\n  }\n\n  displaySnackbar(message) {\n    this.setState({ snackbarOpen: true, snackbarMessage: message });\n  }\n\n  handleSnackbarClose = () => {\n    this.setState({ snackbarOpen: false });\n  };\n\n  handleArchivedChange = (event) => {\n    this.setState({ showArchived: event.target.checked });\n\n    const { menuItem } = this.state;\n\n    if (menuItem) {\n      menuItem.producedContent.set({ showArchived: event.target.checked });\n\n      // Scroll to the top of the page as otherwise it is confusing to the user as to why they are\n      // dumped in some random place within the newly queried data.\n      window.scrollTo({\n        top: 0,\n      });\n    }\n  };\n\n  handleSearchStringInputChange = (searchStringInput) => {\n    this.setState({\n      searchStringInput,\n    });\n  };\n\n  handleSearch = (searchStringInput) => {\n    this.setState(\n      {\n        searchStringInput,\n      },\n      () => {\n        globals.set({\n          searchString: searchStringInput ? searchStringInput : null,\n        });\n      }\n    );\n  };\n\n  archivedToggle() {\n    const { showArchived, showArchivedToggle } = this.state;\n\n    // A component must not switch from controlled to uncontrolled so we need to avoid setting\n    // checked=undefined\n    const showArchivedChecked = showArchived ? true : false;\n\n    let archivedToggle = null;\n    if (showArchivedToggle) {\n      archivedToggle = (\n        <Tooltip title={showArchived ? 'Show Active' : 'Show Deleted'}>\n          <MUISwitch\n            onChange={this.handleArchivedChange}\n            checked={showArchivedChecked}\n          />\n        </Tooltip>\n      );\n    }\n\n    return archivedToggle;\n  }\n\n  searchBox(fullWidth) {\n    const { classes } = this.props;\n    const { searchStringInput, showSearch } = this.state;\n\n    let searchBox = null;\n    if (showSearch) {\n      searchBox = (\n        <SearchBar\n          fullWidth={fullWidth}\n          className={classes.alignRight}\n          searchString={searchStringInput}\n          onChange={this.handleSearchStringInputChange}\n          onSearch={this.handleSearch}\n        />\n      );\n    }\n    return searchBox;\n  }\n\n  toggleShowSearch = () => {\n    this.setState({ showSearchOnMobile: !this.state.showSearchOnMobile });\n  };\n\n  menuButton() {\n    const { classes } = this.props;\n    const responsive = this.isResponsive();\n    return (\n      <IconButton\n        color=\"inherit\"\n        aria-label=\"open drawer\"\n        onClick={this.handleDrawerToggle}\n        className={responsive ? classes.navIconHide : ''}\n      >\n        <Icon icon=\"Menu\" />\n      </IconButton>\n    );\n  }\n\n  title() {\n    const { menuItem } = this.state;\n    return (\n      <Typography variant=\"h6\" color=\"inherit\" noWrap>\n        {menuItem ? menuItem.label : ''}\n      </Typography>\n    );\n  }\n\n  appBar() {\n    const { classes, width } = this.props;\n    const { showSearchOnMobile } = this.state;\n\n    const onMobile = isWidthDown('sm', width);\n    const responsive = this.isResponsive();\n\n    let bar = null;\n\n    if (onMobile) {\n      if (showSearchOnMobile) {\n        bar = (\n          <React.Fragment>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"close search\"\n              onClick={this.toggleShowSearch}\n            >\n              <Icon icon=\"ArrowBack\" />\n            </IconButton>\n            {this.searchBox(true)}\n          </React.Fragment>\n        );\n      } else {\n        bar = (\n          <React.Fragment>\n            {this.menuButton()}\n            {this.title()}\n            {this.archivedToggle()}\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"toggle search\"\n              onClick={this.toggleShowSearch}\n              className={classes.alignRight}\n            >\n              <Icon icon=\"Search\" />\n            </IconButton>\n          </React.Fragment>\n        );\n      }\n    } else {\n      bar = (\n        <React.Fragment>\n          {this.menuButton()}\n          {this.title()}\n          {this.archivedToggle()}\n          {this.searchBox()}\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <AppBar\n        elevation={1} // tone down the elevation\n        className={\n          classes.appBar + (responsive ? ` ${classes.appBarResponsive}` : '')\n        }\n      >\n        <Toolbar>{bar}</Toolbar>\n      </AppBar>\n    );\n  }\n\n  isResponsive() {\n    return !this.props.menuAlwaysTemporary;\n  }\n\n  render() {\n    const { classes, component, confirmation } = this.props;\n    const {\n      mobileOpen,\n      menuItem,\n      snackbarOpen,\n      snackbarMessage,\n      confirmationOpen,\n      currentComponent,\n    } = this.state;\n\n    const responsive = this.isResponsive();\n\n    const menu = component.get('menu');\n\n    // Use the path from the location prop as this.state.path may not be up to date\n    const path = this.props.location.pathname;\n\n    const comp = currentComponent ? (\n      <Component component={currentComponent} />\n    ) : null;\n\n    const appBar = this.appBar();\n\n    const menuSidebar = (\n      <Menu\n        component={menu}\n        onDrawerToggle={this.handleDrawerToggle}\n        mobileOpen={mobileOpen}\n        onNavigate={this.handleNavigate}\n        path={path}\n        responsive={responsive}\n      />\n    );\n\n    let fullScreenStyle = null;\n    if (menuItem && menuItem.fullScreen) {\n      fullScreenStyle = {\n        marginLeft: 0,\n        marginTop: 0,\n      };\n    }\n\n    return (\n      <div className={classes.root}>\n        <div className={classes.appFrame}>\n          {menuItem && menuItem.fullScreen ? null : appBar}\n          {menuItem && menuItem.fullScreen ? null : menuSidebar}\n          <main\n            className={\n              classes.content +\n              (responsive ? ` ${classes.contentResponsive}` : '')\n            }\n            style={fullScreenStyle}\n          >\n            <Switch>\n              {/* Omitting path so that all paths are matched */}\n              <Route />\n            </Switch>\n\n            {comp}\n\n            <Snackbar\n              open={snackbarOpen}\n              message={snackbarMessage}\n              onClose={this.handleSnackbarClose}\n            />\n            <ConfirmationDialog\n              open={confirmationOpen}\n              onClose={this.handleConfirmationClose}\n              title={confirmation ? confirmation.title : null}\n              text={confirmation ? confirmation.text : null}\n              alert={confirmation ? confirmation.alert : null}\n            />\n          </main>\n        </div>\n      </div>\n    );\n  }\n}\n\nApp = withStyles(styles, { withTheme: true })(App);\nApp = withWidth()(App);\nApp = withRouter(App);\nApp = attach(['menuAlwaysTemporary'])(App);\nApp = attach(\n  [\n    'path',\n    'pathHash',\n    'pathSearch',\n    'redirectPath',\n    'snackbarMessage',\n    'confirmation',\n    'searchString',\n  ],\n  globals\n)(App);\nexport default App;\n","import React from 'react';\nimport AppUI from './app';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\nimport { createTheme } from '@material-ui/core/styles';\nimport blueGrey from '@material-ui/core/colors/blueGrey';\nimport lightBlue from '@material-ui/core/colors/lightBlue';\nimport { BrowserRouter, Prompt } from 'react-router-dom';\nimport globals from 'mson/lib/globals';\nimport attach from './attach';\n\nconst theme = createTheme({\n  palette: {\n    primary: blueGrey,\n    // primary: blue,\n    // type: 'dark',\n    // secondary: cyan\n    secondary: lightBlue,\n  },\n\n  // TODO: remove after next major Material-UI release\n  // (https://material-ui.com/style/typography/#migration-to-typography-v2)\n  typography: {\n    useNextVariants: true,\n  },\n\n  // shadows: ['none']\n});\n\n// Note: BrowserRouter needs to be outside of App so that we can use withRouter\nclass AppContainer extends React.Component {\n  onNavigate = (message, callback) => {\n    globals.onNavigate(message, callback);\n  };\n\n  render() {\n    const { component, basename } = this.props;\n    return (\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        <BrowserRouter\n          getUserConfirmation={this.onNavigate}\n          basename={basename}\n        >\n          {/* Wrapping div required by BrowserRouter */}\n          <div>\n            <AppUI component={component} />\n\n            {/* A Prompt is needed to capture back/forward button events with ReactRouter. message\n            is required, but the value is arbitrary */}\n            <Prompt message=\"foo\" />\n          </div>\n        </BrowserRouter>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default attach(['basename'])(AppContainer);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AppContainer from './app-container';\nimport registrar from 'mson/lib/compiler/registrar';\nimport registerServiceWorker from './register-service-worker';\n\nconst render = async (app) => {\n  // Was the client registered?\n  if (registrar.client) {\n    // Make sure we load the session before doing any rendering so that components can do their\n    // initial rendering based on the user's authentication status\n    await registrar.client.user.awaitSession();\n  }\n\n  ReactDOM.render(\n    <AppContainer component={app} />,\n    document.getElementById('root')\n  );\n  registerServiceWorker();\n};\n\nexport default render;\n","const app = {\n  name: 'app.App',\n  component: 'App',\n  // menuAlwaysTemporary: true,\n  basename: '/mson-react', // Root of site is https://redgeoff.github.io/mson-react\n  menu: {\n    component: 'Menu',\n    header: {\n      component: 'Text',\n      text: '### &nbsp;&nbsp;&nbsp;MSON Demo',\n    },\n    items: [\n      {\n        path: '/',\n        label: 'Home',\n        content: {\n          component: 'app.Home',\n        },\n      },\n      {\n        path: '/fields',\n        label: 'Fields',\n        content: {\n          component: 'app.FieldsScreen',\n        },\n      },\n      {\n        path: '/contacts',\n        label: 'Contacts',\n        items: [\n          {\n            path: '/contacts',\n            label: 'Contacts LocalStorage',\n            content: {\n              component: 'app.ContactsLocalStorage',\n            },\n          },\n          {\n            path: '/contacts-firebase',\n            label: 'Contacts Firebase',\n            content: {\n              component: 'app.ContactsFirebase',\n            },\n          },\n        ],\n      },\n      {\n        path: '/tasks',\n        label: 'Tasks',\n        items: [\n          {\n            path: '/tasks',\n            label: 'Tasks LocalStorage',\n            content: {\n              component: 'app.TasksLocalStorage',\n            },\n          },\n          {\n            path: '/tasks-firebase',\n            label: 'Tasks Firebase',\n            content: {\n              component: 'app.TasksFirebase',\n            },\n          },\n        ],\n      },\n      {\n        path: '/form-builder',\n        label: 'Form Builder',\n        content: {\n          component: 'app.FormBuilder',\n        },\n      },\n      {\n        path: '/contact/edit',\n        label: 'Edit Contact',\n        content: {\n          component: 'app.EditContact',\n        },\n      },\n      {\n        path: '/grid',\n        label: 'Grid',\n        content: {\n          component: 'app.Grid',\n        },\n      },\n      {\n        path: '/router',\n        label: 'Router',\n        items: [\n          {\n            path: '/router/redirect',\n            label: 'Redirect',\n            content: {\n              component: 'Action',\n              actions: [\n                {\n                  component: 'Redirect',\n                  path:\n                    '/router/person/p123/message/m456?first=Trevor&last=Noah#hash123',\n                },\n              ],\n            },\n          },\n          {\n            path: '/router/generate-component',\n            label: 'Generate Component',\n            content: {\n              component: 'app.GenerateComponent',\n            },\n          },\n        ],\n      },\n      {\n        path: '/router/person/:personId/message/:messageId',\n        label: 'Router',\n        content: {\n          component: 'app.Router',\n        },\n        hidden: true, // Register route, but don't expose it in the menu\n      },\n      {\n        path: '/custom-components',\n        label: 'Custom Components',\n        items: [\n          {\n            path: '/custom-components/mson',\n            label: 'Custom Component',\n            content: {\n              component: 'CustomComponent',\n              name: 'my-custom-component',\n              label: 'My Custom Component',\n            },\n          },\n          {\n            path: '/custom-components/js',\n            label: 'Custom Component JS',\n            content: {\n              component: 'CustomComponentJS',\n              name: 'my-custom-component-js',\n              label: 'My Custom Component JS',\n            },\n          },\n          {\n            path: '/custom-components/no-props',\n            label: 'Custom Component No Props',\n            content: {\n              component: 'CustomComponentNoProps',\n            },\n          },\n          {\n            path: '/custom-components/attach',\n            label: 'Custom Component Attach',\n            content: {\n              component: 'CustomComponentAttach',\n              name: 'my-custom-component-attach',\n              label: 'My Custom Component Attach',\n            },\n          },\n          {\n            path: '/custom-components/contact-no-mson',\n            label: 'Contact No MSON',\n            content: {\n              component: 'app.ContactNoMSON',\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n\nexport default app;\n","import Form from 'mson/lib/form';\nimport { TextField, EmailField, ButtonField } from 'mson/lib/fields';\nimport compiler from 'mson/lib/compiler';\nimport globals from 'mson/lib/globals';\n\n// Note: you can also use the following instead of the import above\n// const Form = compiler.getCompiledComponent('Form');\n\nclass ContactNoMSON extends Form {\n  create(props) {\n    super.create(props);\n\n    this.set({\n      fields: [\n        new TextField({\n          name: 'firstName',\n          label: 'First Name',\n          required: true,\n          block: false,\n        }),\n        new TextField({ name: 'lastName', label: 'Last Name', required: true }),\n        new EmailField({ name: 'email', label: 'Email' }),\n        new ButtonField({\n          name: 'import',\n          label: 'Import',\n          icon: 'ImportContacts',\n        }),\n        new ButtonField({\n          name: 'submit',\n          label: 'Submit',\n          type: 'submit',\n          icon: 'Save',\n        }),\n        new ButtonField({ name: 'cancel', label: 'Cancel', icon: 'Cancel' }),\n      ],\n    });\n\n    this.on('import', () => {\n      this.setValues({\n        firstName: 'Prince',\n        lastName: 'Nelson',\n        email: 'prince@example.com',\n      });\n    });\n\n    this.on('submit', () => {\n      // TODO: do something like contact an API\n\n      const values = this.getValues();\n      console.log('submitting', values);\n\n      globals.displaySnackbar(\n        `Submitted ${values.firstName} ${values.lastName}`\n      );\n\n      // Clear the values, in case we return to the Contact form later\n      this.reset();\n    });\n\n    this.on('cancel', () => {\n      // Redirect home\n      globals.redirect('/');\n    });\n  }\n}\n\ncompiler.registerComponent('app.ContactNoMSON', ContactNoMSON);\n","const contacts = {\n  name: 'app.Contacts',\n  component: 'Form',\n  schema: {\n    component: 'Form',\n    fields: [\n      {\n        name: 'store',\n        component: 'Field',\n      },\n    ],\n  },\n  fields: [\n    {\n      component: 'CollectionField',\n      name: 'contacts',\n      label: 'Contacts',\n      hideLabel: true,\n      // forbidCreate: true,\n      // forbidUpdate: true,\n      // forbidDelete: true,\n      // forbidViewArchived: true,\n      // forbidSearch: true,\n      // forbidSort: true,\n      formFactory: {\n        component: 'Factory',\n        product: {\n          component: 'Form',\n          fields: [\n            {\n              name: 'firstName',\n              component: 'TextField',\n              label: 'First Name',\n              required: true,\n              block: false,\n            },\n            {\n              name: 'lastName',\n              component: 'TextField',\n              label: 'Last Name',\n            },\n            {\n              name: 'email',\n              component: 'EmailField',\n              label: 'Email',\n            },\n          ],\n        },\n      },\n      store: '{{store}}',\n    },\n  ],\n};\n\nexport default contacts;\n","const chainedSelectOptions = [\n  { value: 1, parentValue: null, label: 'Germany' },\n  { value: 2, parentValue: null, label: 'USA' },\n\n  { value: 3, parentValue: 1, label: 'BMW' },\n  { value: 4, parentValue: 1, label: 'Mercedes' },\n\n  { value: 5, parentValue: 2, label: 'Tesla' },\n\n  { value: 6, parentValue: 3, label: 'i3' },\n  { value: 7, parentValue: 3, label: 'i8' },\n  { value: 8, parentValue: 4, label: 'S-Class' },\n\n  { value: 9, parentValue: 5, label: 'Model S' },\n\n  { value: 10, parentValue: 9, label: 'Red' },\n  { value: 11, parentValue: 9, label: 'Blue' },\n];\n\nconst fields = {\n  name: 'app.Fields',\n  component: 'Form',\n  fields: [\n    {\n      component: 'AddressField',\n      name: 'addressField',\n      label: 'AddressField',\n      help: 'Example help',\n      required: true,\n      elevate: false,\n    },\n\n    {\n      component: 'BooleanField',\n      name: 'booleanField',\n      label: 'BooleanField',\n      help: 'Example help',\n    },\n\n    {\n      name: 'buttonField',\n      component: 'ButtonField',\n      label: 'ButtonField',\n      icon: 'Save',\n      type: 'submit',\n      block: true,\n    },\n\n    {\n      component: 'ChainedSelectField',\n      name: 'chainedSelectField',\n      label: 'ChainedSel',\n      help: 'Example help',\n      required: true,\n      blankString: 'None',\n      // multiline: true,\n      // fullWidth: true,\n      options: chainedSelectOptions,\n    },\n\n    {\n      component: 'ChainedSelectListField',\n      name: 'chainedSelectListField',\n      label: 'ChainSelList',\n      help: 'Example help',\n      required: true,\n      blankString: 'None',\n      // multiline: true,\n      // fullWidth: true,\n      options: chainedSelectOptions,\n    },\n\n    {\n      name: 'cityField',\n      component: 'CityField',\n      label: 'CityField',\n      help: 'Example help',\n      required: true,\n    },\n\n    {\n      component: 'CollectionField',\n      name: 'collectionField',\n      label: 'Records',\n      help: 'Example help',\n      required: true,\n      // maxColumns: 1,\n      formFactory: {\n        component: 'Factory',\n        product: {\n          component: 'Form',\n          fields: [\n            {\n              name: 'firstName',\n              component: 'TextField',\n              label: 'First Name',\n              required: true,\n            },\n            {\n              name: 'lastName',\n              component: 'TextField',\n              label: 'Last Name',\n            },\n          ],\n        },\n      },\n    },\n\n    {\n      name: 'countryField',\n      component: 'CountryField',\n      label: 'CountryField',\n      help: 'Example help',\n      blankString: 'None',\n      required: true,\n    },\n\n    {\n      name: 'dateField',\n      component: 'DateField',\n      label: 'DateField',\n      help: 'Example help',\n      // includeTime: true,\n      minDate: '2018-01-01T23:07:28.157Z',\n      maxDate: '2022-01-01T23:07:28.157Z',\n      required: true,\n      // format: 'yyyy-MM-dd'\n    },\n\n    {\n      component: 'EmailField',\n      name: 'emailField',\n      label: 'Email',\n      help: 'Example help',\n      required: true,\n    },\n\n    {\n      component: 'FormField',\n      name: 'formField',\n      label: 'FormField',\n      help: 'Example help',\n      required: true,\n      // elevate: true,\n      form: {\n        component: 'Form',\n        fields: [\n          {\n            name: 'github',\n            component: 'URLField',\n            block: false,\n            label: 'GitHub',\n          },\n          {\n            name: 'medium',\n            component: 'URLField',\n            label: 'Medium',\n          },\n          {\n            name: 'twitter',\n            component: 'URLField',\n            label: 'Twitter',\n          },\n        ],\n      },\n    },\n\n    {\n      name: 'idField',\n      component: 'IdField',\n      label: 'IdField',\n      help: 'Example help',\n      required: true,\n    },\n\n    {\n      name: 'integerField',\n      component: 'IntegerField',\n      label: 'IntegerField',\n      help: 'Example help',\n      required: true,\n    },\n\n    {\n      component: 'ListField',\n      name: 'listFieldEmail',\n      label: 'ListField Email',\n      singularLabel: 'Email',\n      help: 'Example help',\n      required: true,\n      fieldFactory: {\n        component: 'Factory',\n        product: {\n          component: 'EmailField',\n        },\n      },\n    },\n\n    {\n      component: 'ListField',\n      name: 'listFieldName',\n      label: 'ListField Name',\n      singularLabel: 'Name',\n      help: 'Example help',\n      required: true,\n      fieldFactory: {\n        component: 'Factory',\n        product: {\n          component: 'PersonFullNameField',\n        },\n      },\n    },\n\n    {\n      name: 'moneyField',\n      component: 'MoneyField',\n      label: 'MoneyField',\n      help: 'Example help',\n      // prefix: '€',\n      // decimalSymbol: ',',\n      // thousandsSeparatorSymbol: '.',\n      required: true,\n    },\n\n    {\n      name: 'numberField',\n      component: 'NumberField',\n      label: 'NumberField',\n      help: 'Example help',\n      // includeThousandsSeparator: true,\n      required: true,\n    },\n\n    {\n      name: 'passwordField',\n      component: 'PasswordField',\n      label: 'PasswordField',\n      help: 'Example help',\n      required: true,\n    },\n\n    {\n      name: 'personFullNameField',\n      component: 'PersonFullNameField',\n      label: 'PersonFullNameField',\n      help: 'Example help',\n      required: true,\n    },\n\n    {\n      name: 'personNameField',\n      component: 'PersonNameField',\n      label: 'PersonNameField',\n      help: 'Example help',\n      required: true,\n    },\n\n    {\n      name: 'phoneField',\n      component: 'PhoneField',\n      label: 'PhoneField',\n      help: 'Example help',\n      // defaultMask: '.... ......',\n      required: true,\n    },\n\n    {\n      name: 'postalCodeField',\n      component: 'PostalCodeField',\n      label: 'PostalCodeField',\n      help: 'Example help',\n      required: true,\n    },\n\n    {\n      name: 'provinceField',\n      component: 'ProvinceField',\n      label: 'ProvinceField',\n      help: 'Example help',\n      required: true,\n    },\n\n    {\n      component: 'ReCAPTCHAField',\n    },\n\n    {\n      name: 'selectField',\n      component: 'SelectField',\n      label: 'SelectField',\n      help: 'Example help',\n      required: true,\n      blankString: 'None',\n      options: [\n        { value: 'red', label: 'Red' },\n        { value: 'green', label: 'Green' },\n        { value: 'blue', label: 'Blue' },\n      ],\n    },\n\n    {\n      name: 'selectFieldMult',\n      component: 'SelectField',\n      label: 'SelFld (mult)',\n      help: 'Example help',\n      required: true,\n      multiple: true,\n      blankString: 'None',\n      // autocomplete: false,\n      options: [\n        { value: 'red', label: 'Red' },\n        { value: 'green', label: 'Green' },\n        { value: 'blue', label: 'Blue' },\n      ],\n    },\n\n    {\n      name: 'selectListField',\n      component: 'SelectListField',\n      label: 'SelListField',\n      help: 'Example help',\n      required: true,\n      blankString: 'None', // Provide a way for the user to delete the entry\n      options: [\n        { value: 'red', label: 'Red' },\n        { value: 'green', label: 'Green' },\n        { value: 'blue', label: 'Blue' },\n      ],\n    },\n\n    {\n      name: 'stateField',\n      component: 'StateField',\n      label: 'StateField',\n      help: 'Example help',\n      blankString: 'None',\n      required: true,\n    },\n\n    {\n      name: 'text',\n      component: 'Text',\n      text:\n        '# Text\\nCan contain any [markdown](https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet)',\n    },\n\n    {\n      name: 'timeField',\n      component: 'TimeField',\n      label: 'TimeField',\n      help: 'Example help',\n      // showSeconds: true,\n      required: true,\n    },\n\n    {\n      name: 'textField',\n      component: 'TextField',\n      label: 'TextField',\n      help: 'Example help',\n      // mask: ['(', '/[1-9]/', '/\\\\d/', '/\\\\d/', ')'],\n      // mask: '(...)',\n      required: true,\n    },\n\n    {\n      name: 'textListField',\n      component: 'TextListField',\n      label: 'TextListField',\n      help: 'Example help',\n      singularLabel: 'Text Item',\n      required: true,\n    },\n\n    {\n      name: 'urlField',\n      component: 'URLField',\n      label: 'URLField',\n      help: 'Example help',\n      // newWindow: true,\n      required: true,\n    },\n  ],\n};\n\nexport default fields;\n","import App from './app';\nimport './contact-no-mson';\nimport Contacts from './contacts';\nimport ContactsLocalStorage from './contacts-local-storage';\nimport ContactsFirebase from './contacts-firebase';\nimport EditContact from './edit-contact';\nimport FieldsScreen from './fields-screen';\nimport Fields from './fields';\nimport FormBuilder from './form-builder';\nimport GenerateComponent from './generate-component';\nimport Grid from './grid';\nimport Home from './home';\nimport Tasks from './tasks';\nimport TasksLocalStorage from './tasks-local-storage';\nimport TasksFirebase from './tasks-firebase';\nimport Router from './router';\n\nconst components = {\n  App,\n  Contacts,\n  ContactsLocalStorage,\n  ContactsFirebase,\n  EditContact,\n  FieldsScreen,\n  Fields,\n  FormBuilder,\n  GenerateComponent,\n  Grid,\n  Home,\n  Tasks,\n  TasksLocalStorage,\n  TasksFirebase,\n  Router,\n};\n\nexport default components;\n","const contactsLocalStorage = {\n  name: 'app.ContactsLocalStorage',\n  component: 'app.Contacts',\n  store: {\n    component: 'LocalStorageStore',\n    storeName: 'contactsLocalStorage',\n  },\n};\n\nexport default contactsLocalStorage;\n","const contactsFirebase = {\n  name: 'app.ContactsFirebase',\n  component: 'app.Contacts',\n  store: {\n    component: 'FirebaseStore',\n    apiKey: 'AIzaSyCJfqjdBBrXtwkXla6uMX3LZGOLDAgTEx0',\n    authDomain: 'mson-contacts.firebaseapp.com',\n    projectId: 'mson-contacts',\n    collection: 'contacts',\n  },\n};\n\nexport default contactsFirebase;\n","const editContact = {\n  name: 'app.EditContact',\n  component: 'RecordEditor',\n  baseForm: {\n    component: 'Form',\n    fields: [\n      {\n        name: 'firstName',\n        component: 'TextField',\n        label: 'First Name',\n        required: true,\n        block: false,\n      },\n      {\n        name: 'lastName',\n        component: 'TextField',\n        label: 'Last Name',\n      },\n      {\n        name: 'email',\n        component: 'EmailField',\n        label: 'Email',\n      },\n    ],\n    listeners: [\n      {\n        event: 'load',\n        actions: [\n          {\n            // Default the id to '1' so that we can edit the doc later. Usually, this id would come\n            // from the route or the user's session\n            component: 'Set',\n            name: 'fields.id.value',\n            value: '1',\n          },\n        ],\n      },\n    ],\n  },\n  label: 'Contact',\n  store: {\n    component: 'LocalStorageStore',\n    storeName: 'contactLocalStorage',\n  },\n  storeWhere: {\n    id: '1',\n  },\n};\n\nexport default editContact;\n","const fieldsScreen = {\n  name: 'app.FieldsScreen',\n  component: 'app.Fields',\n  fields: [\n    {\n      name: 'import',\n      component: 'ButtonField',\n      label: 'Import',\n      icon: 'ImportContacts',\n    },\n    {\n      name: 'reset',\n      component: 'ButtonField',\n      label: 'Reset',\n      icon: 'ClearAll',\n    },\n    {\n      name: 'toggleDisplayValues',\n      component: 'ButtonField',\n      label: 'Show Display Values',\n      icon: 'ViewHeadline',\n    },\n    {\n      name: 'toggleEditable',\n      component: 'ButtonField',\n      label: 'Immutable',\n      icon: 'NotInterested',\n    },\n    {\n      name: 'toggleDisabled',\n      component: 'ButtonField',\n      label: 'Disable',\n      icon: 'Lock',\n    },\n    {\n      name: 'toggleFullWidth',\n      component: 'ButtonField',\n      label: 'Full Width',\n      icon: 'FormatAlignJustify',\n    },\n    {\n      name: 'log',\n      component: 'ButtonField',\n      label: 'Log Values',\n      icon: 'MoveToInbox',\n    },\n  ],\n  listeners: [\n    {\n      event: 'import',\n      actions: [\n        {\n          component: 'Set',\n          name: 'component',\n          value: {\n            'fields.addressField.value': {\n              addressLine1: '121 Pike Street',\n              addressLine2: 'Suite 201',\n              city: 'Seatte',\n              stateProvince: 'WA',\n              postalCode: '98107',\n              country: 'US',\n            },\n            'fields.booleanField.value': true,\n            'fields.chainedSelectField.value': [2, 5, 9, 10],\n            'fields.chainedSelectListField.value': [\n              [1, 3, 7],\n              [2, 5, 9, 10],\n            ],\n            'fields.cityField.value': 'Seattle',\n            'fields.collectionField.value': [\n              {\n                id: 'daenerys',\n                firstName: 'Daenerys',\n                lastName: 'Targaryen',\n              },\n              {\n                id: 'jon',\n                firstName: 'Jon',\n                lastName: 'Snow',\n              },\n              {\n                id: 'tyrion',\n                firstName: 'Tyrion',\n                lastName: 'Lannister',\n              },\n            ],\n            'fields.countryField.value': 'US',\n            'fields.dateField.value': '2018-09-27T17:24:24.960Z',\n            'fields.emailField.value': 'test@example.com',\n            'fields.formField.value': {\n              github: 'github.com/redgeoff',\n              medium: 'medium.com/@redgeoff',\n              twitter: 'twitter.com/coxgeoffrey',\n            },\n            // 'fields.github.value': 'github.com/redgeoff',\n            // 'fields.medium.value': 'medium.com/@redgeoff',\n            // 'fields.twitter.value': 'twitter.com/coxgeoffrey',\n            'fields.idField.value': 'id-123',\n            'fields.integerField.value': 123,\n            'fields.listFieldEmail.value': [\n              'test1@example.com',\n              'test2@example.com',\n            ],\n            'fields.listFieldName.value': [\n              { firstName: 'Ella', lastName: 'Fitzgerald' },\n              { firstName: 'Ray', lastName: 'Charles' },\n            ],\n            'fields.moneyField.value': 1000000.11,\n            'fields.numberField.value': 123.4,\n            'fields.passwordField.value': 'password123',\n            'fields.personFullNameField.value': {\n              firstName: 'Daenerys',\n              lastName: 'Targaryen',\n            },\n            'fields.personNameField.value': 'Daenerys',\n            'fields.phoneField.value': '6461234567',\n            'fields.postalCodeField.value': '98107',\n            'fields.provinceField.value': 'British Columbia',\n            'fields.selectField.value': 'red',\n            'fields.selectFieldMult.value': ['red', 'blue'],\n            'fields.selectListField.value': ['red', 'green'],\n            'fields.stateField.value': 'WA',\n            'fields.timeField.value': '2018-09-27T17:24:24.960Z',\n            'fields.textField.value': 'Go MSON',\n            'fields.textListField.value': ['MSON', 'React', 'Material-UI'],\n            'fields.urlField.value': 'mson.co',\n          },\n        },\n      ],\n    },\n    {\n      event: 'reset',\n      actions: [\n        {\n          component: 'Set',\n          name: 'reset',\n          value: true,\n        },\n      ],\n    },\n    {\n      event: 'toggleDisplayValues',\n      actions: [\n        {\n          component: 'Action',\n          if: {\n            'fields.id.useDisplayValue': {\n              $ne: true,\n            },\n          },\n          actions: [\n            {\n              component: 'Set',\n              name: 'component',\n              value: {\n                eachField: {\n                  useDisplayValue: true,\n                },\n                'fields.toggleDisplayValues': {\n                  label: 'Hide Display Values',\n                  icon: 'Input',\n                },\n              },\n            },\n          ],\n          else: [\n            {\n              component: 'Set',\n              name: 'component',\n              value: {\n                eachField: {\n                  useDisplayValue: false,\n                },\n                'fields.toggleDisplayValues': {\n                  label: 'Show Display Values',\n                  icon: 'ViewHeadline',\n                },\n              },\n            },\n          ],\n        },\n      ],\n    },\n    {\n      event: 'toggleEditable',\n      actions: [\n        {\n          component: 'Action',\n          if: {\n            'fields.id.editable': {\n              $ne: true,\n            },\n          },\n          actions: [\n            {\n              component: 'Set',\n              name: 'component',\n              value: {\n                editable: true,\n                'fields.toggleEditable': {\n                  label: 'Immutable',\n                  icon: 'NotInterested',\n                },\n              },\n            },\n          ],\n          else: [\n            {\n              component: 'Set',\n              name: 'component',\n              value: {\n                editable: false,\n                'fields.toggleEditable': {\n                  label: 'Editable',\n                  icon: 'Edit',\n                },\n              },\n            },\n          ],\n        },\n      ],\n    },\n    {\n      event: 'toggleDisabled',\n      actions: [\n        {\n          component: 'Action',\n          if: {\n            'fields.id.disabled': {\n              $ne: true,\n            },\n          },\n          actions: [\n            {\n              component: 'Set',\n              name: 'component',\n              value: {\n                disabled: true,\n                'fields.toggleDisabled': {\n                  label: 'Enable',\n                  icon: 'LockOpen',\n                },\n              },\n            },\n            {\n              // Renable so we can still click the button\n              component: 'Set',\n              name: 'fields.toggleDisabled.disabled',\n              value: false,\n            },\n          ],\n          else: [\n            {\n              component: 'Set',\n              name: 'component',\n              value: {\n                disabled: false,\n                'fields.toggleDisabled': {\n                  label: 'Disable',\n                  icon: 'Lock',\n                },\n              },\n            },\n          ],\n        },\n      ],\n    },\n    {\n      event: 'toggleFullWidth',\n      actions: [\n        {\n          component: 'Action',\n          if: {\n            'fields.id.fullWidth': {\n              $ne: true,\n            },\n          },\n          actions: [\n            {\n              component: 'Set',\n              name: 'component',\n              value: {\n                fullWidth: true,\n                'fields.toggleFullWidth': {\n                  label: 'Flex Width',\n                  icon: 'FormatAlignLeft',\n                },\n              },\n            },\n          ],\n          else: [\n            {\n              component: 'Set',\n              name: 'component',\n              value: {\n                fullWidth: false,\n                'fields.toggleFullWidth': {\n                  label: 'Full Width',\n                  icon: 'FormatAlignLeft',\n                },\n              },\n            },\n          ],\n        },\n      ],\n    },\n    {\n      event: 'log',\n      actions: [\n        {\n          component: 'ConsoleLog',\n          message: '{{value}}',\n        },\n      ],\n    },\n  ],\n};\n\nexport default fieldsScreen;\n","const formBuilder = {\n  name: 'app.FormBuilder',\n  component: 'FormBuilder',\n  'fields.form.form.fields.fields.store': {\n    component: 'LocalStorageStore',\n    storeName: 'myForm',\n  },\n};\n\nexport default formBuilder;\n","// Dynamically generate a field based on a query parameter\nconst generateComponent = {\n  name: 'app.GenerateComponent',\n  component: 'Action',\n  schema: {\n    component: 'Form',\n    fields: [\n      {\n        name: 'componentType',\n        component: 'TextField',\n        // value: 'CountryField' // TODO: allow for defaulting here\n      },\n    ],\n  },\n  actions: [\n    {\n      component: 'Action',\n      if: {\n        'globals.route.query.type': null,\n      },\n      actions: [\n        {\n          component: 'Set',\n          name: 'componentType',\n          value: 'CountryField',\n        },\n      ],\n      else: [\n        {\n          component: 'Set',\n          name: 'componentType',\n          value: '{{globals.route.query.type}}',\n        },\n      ],\n    },\n    {\n      component: 'GenerateComponent',\n      definition: JSON.stringify({\n        component: 'Form',\n        fields: [\n          {\n            name: 'type',\n            component: 'SelectField',\n            label: 'Field Type',\n            options: [\n              { value: 'TextField', label: 'TextField' },\n              { value: 'PersonFullNameField', label: 'PersonFullNameField' },\n              { value: 'CountryField', label: 'CountryField' },\n            ],\n            value: '{{componentType}}',\n            autocomplete: false,\n          },\n          {\n            name: 'generatedField',\n            component: '{{componentType}}',\n            label: 'Generated Field',\n          },\n        ],\n        listeners: [\n          {\n            event: 'fields.type.value',\n            actions: [\n              {\n                component: 'Redirect',\n                path: '/router/generate-component?type={{fields.type.value}}',\n              },\n            ],\n          },\n        ],\n      }),\n    },\n  ],\n};\n\nexport default generateComponent;\n","const grid = {\n  name: 'app.Grid',\n  component: 'Grid',\n  items: [\n    {\n      component: 'GridItem',\n      md: 6,\n      xs: 12,\n      content: {\n        component: 'Text',\n        text: '# A',\n      },\n    },\n    {\n      component: 'GridItem',\n      md: 6,\n      xs: 12,\n      content: {\n        component: 'Text',\n        text: '# B',\n      },\n    },\n    {\n      component: 'GridItem',\n      md: 6,\n      xs: 12,\n      content: {\n        component: 'Text',\n        text: '# C',\n      },\n    },\n    {\n      component: 'GridItem',\n      md: 6,\n      xs: 12,\n      content: {\n        component: 'Text',\n        text: '# D',\n      },\n    },\n    {\n      component: 'GridItem',\n      md: 6,\n      xs: 12,\n      content: {\n        name: 'toggleA',\n        component: 'ButtonField',\n        label: 'Toggle A',\n        listeners: [\n          {\n            event: 'click',\n            actions: [\n              {\n                component: 'Action',\n                if: {\n                  'parent.parent.items.0.hidden': true,\n                },\n                actions: [\n                  {\n                    component: 'Set',\n                    name: 'parent.parent.items.0.hidden',\n                    value: false,\n                  },\n                ],\n                else: [\n                  {\n                    component: 'Set',\n                    name: 'parent.parent.items.0.hidden',\n                    value: true,\n                  },\n                ],\n              },\n            ],\n          },\n        ],\n      },\n    },\n  ],\n};\n\nexport default grid;\n","const home = {\n  name: 'app.Home',\n  component: 'Text',\n  text: '# Welcome\\nCheck out the examples on the left',\n};\n\nexport default home;\n","const tasks = {\n  name: 'app.Tasks',\n  component: 'Form',\n  schema: {\n    component: 'Form',\n    fields: [\n      {\n        name: 'store',\n        component: 'Field',\n      },\n    ],\n  },\n  fields: [\n    {\n      component: 'Text',\n      name: 'header',\n      text: '(drag to reorder)',\n    },\n    {\n      component: 'CollectionField',\n      name: 'tasks',\n      label: 'Tasks',\n      hideLabel: true,\n      // forbidCreate: true,\n      // forbidUpdate: true,\n      // forbidDelete: true,\n      // forbidViewArchived: true,\n      // forbidSearch: true,\n      // forbidSort: true,\n      forbidOrder: false,\n      formFactory: {\n        component: 'Factory',\n        product: {\n          component: 'Form',\n          fields: [\n            {\n              name: 'task',\n              component: 'TextField',\n              label: 'Task',\n              multiline: true,\n              required: true,\n            },\n            {\n              name: 'due',\n              component: 'DateField',\n              label: 'Due',\n            },\n          ],\n        },\n      },\n      store: '{{store}}',\n    },\n  ],\n};\n\nexport default tasks;\n","const tasksLocalStorage = {\n  name: 'app.TasksLocalStorage',\n  component: 'app.Tasks',\n  store: {\n    component: 'LocalStorageStore',\n    storeName: 'tasksLocalStorage',\n  },\n};\n\nexport default tasksLocalStorage;\n","const tasksFirebase = {\n  name: 'app.TasksFirebase',\n  component: 'app.Tasks',\n  store: {\n    component: 'FirebaseStore',\n    apiKey: 'AIzaSyCJfqjdBBrXtwkXla6uMX3LZGOLDAgTEx0',\n    authDomain: 'mson-contacts.firebaseapp.com',\n    projectId: 'mson-contacts',\n    collection: 'tasks',\n  },\n};\n\nexport default tasksFirebase;\n","const router = {\n  name: 'app.Router',\n  component: 'Form',\n  fields: [\n    {\n      component: 'TextField',\n      name: 'personId',\n      label: 'personId',\n      block: false,\n    },\n    {\n      component: 'TextField',\n      name: 'messageId',\n      label: 'messageId',\n    },\n    {\n      component: 'TextField',\n      name: 'first',\n      label: 'first',\n      block: false,\n    },\n    {\n      component: 'TextField',\n      name: 'last',\n      label: 'last',\n    },\n    {\n      component: 'TextField',\n      name: 'hash',\n      label: 'hash',\n    },\n    {\n      component: 'ButtonField',\n      name: 'submit',\n      label: 'Go',\n      type: 'submit',\n      icon: 'Send',\n    },\n  ],\n  listeners: [\n    {\n      event: 'load',\n      actions: [\n        {\n          component: 'Set',\n          name: 'value',\n          value: {\n            personId: '{{globals.route.parameters.personId}}',\n            messageId: '{{globals.route.parameters.messageId}}',\n            first: '{{globals.route.query.first}}',\n            last: '{{globals.route.query.last}}',\n            hash: '{{globals.route.hash}}',\n          },\n        },\n      ],\n    },\n    {\n      event: 'submit',\n      actions: [\n        {\n          component: 'Set',\n          name: 'pristine',\n          value: true,\n        },\n        {\n          component: 'Redirect',\n          path:\n            '/router/person/{{fields.personId.value}}/message/{{fields.messageId.value}}?first={{fields.first.value}}&last={{fields.last.value}}#{{fields.hash.value}}',\n        },\n      ],\n    },\n  ],\n};\n\nexport default router;\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Form from './form';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Field from './fields/field';\nimport compiler from 'mson/lib/compiler';\nimport each from 'lodash/each';\nimport attach from './attach';\nimport ComponentField from 'mson/lib/fields/component-field';\n\nconst styles = (theme) => ({\n  form: {\n    overflowY: 'scroll',\n    maxHeight: 'calc(100vh - 390px)',\n    marginTop: theme.spacing(3),\n  },\n});\n\nclass FieldEditorForm extends React.PureComponent {\n  state = {\n    field: null,\n  };\n\n  handleValueChange = (value) => {\n    const form = this.props.component;\n    let { field } = this.state;\n    let component = null;\n\n    // Is the field changing?\n    if (!field || value.componentName !== field.getClassName()) {\n      if (field) {\n        // Prevent listener leak\n        field.destroy();\n      }\n\n      if (value.componentName) {\n        component = compiler.newComponent({\n          component: value.componentName,\n        });\n\n        // Is the component a field?\n        if (component.isField) {\n          field = component;\n        } else {\n          // e.g. Text component is not a field\n          field = new ComponentField({ content: component });\n        }\n\n        // Auto validate so that the user can preview how the validation will work\n        const validate = () => {\n          field.clearErr();\n          field.validate();\n        };\n        field.on('value', validate);\n        field.on('touched', validate);\n      } else {\n        field = null;\n      }\n    }\n\n    if (field) {\n      // Set field values using form values. The corresponding values may not exist if the field was\n      // just changed.\n      const values = form.getValues({ default: false });\n      component =\n        field.getClassName() === 'ComponentField'\n          ? field.get('content')\n          : field;\n      each(values, (value, name) => {\n        if (component.has(name)) {\n          component.set({ [name]: value });\n        }\n      });\n    }\n\n    this.setState({ field });\n  };\n\n  componentDidMount() {\n    // Note: we use a listener on value instead of attaching to value as a shallow compare of value\n    // would not trigger a state change.\n    this.props.component.on('value', this.handleValueChange);\n\n    // Initialize with the current value\n    this.handleValueChange(this.props.component.getValues());\n  }\n\n  componentWillUnmount() {\n    this.props.component.removeListener('value', this.handleValueChange);\n  }\n\n  render() {\n    const { component, classes, formTag, mode } = this.props;\n    const { field } = this.state;\n\n    let preview = null;\n    if (field && mode !== 'read') {\n      preview = (\n        <Card className={classes.card}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Preview\n            </Typography>\n            <Field component={field} />\n          </CardContent>\n        </Card>\n      );\n    }\n\n    if (mode !== 'read') {\n      return (\n        <React.Fragment>\n          <div className={classes.preview}>{preview}</div>\n          <div className={classes.form}>\n            <Form component={component} formTag={formTag} mode={mode} />\n          </div>\n        </React.Fragment>\n      );\n    } else if (field) {\n      // Disable so that the user can edit the field with a click\n      return <Field component={field} disabled={true} />;\n    } else {\n      return null;\n    }\n  }\n}\n\nFieldEditorForm = withStyles(styles)(FieldEditorForm);\nFieldEditorForm = attach(['mode'])(FieldEditorForm);\n\nexport default FieldEditorForm;\n","import React from 'react';\nimport Form from './form';\nimport Component from './component';\nimport attach from './attach';\n\nclass FormEditor extends React.Component {\n  render() {\n    const { editable, component } = this.props;\n    if (editable !== false) {\n      return <Form {...this.props} />;\n    } else {\n      // Note: we need to use a getter to generate the definition\n      const definition = component.get('definition');\n\n      // Needed as form tag cannot be a descendant of a form tag\n      const formTag = false;\n\n      return <Component definition={definition} formTag={formTag} />;\n    }\n  }\n}\n\nFormEditor = attach(['editable'])(FormEditor);\n\nexport default FormEditor;\n","import React from 'react';\nimport useComponent from '../../use-component';\nimport Typography from '@material-ui/core/Typography';\nimport compile from 'mson/lib/compiler/compile';\n\nconst CustomComponent = compile({\n  component: 'UIComponent',\n  name: 'CustomComponent',\n  schema: {\n    component: 'Form',\n    fields: [\n      {\n        component: 'TextField',\n        name: 'name',\n      },\n      {\n        component: 'TextField',\n        name: 'label',\n      },\n    ],\n  },\n});\n\nconst ReactCustomComponent = (props) => {\n  const { name, label } = useComponent(props.component, ['name', 'label']);\n  return (\n    <div>\n      <Typography variant=\"h3\">Name: {name}</Typography>\n      <Typography variant=\"h4\">Label: {label}</Typography>\n    </div>\n  );\n};\n\nexport { CustomComponent, ReactCustomComponent };\n","import React from 'react';\nimport attach from '../../attach';\nimport Typography from '@material-ui/core/Typography';\n\nimport UIComponent from 'mson/lib/ui-component';\nimport Form from 'mson/lib/form';\nimport TextField from 'mson/lib/fields/text-field';\n\nclass CustomComponentJS extends UIComponent {\n  // className is needed as JS minification strips the constructor name\n  className = 'CustomComponentJS';\n\n  create(props) {\n    super.create(props);\n\n    this.set({\n      schema: new Form({\n        fields: [\n          new TextField({\n            name: 'name',\n          }),\n          new TextField({\n            name: 'label',\n          }),\n        ],\n      }),\n    });\n  }\n}\n\nlet ReactCustomComponentJS = (props) => {\n  const { name, label } = props;\n  return (\n    <div>\n      <Typography variant=\"h3\">Name: {name}</Typography>\n      <Typography variant=\"h4\">Label: {label}</Typography>\n    </div>\n  );\n};\n\n// Bind React props to MSON component props\nReactCustomComponentJS = attach(['name', 'label'])(ReactCustomComponentJS);\n\nexport { CustomComponentJS, ReactCustomComponentJS };\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport compile from 'mson/lib/compiler/compile';\n\nconst ReactCustomComponentNoProps = (/* props */) => {\n  const text = 'This text is private to the React component';\n  return (\n    <div>\n      <Typography variant=\"h5\">Text: {text}</Typography>\n    </div>\n  );\n};\n\nconst CustomComponentNoProps = compile({\n  component: 'UIComponent',\n  name: 'CustomComponentNoProps',\n  render: ReactCustomComponentNoProps,\n});\n\nexport { CustomComponentNoProps };\n","import React from 'react';\nimport attach from '../../attach';\nimport Typography from '@material-ui/core/Typography';\nimport compile from 'mson/lib/compiler/compile';\n\nlet ReactCustomComponentAttach = (props) => {\n  const { name, label } = props;\n  return (\n    <div>\n      <Typography variant=\"h3\">Name: {name}</Typography>\n      <Typography variant=\"h4\">Label: {label}</Typography>\n    </div>\n  );\n};\n\n// Bind React props to MSON component props\nReactCustomComponentAttach = attach(['name', 'label'])(\n  ReactCustomComponentAttach\n);\n\nconst CustomComponentAttach = compile({\n  component: 'UIComponent',\n  name: 'CustomComponent',\n  schema: {\n    component: 'Form',\n    fields: [\n      {\n        component: 'TextField',\n        name: 'name',\n      },\n      {\n        component: 'TextField',\n        name: 'label',\n      },\n    ],\n  },\n  render: ReactCustomComponentAttach,\n});\n\nexport { CustomComponentAttach };\n","import compiler from 'mson/lib/compiler';\nimport register from 'mson/lib/compiler/register';\nimport components from './components';\nimport globals from 'mson/lib/globals';\nimport { register as uiRegister } from '../components';\nimport FieldEditorForm from 'mson/lib/form/field-editor-form';\nimport FieldEditorFormUI from '../field-editor-form';\nimport FormEditor from 'mson/lib/form/form-editor';\nimport FormEditorUI from '../form-editor';\nimport FormBuilder from 'mson/lib/form/form-builder';\n\nimport {\n  CustomComponent,\n  ReactCustomComponent,\n} from './components/custom-component';\nimport {\n  CustomComponentJS,\n  ReactCustomComponentJS,\n} from './components/custom-component-js';\nimport { CustomComponentNoProps } from './components/custom-component-no-props';\nimport { CustomComponentAttach } from './components/custom-component-attach';\n\n// Set the site key when using the ReCAPTCHAField\nglobals.set({ reCAPTCHASiteKey: '6LdIbGMUAAAAAJnipR9t-SnWzCbn0ZX2myXBIauh' });\n\n// Register optional core components\nregister('FieldEditorForm', FieldEditorForm);\nuiRegister('FieldEditorForm', FieldEditorFormUI);\nregister('FormEditor', FormEditor);\nuiRegister('FormEditor', FormEditorUI);\nregister('FormBuilder', FormBuilder);\n\n// You can register custom components with the backend and frontend separately\nregister('CustomComponent', CustomComponent);\nuiRegister('CustomComponent', ReactCustomComponent);\nregister('CustomComponentJS', CustomComponentJS);\nuiRegister('CustomComponentJS', ReactCustomComponentJS);\n\n// You can also register UIComponents that bundle the frontend and backend together\nregister('CustomComponentNoProps', CustomComponentNoProps);\nregister('CustomComponentAttach', CustomComponentAttach);\n\n// Register all the components\nObject.keys(components).forEach((name) => register(components[name]));\n\n// Instantiate the app\nconst app = compiler.newComponent({\n  component: 'app.App',\n});\n\nexport default app;\n","import { render } from '../bundle';\nimport app from './app';\n\n// Render the app\nrender(app);\n"],"sourceRoot":""}