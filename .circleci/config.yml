version: 2

jobs:
  build:
    branches:
      ignore:
        # Ignore gh-pages as the tests don't apply
        - gh-pages
  
    # Change working directory so that mson-server scripts have reference back to mson
    working_directory: ~/mson-react

    docker:
      # TODO: restore after https://github.com/facebook/jest/issues/8069 has been resolved
      # - image: circleci/node:stretch-browsers
      - image: circleci/node:10-stretch-browsers

      # Fix MySQL at version 5.7 so that it is compatible with AWS Aurora
      # - image: circleci/mysql:5.7
      #   environment:
      #     MYSQL_ROOT_PASSWORD: secret
      #     MYSQL_ROOT_HOST: '%'

      # - image: redis

    steps:
      - run: echo 127.0.0.1 node.dev | sudo tee -a /etc/hosts

      - checkout
      - restore_cache:
          keys:
          - dependencies-v2-{{ checksum "package.json" }}
          - dependencies-v2-
      - run: yarn install
      - save_cache:
          paths:
            - node_modules
          key: dependencies-v2-{{ checksum "package.json" }}

      # Test against master so that we can develop new features without building a new MSON release
      - run: git clone https://github.com/redgeoff/mson ../mson
      - restore_cache:
          keys:
          - mson-dependencies-v2-{{ checksum "package.json" }}
          - mson-dependencies-v2-
      - run: cd ../mson && yarn install && yarn compile && yarn link
      - save_cache:
          paths:
            - ../mson/node_modules
          key: mson-dependencies-v2-{{ checksum "package.json" }}
      - run: yarn link mson

      # - run: yarn setup

      # Wait for MySQL to be ready
      # - run: ./node_modules/wait-on/bin/wait-on tcp:3306

      # Wait for Redis to be ready
      # - run: ./node_modules/wait-on/bin/wait-on tcp:6379

      - run: CI=true yarn test

      # Check bundle size
      - run: yarn build && ./scripts/bundle-size.sh

      # Sanity check compilation as compilation uses custom babel settings
      - run: yarn compile
