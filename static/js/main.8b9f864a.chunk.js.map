{"version":3,"sources":["icon.js","submenu.js","attach.js","menu.js","search-bar.js","icon-button.js","label-button.js","button.js","fields/button-field.js","form-control.js","fields/help-tool-tip.js","fields/form-label.js","fields/common-field.js","fields/display-value-typography.js","fields/boolean-field.js","card.js","fields/component-field.js","flex-break.js","utils.js","fields/field.js","fields/composite-field.js","fields/date-field.js","form.js","fields/form-field.js","fragment.js","grid-item.js","grid.js","form-card-buttons.js","form-card.js","form-dialog.js","confirmation-dialog.js","fields/select-order.js","fields/collection-field.js","fields/list-item-field.js","fields/list-field.js","fields/re-captcha-field.js","fields/autocomplete-select.js","fields/select-field.js","tabs.js","fields/time-field.js","text.js","fields/text-field.js","fields/url-field.js","components.js","component-utils.js","inner-component.js","component.js","snackbar.js","app.js","app-container.js","register-service-worker.js","render.js","demo/components/app.js","demo/components/contact-no-mson.js","demo/components/contacts.js","demo/components/contacts-local-storage.js","demo/components/contacts-firebase.js","demo/components/edit-contact.js","demo/components/fields-screen.js","demo/components/fields.js","demo/components/form-builder.js","demo/components/generate-component.js","demo/components/grid.js","demo/components/home.js","demo/components/tasks.js","demo/components/tasks-local-storage.js","demo/components/tasks-firebase.js","demo/components/router.js","field-editor-form.js","form-editor.js","demo/app.js","demo/index.js"],"names":["Icon","handleClick","event","props","onClick","svgIconName","snakeCase","this","className","icon","role","iconContents","toFontIconName","aria-hidden","aria-label","React","PureComponent","Submenu","item","items","setState","open","state","onNavigate","onDrawerToggle","childSelected","path","each","classes","listItems","forEach","index","isSelected","classNames","secondary","push","selected","roles","registrar","client","user","hasRole","hidden","ListItem","button","nested","key","ListItemText","disableTypography","primary","Typography","variant","join","label","Collapse","in","timeout","unmountOnExit","List","disablePadding","withStyles","theme","paddingLeft","spacing","color","palette","text","fontWeight","attach","_watchProps","componentOrName","Component","wasMounted","getComponent","component","handleFieldChange","name","value","watchProps","indexOf","difference","Object","keys","hasComponent","get","prevProps","removeListener","addListener","setInitialState","on","initialState","Menu","handleDrawerToggle","handleNavigate","menuItem","submenus","mobileOpen","responsive","drawer","drawerHeader","Divider","temporaryDrawer","Drawer","anchor","direction","paper","drawerPaper","onClose","ModalProps","keepMounted","permanentDrawer","drawPaperResponsive","Hidden","mdUp","smDown","implementation","mixins","toolbar","paddingTop","width","breakpoints","up","position","height","withTheme","SearchBar","autoFullWidth","handleKeyUp","keyCode","onSearch","searchString","handleClearSearch","handleFocus","handleBlur","onChange","fullWidth","full","grow","InputProps","disableUnderline","input","textFieldInput","onKeyUp","target","textField","onFocus","onBlur","iconContainer","searchIcon","closeIcon","borderRadius","backgroundColor","fontSize","typography","subtitle1","padding","marginTop","common","white","top","left","right","flexGrow","IconButton","tooltip","useState","hovered","setHovered","onMouseEnter","Tooltip","title","useStyles","makeStyles","leftIcon","marginRight","Button","type","disabled","ButtonField","emitClick","FormControl","children","marginBottom","fullWidthClassName","noMarginBottomClassName","noMarginBottom","formControl","margin","HelpToolTip","help","disableTouchListener","FormLabel","shrink","childProps","assign","undefined","noShrink","caption","CommonField","fld","required","err","editable","touched","hideLabelUI","hideLabel","useDisplayValue","shrinkLabel","inlineLabel","autoHideLabel","lbl","isBlank","id","getUniqueId","labelText","htmlFor","error","InputLabel","firstErr","getFirstErr","FormHelperText","DisplayValueTypography","root","display","BooleanField","handleChange","setValue","checked","FormControlLabel","control","Switch","getDisplayValue","Card","content","container","justify","xs","sm","md","lg","Paper","wrap","flex","ComponentField","marginLeft","FlexBreak","break","definedProps","Field","block","accessEditable","didCreate","noBlock","getClassName","componentUtils","getUIComponent","Fragment","utils","getIfDefined","CompositeField","fields","lastIsBlock","first","eachField","field","last","DateField","handleDateChange","date","setTouched","includeTime","minDate","maxDate","dis","DateTimePicker","DatePicker","DateFnsUtils","clearable","Form","fieldsCanAccess","handleSave","preventDefault","validate","getErrs","length","submit","turnOnAutoValidate","access","calcFieldsCanAccess","set","autoValidate","mode","getFields","ignoreErrs","prevState","adjustAccess","formTag","isLoading","getKey","flds","map","onSubmit","FormField","form","flexFlow","GridItem","xl","Grid","FormCardButtons","forbidUpdate","forbidDelete","archivedAt","onEdit","onDelete","updateButton","deleteButton","FormCard","handleEdit","handleDelete","cardButtons","buttons","cursor","FormDialog","saveClicked","previousMode","handleClose","withCancelButton","onCancel","currentForm","disableSubmit","onSave","CollectionFieldCore","MODES","DELETE","RESTORE","fullScreen","disableSave","hasErrorForTouchedField","isOpen","Dialog","aria-labelledby","DialogContent","DialogActions","withMobileDialog","ConfirmationDialog","yes","alert","aria-describedby","DialogTitle","DialogContentText","autoFocus","SelectOrder","sortOrder","sortBy","flipped","options","option","MenuItem","Select","flip","transform","getItemStyle","isDragging","draggableStyle","userSelect","background","getListStyle","isDraggingOver","grey","CollectionField","handleCancel","preventReadAction","READ","UPDATE","handleNew","CREATE","a","save","formToDelete","getValue","handleConfirmationClose","archive","handleOrdering","order","onDragEnd","result","destination","source","moveAndSaveForm","sourceIndex","destinationIndex","canCreate","canUpdate","canArchive","bufferTopId","_infiniteLoader","resizeSpacer","spacerHeight","setSpacerResizing","change","forbidOrder","showArchived","maxGrids","maxColumns","cards","getForms","setEditable","getUniqueItemId","_getFormKey","formExtras","getFormExtras","canDrag","draggableId","provided","snapshot","ref","innerRef","draggableProps","dragHandleProps","style","isDefaultField","numCards","forbidCreate","forbidSort","store","singularLabel","getSingularLabel","reachedMax","showNewButton","canOrder","sortOptions","showOrder","align","noResults","preventUpdate","preventDeleteAction","confirmationOpen","confirmationTitle","toLowerCase","spacerStyle","spacerId","cardContainer","droppableId","placeholder","showNoRecords","header","spacer","footer","animation","ListItemField","emit","allowDelete","ListField","createField","autoCreateFields","canDeleteEmpty","hideDeleteButton","fieldIsBlank","ReCAPTCHAField","isEditable","siteKey","globals","captcha","sitekey","inputComponent","inputRef","components","Control","optionalProps","selectProps","inputProps","ariaLabel","innerProps","textFieldProps","square","MultiValue","Chip","tabIndex","chip","chipFocused","isFocused","isDisabled","removeProps","deleteIcon","NoOptionsMessage","noOptionsMessage","Option","buttonRef","SingleValue","singleValue","ValueContainer","valueContainer","AutoCompleteSelect","isClearable","onInputChange","isMulti","selectStyles","dropdownIndicator","base","clearIndicator","menuPortal","zIndex","styles","menuPortalTarget","document","body","minWidth","flexWrap","alignItems","emphasize","SelectField","focus","multiple","val","blankString","opts","Checkbox","autocomplete","fieldValue","renderValue","Input","chips","getOptionLabel","autocompleteValue","isValueBlank","handleAutocompleteChange","renderOptions","displayValue","Tabs","itemName","emitChange","AppBar","elevation","indicatorColor","textColor","scrollButtons","Tab","TimeField","showSeconds","TimePicker","seconds","invalidDateMessage","Text","TextField","fromUIValue","TextMaskCustom","other","mask","inputElement","maxLength","multiline","rows","rowsMax","optional","uiValue","getUIValue","URLField","newWindow","href","ChainedSelectField","ChainedSelectListField","IdField","IntegerField","MoneyField","NumberField","PhoneField","SelectListField","TextListField","User","compiler","isCompiled","Parent","getPrototypeOf","constructor","ancestorName","getOldestCompiledAncestor","Ancestor","InnerComponent","handlerName","charAt","toUpperCase","slice","addChangeListener","removeChangeListener","others","definition","newComponent","createComponent","destroy","comp","Snackbar","reason","message","anchorOrigin","vertical","horizontal","autoHideDuration","ContentProps","action","close","App","snackbarOpen","snackbarMessage","nextMenuItem","showArchivedToggle","searchStringInput","showSearch","showSearchOnMobile","callback","producedContent","has","displayConfirmation","history","confirmation","switchContent","parameters","currentComponent","emitUnload","location","menu","route","toRoute","queryString","search","substr","hash","parentItem","getParent","requireAccess","Action","run","ComponentMSON","emitLoad","canSearch","onLocation","pathname","pathHash","pathSearch","handleSnackbarClose","handleArchivedChange","window","scrollTo","handleSearchStringInputChange","handleSearch","toggleShowSearch","setGlobalOnNavigate","setOnNavigate","redirectPath","getItemAndParsePath","params","redirectAfterLogin","emitLoggedOut","canAccess","displaySnackbar","redirect","navigateTo","unlisten","listen","awaitSession","addEventListener","e","showArchivedChecked","archivedToggle","searchBox","alignRight","isResponsive","navIconHide","noWrap","onMobile","isWidthDown","bar","menuButton","appBar","appBarResponsive","Toolbar","menuAlwaysTemporary","menuSidebar","fullScreenStyle","appFrame","contentResponsive","overflow","default","overflowAnchor","withWidth","withRouter","createMuiTheme","blueGrey","lightBlue","useNextVariants","AppContainer","basename","CssBaseline","getUserConfirmation","isLocalhost","Boolean","hostname","match","register","navigator","URL","process","origin","swUrl","fetch","then","response","status","headers","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","console","log","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","app","ReactDOM","render","getElementById","registerServiceWorker","actions","ContactNoMSON","EmailField","setValues","firstName","lastName","email","values","getValues","reset","registerComponent","schema","formFactory","product","storeName","apiKey","authDomain","projectId","collection","baseForm","listeners","storeWhere","addressLine1","addressLine2","city","stateProvince","postalCode","country","github","medium","twitter","if","$ne","else","chainedSelectOptions","parentValue","elevate","fieldFactory","JSON","stringify","personId","messageId","FieldEditorForm","handleValueChange","componentName","clearErr","isField","preview","card","CardContent","gutterBottom","overflowY","maxHeight","FormEditor","reCAPTCHASiteKey","uiComponents","FieldEditorFormUI","FormEditorUI","FormBuilder"],"mappings":"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","file":"static/js/main.8b9f864a.chunk.js","sourcesContent":["import React from 'react';\nimport IconMui from '@material-ui/core/Icon';\nimport snakeCase from 'lodash/snakeCase';\n\n// Note: we use font icons instead of SVG icons as this allows us to support any icon dynamically\n// without adding all icons to the JS bundle. The MaterialUI icons are about 54KB which is\n// substantially smaller than their SVG counterparts.\n//\n// import * as Icons from '@material-ui/icons';\n\nexport default class Icon extends React.PureComponent {\n  handleClick = (event) => {\n    if (this.props.onClick) {\n      this.props.onClick(event);\n    }\n  };\n\n  // Convert to the font icon name so that we can use the SVG Icon names. This allows us to make\n  // changes to this logic without changing the calling code.\n  toFontIconName(svgIconName) {\n    return snakeCase(svgIconName);\n  }\n\n  render() {\n    const { className, icon, role } = this.props;\n\n    const iconContents = icon ? this.toFontIconName(icon) : null;\n\n    return (\n      <IconMui\n        className={className}\n        onClick={this.handleClick}\n        aria-hidden={this.props['aria-hidden']}\n        aria-label={this.props['aria-label']}\n        role={role}\n      >\n        {iconContents}\n      </IconMui>\n    );\n  }\n}\n","import React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport Typography from '@material-ui/core/Typography';\nimport Icon from './icon';\nimport each from 'lodash/each';\nimport registrar from 'mson/lib/compiler/registrar';\n\nconst styles = (theme) => ({\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n  primary: {\n    color: theme.palette.text.primary,\n  },\n  secondary: {\n    color: theme.palette.text.secondary,\n  },\n  selected: {\n    fontWeight: 'bold',\n  },\n});\n\nclass Submenu extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open: this.childSelected(),\n    };\n  }\n\n  childSelected() {\n    const { item, path } = this.props;\n\n    let childSelected = false;\n\n    each(item.items, (item) => {\n      if (path === item.path) {\n        childSelected = true;\n        return false; // exit loop\n      }\n    });\n\n    return childSelected;\n  }\n\n  handleClick = (item) => {\n    // Has sub items?\n    if (item.items) {\n      this.setState({ open: !this.state.open });\n    } else {\n      // Note: the navigation is handled by the parent as we want to be able to prevent the\n      // navigation if say a form is dirty, etc...\n      if (this.props.onNavigate) {\n        this.props.onNavigate(item);\n      }\n\n      if (this.props.onDrawerToggle) {\n        // Close the drawer\n        this.props.onDrawerToggle();\n      }\n    }\n  };\n\n  items() {\n    const { classes, item, path } = this.props;\n    const listItems = [];\n    item.items.forEach((item, index) => {\n      const isSelected = path === item.path;\n      let classNames = [classes.secondary];\n      if (isSelected) {\n        classNames.push(classes.selected);\n      }\n\n      if (\n        (!item.roles ||\n          (registrar.client && registrar.client.user.hasRole(item.roles))) &&\n        item.hidden !== true\n      ) {\n        listItems.push(\n          <ListItem\n            button\n            className={classes.nested}\n            key={index}\n            onClick={() => this.handleClick(item)}\n          >\n            <ListItemText\n              disableTypography\n              primary={\n                <Typography variant=\"body2\" className={classNames.join(' ')}>\n                  {item.label}\n                </Typography>\n              }\n            />\n          </ListItem>\n        );\n      }\n    });\n    return listItems;\n  }\n\n  render() {\n    const { item, classes, path } = this.props;\n    const items = item.items ? this.items() : null;\n\n    const isSelected = path === item.path;\n    let classNames = [classes.primary];\n    if (isSelected) {\n      classNames.push(classes.selected);\n    }\n\n    let listItems = null;\n    if (items) {\n      listItems = (\n        <Collapse in={this.state.open} timeout=\"auto\" unmountOnExit>\n          <List disablePadding>{this.items()}</List>\n        </Collapse>\n      );\n    }\n\n    return (\n      <div>\n        <ListItem button onClick={() => this.handleClick(item)}>\n          <ListItemText\n            disableTypography\n            primary={\n              <Typography variant=\"subtitle1\" className={classNames.join(' ')}>\n                {item.label}\n              </Typography>\n            }\n          />\n          {items ? (\n            this.state.open ? (\n              <Icon icon=\"ExpandLess\" />\n            ) : (\n              <Icon icon=\"ExpandMore\" />\n            )\n          ) : null}\n        </ListItem>\n        {listItems}\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(Submenu);\n","import React from 'react';\nimport difference from 'lodash/difference';\n\n// Usage: attach(['prop1', 'prop2', ...], componentOrName)(Component)\n\nconst attach = (_watchProps, componentOrName) => {\n  return (Component) => {\n    return class extends React.PureComponent {\n      wasMounted = false;\n\n      getComponent = (props) => {\n        if (!props) {\n          props = this.props;\n        }\n\n        if (!componentOrName) {\n          return props.component;\n        } else if (typeof componentOrName === 'string') {\n          return props[componentOrName];\n        } else {\n          // componentOrName is a component\n          return componentOrName;\n        }\n      };\n\n      // The component can be created at any time, e.g. when the definition is set. Therefore, we\n      // need to handle a missing component until the component is present.\n      hasComponent() {\n        return !!this.getComponent();\n      }\n\n      constructor(props) {\n        super(props);\n\n        // The field props that we want to expose in the state. Remove any names that are in\n        // this.props so that we can override those values.\n        this.watchProps = difference(_watchProps, Object.keys(this.props));\n\n        // These values need to be in the state so that the component is rerendered when they change.\n        if (this.hasComponent()) {\n          this.state = this.getComponent().get(this.watchProps);\n        }\n      }\n\n      handleFieldChange = (name, value) => {\n        if (this.watchProps.indexOf(name) !== -1) {\n          // Is the component mounted? Prevent a race condition where the handler tries to set the\n          // state after the component has been unmounted.\n          if (this.wasMounted) {\n            this.setState({ [name]: value });\n          }\n        }\n      };\n\n      componentDidUpdate(prevProps) {\n        if (this.getComponent() !== this.getComponent(prevProps)) {\n          // The component is changing so recreate the listener\n          this.removeListener();\n          this.addListener();\n\n          // Set the initial state as the component has changed\n          this.setInitialState();\n        }\n      }\n\n      addListener() {\n        if (this.hasComponent()) {\n          this.getComponent().on('$change', this.handleFieldChange);\n        }\n      }\n\n      removeListener() {\n        if (this.hasComponent()) {\n          this.getComponent().removeListener('$change', this.handleFieldChange);\n        }\n      }\n\n      setInitialState() {\n        if (this.hasComponent()) {\n          const initialState = this.getComponent().get(this.watchProps);\n          this.setState(initialState);\n        }\n      }\n\n      componentDidMount() {\n        // Note: we have to use componentDidMount and not componentWillMount as handleFieldChange\n        // can change the state and we aren't allowed to change the state until the component has\n        // mounted.\n\n        this.wasMounted = true;\n\n        this.addListener();\n\n        // Update state with any changes that have occured since construction, but before mounting\n        this.setInitialState();\n      }\n\n      componentWillUnmount() {\n        this.removeListener();\n        this.wasMounted = false;\n      }\n\n      render() {\n        return <Component {...this.state} {...this.props} />;\n      }\n    };\n  };\n};\n\nexport default attach;\n","// TODO: when click on another section, close other sections? Requires moving menu state to app?\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport Divider from '@material-ui/core/Divider';\nimport Submenu from './submenu';\nimport attach from './attach';\nimport Typography from '@material-ui/core/Typography';\nimport registrar from 'mson/lib/compiler/registrar';\n\nconst drawerWidth = 240;\n\nconst styles = (theme) => ({\n  drawerHeader: {\n    ...theme.mixins.toolbar,\n    paddingLeft: theme.spacing(3),\n    paddingTop: theme.spacing(1),\n  },\n  drawerPaper: {\n    width: 250,\n  },\n  drawPaperResponsive: {\n    [theme.breakpoints.up('md')]: {\n      width: drawerWidth,\n      // position: 'relative',\n      // height: '100%',\n\n      // Extend to bottom of screen. TODO: does this work on mobile?\n      // https://stackoverflow.com/a/48506883/2831606\n      position: 'fixed',\n      height: '100vh',\n    },\n  },\n});\n\nclass Menu extends React.PureComponent {\n  handleDrawerToggle = () => {\n    if (this.props.onDrawerToggle) {\n      this.props.onDrawerToggle();\n    }\n  };\n\n  handleNavigate = (menuItem) => {\n    if (this.props.onNavigate) {\n      this.props.onNavigate(menuItem);\n    }\n  };\n\n  items() {\n    const { component, path } = this.props;\n    const items = component.get('items');\n    const submenus = [];\n    items.forEach((item, index) => {\n      // Has access to item?\n      if (\n        (!item.roles ||\n          (registrar.client && registrar.client.user.hasRole(item.roles))) &&\n        item.hidden !== true\n      ) {\n        submenus.push(\n          <Submenu\n            item={item}\n            key={index}\n            onNavigate={this.handleNavigate}\n            path={path}\n            onDrawerToggle={this.handleDrawerToggle}\n          />\n        );\n      }\n    });\n    return submenus;\n  }\n\n  render() {\n    const { classes, theme, mobileOpen, responsive /*, roles*/ } = this.props;\n\n    let items = null;\n    // if (!roles || (registrar.client && registrar.client.user.hasRole(roles))) {\n    items = this.items();\n    // }\n\n    const drawer = (\n      <div>\n        <div className={classes.drawerHeader}>\n          <Typography variant=\"h4\">Logo</Typography>\n        </div>\n        <Divider />\n        {items}\n      </div>\n    );\n\n    const temporaryDrawer = (\n      <Drawer\n        variant=\"temporary\"\n        anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n        open={mobileOpen}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n        onClose={this.handleDrawerToggle}\n        ModalProps={{\n          keepMounted: true, // Better open performance on mobile.\n        }}\n      >\n        {drawer}\n      </Drawer>\n    );\n\n    const permanentDrawer = (\n      <Drawer\n        variant=\"permanent\"\n        open\n        classes={{\n          paper:\n            classes.drawerPaper +\n            (responsive ? ` ${classes.drawPaperResponsive}` : ''),\n        }}\n      >\n        {drawer}\n      </Drawer>\n    );\n\n    if (responsive) {\n      return (\n        <div>\n          <Hidden mdUp>{temporaryDrawer}</Hidden>\n          <Hidden smDown implementation=\"css\">\n            {permanentDrawer}\n          </Hidden>\n        </div>\n      );\n    } else {\n      return temporaryDrawer;\n    }\n  }\n}\n\nMenu = withStyles(styles, { withTheme: true })(Menu);\nMenu = attach(['items' /*, 'roles'*/])(Menu);\nexport default Menu;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from './icon';\nimport classNames from 'classnames';\n\n// TODO: see https://material-ui-next.com/style/icons/#icons and implement:\n// 1. Mouseover to change background color\n\nconst styles = (theme) => ({\n  textField: {\n    width: '100%',\n  },\n\n  textFieldInput: {\n    borderRadius: 3,\n    backgroundColor: theme.palette.primary[400],\n    fontSize: theme.typography.subtitle1.fontSize,\n    padding: '10px 34px 10px 34px',\n    marginTop: '2px',\n    width: 'calc(100%)',\n    color: theme.palette.common.white,\n  },\n\n  // Needed so that relative components don't take up any space\n  iconContainer: {\n    position: 'relative',\n    width: '100%', // Set 100% so that we can position the close icon relative to this\n    height: '0px',\n  },\n\n  searchIcon: {\n    position: 'absolute',\n    top: '-31px',\n    left: '6px',\n  },\n\n  closeIcon: {\n    position: 'absolute',\n    top: '-43px',\n    right: '-5px',\n  },\n\n  grow: {\n    flexGrow: 1,\n  },\n});\n\nclass SearchBar extends React.PureComponent {\n  state = { autoFullWidth: false };\n\n  handleKeyUp = (event) => {\n    // Enter pressed?\n    if (event.keyCode === 13) {\n      this.props.onSearch(this.props.searchString);\n    }\n  };\n\n  handleClearSearch = (event) => {\n    this.props.onSearch('');\n  };\n\n  handleFocus = () => {\n    this.setState({ autoFullWidth: true });\n  };\n\n  handleBlur = () => {\n    this.setState({ autoFullWidth: false });\n  };\n\n  render() {\n    const {\n      classes,\n      className,\n      searchString,\n      onChange,\n      fullWidth,\n    } = this.props;\n\n    const { autoFullWidth } = this.state;\n\n    const full = fullWidth || autoFullWidth;\n\n    return (\n      <div className={classNames(className, full ? classes.grow : null)}>\n        <TextField\n          InputProps={{\n            disableUnderline: true,\n            classes: {\n              input: classes.textFieldInput,\n            },\n          }}\n          value={searchString}\n          onKeyUp={this.handleKeyUp}\n          onChange={(event) => onChange(event.target.value)}\n          className={classes.textField}\n          onFocus={this.handleFocus}\n          onBlur={this.handleBlur}\n        />\n        <div className={classes.iconContainer}>\n          <Icon icon=\"Search\" className={classes.searchIcon} />\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"clear search\"\n            onClick={this.handleClearSearch}\n            className={classes.closeIcon}\n          >\n            <Icon icon=\"Close\" />\n          </IconButton>\n        </div>\n      </div>\n    );\n  }\n}\n\nSearchBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nSearchBar = withStyles(styles)(SearchBar);\n\nexport default SearchBar;\n","import React, { useState } from 'react';\nimport IconButtonMui from '@material-ui/core/IconButton';\nimport Icon from './icon';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst IconButton = (props) => {\n  const { onClick, icon, tooltip } = props;\n\n  const [hovered, setHovered] = useState(false);\n\n  // NOTE: using Tooltips when we have 100 more items leads to a significant latency. We sidestep\n  // this by only loading the tooltip on the initial mouse over.\n\n  const button = (\n    <IconButtonMui\n      onClick={onClick}\n      onMouseEnter={() => setHovered(true)}\n      aria-label={props['aria-label']}\n    >\n      <Icon icon={icon} />\n    </IconButtonMui>\n  );\n\n  if (hovered && tooltip) {\n    return <Tooltip title={tooltip}>{button}</Tooltip>;\n  } else {\n    return button;\n  }\n};\n\nexport default IconButton;\n","import React from 'react';\nimport ButtonMui from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Icon from './icon';\n\nconst useStyles = makeStyles((theme) => ({\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  marginTop: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nconst handleClick = (onClick) => {\n  if (onClick) {\n    onClick();\n  }\n};\n\nconst Button = (props) => {\n  const classes = useStyles();\n\n  const {\n    type,\n    disabled,\n    label,\n    icon,\n    fullWidth,\n    variant,\n    marginTop,\n    onClick,\n  } = props;\n\n  const className = marginTop !== false ? classes.marginTop : null;\n\n  return (\n    <ButtonMui\n      className={className}\n      type={type}\n      color=\"primary\"\n      disabled={disabled}\n      onClick={() => handleClick(onClick)}\n      fullWidth={fullWidth}\n      variant={variant}\n    >\n      {icon ? <Icon className={classes.leftIcon} icon={icon} /> : null}\n      {label}\n    </ButtonMui>\n  );\n};\n\nexport default Button;\n","import React from 'react';\nimport IconButton from './icon-button';\nimport LabelButton from './label-button';\n\nconst Button = (props) => {\n  const {\n    type,\n    disabled,\n    label,\n    icon,\n    fullWidth,\n    variant,\n    marginTop,\n    onClick,\n    tooltip,\n  } = props;\n\n  if (label || !icon) {\n    return (\n      <LabelButton\n        type={type}\n        disabled={disabled}\n        label={label}\n        icon={icon}\n        fullWidth={fullWidth}\n        variant={variant}\n        marginTop={marginTop}\n        onClick={onClick}\n      />\n    );\n  } else {\n    return <IconButton onClick={onClick} icon={icon} tooltip={tooltip} />;\n  }\n};\n\nexport default Button;\n","import React from 'react';\nimport attach from '../attach';\nimport Button from '../button';\n\nclass ButtonField extends React.PureComponent {\n  handleClick = () => {\n    const { type } = this.props;\n\n    // Is the button not a submit button? Let the form handle submit buttons so that the form\n    // performs the validation\n    if (type !== 'submit') {\n      this.props.component.emitClick();\n    }\n  };\n\n  render() {\n    const {\n      label,\n      type,\n      disabled,\n      icon,\n      fullWidth,\n      variant,\n      tooltip,\n    } = this.props;\n    return (\n      <Button\n        type={type}\n        label={label}\n        disabled={disabled}\n        onClick={this.handleClick}\n        icon={icon}\n        fullWidth={fullWidth}\n        variant={variant}\n        tooltip={tooltip}\n      />\n    );\n  }\n}\n\nexport default attach([\n  'label',\n  'type',\n  'disabled',\n  'icon',\n  'fullWidth',\n  'variant',\n  'tooltip',\n])(ButtonField);\n","import React from 'react';\nimport FormControlMU from '@material-ui/core/FormControl';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = (theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n  },\n  fullWidth: {\n    // TODO: bug in material ui?\n    width: `calc(100% - ${theme.spacing(2)}px)`,\n  },\n  noMarginBottom: {\n    marginBottom: 0,\n  },\n});\n\nclass FormControl extends React.PureComponent {\n  render() {\n    const { fullWidth, children, classes, marginBottom } = this.props;\n\n    const fullWidthClassName = fullWidth ? classes.fullWidth : '';\n    const noMarginBottomClassName =\n      marginBottom === false ? classes.noMarginBottom : '';\n\n    return (\n      <FormControlMU\n        fullWidth={fullWidth}\n        className={`${classes.formControl} ${fullWidthClassName} ${noMarginBottomClassName}`}\n      >\n        {children}\n      </FormControlMU>\n    );\n  }\n}\n\nexport default withStyles(styles)(FormControl);\n","// TODO: make full width of field include right margin if there is help?\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Icon from '../icon';\n\nexport default class HelpToolTip extends React.PureComponent {\n  render() {\n    const { help } = this.props;\n\n    // Note: we use disableTouchListener as otherwise the user needs to press and hold before the\n    // tooltip appears, something that is not intuitive. With this configuration, the user can just\n    // click the button to view the tooltip.\n    return (\n      <Tooltip disableTouchListener title={help}>\n        <IconButton aria-label=\"Help\">\n          <Icon icon=\"HelpOutline\" />\n        </IconButton>\n      </Tooltip>\n    );\n  }\n}\n","import React from 'react';\nimport FormLabelMui from '@material-ui/core/FormLabel';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = (theme) => ({\n  shrink: {\n    ...Object.assign({}, theme.typography.caption, { color: undefined }),\n  },\n  noShrink: {\n    ...Object.assign({}, theme.typography.subtitle1, { color: undefined }),\n  },\n});\n\nclass FormLabel extends React.PureComponent {\n  render() {\n    const { children, classes, shrink } = this.props;\n\n    const childProps = Object.assign({}, this.props, {\n      shrink: undefined,\n      classes: undefined,\n    });\n\n    const className = shrink ? classes.shrink : classes.noShrink;\n\n    return (\n      <FormLabelMui {...childProps} className={className}>\n        {children}\n      </FormLabelMui>\n    );\n  }\n}\n\nexport default withStyles(styles)(FormLabel);\n","import React from 'react';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '../form-control';\nimport attach from '../attach';\nimport HelpToolTip from './help-tool-tip';\nimport FormLabel from './form-label';\n\nclass CommonField extends React.PureComponent {\n  render() {\n    const {\n      component,\n      children,\n      label,\n      required,\n      fullWidth,\n      err,\n      editable,\n      touched,\n      help,\n      hideLabelUI,\n      hideLabel,\n      useDisplayValue,\n      shrinkLabel,\n      inlineLabel,\n      marginBottom,\n      autoHideLabel,\n    } = this.props;\n\n    let fld = null;\n\n    let lbl = null;\n\n    const isBlank = component.isBlank();\n\n    const id = component.getUniqueId();\n\n    if (!hideLabelUI && !hideLabel && (!autoHideLabel || label)) {\n      if (editable && !useDisplayValue && !inlineLabel) {\n        lbl = (\n          <InputLabel\n            htmlFor={id}\n            error={touched && err ? true : false}\n            // If label is blank then don't show as required\n            required={label && required}\n            shrink={shrinkLabel}\n          >\n            {label}\n          </InputLabel>\n        );\n      } else {\n        // We display a non-breaking space when the label is empty so that CompositeFields, like the\n        // ChainedSelectField, print all their display values on the same line.\n        const labelText = label ? label : '\\u00A0';\n\n        lbl = (\n          <FormLabel\n            id={`label-${id}`}\n            htmlFor={id}\n            error={touched && err ? true : false}\n            required={required && !useDisplayValue && editable}\n            shrink={useDisplayValue || !editable || shrinkLabel}\n          >\n            {labelText}\n          </FormLabel>\n        );\n\n        if (!inlineLabel) {\n          // We wrap the label in a div tag so that the proceeding display value appears on a\n          // different line\n          lbl = <div>{lbl}</div>;\n        }\n      }\n    }\n\n    const firstErr = component.getFirstErr();\n\n    fld = (\n      <span>\n        {lbl}\n        {children}\n        {help && editable ? <HelpToolTip help={help} /> : ''}\n        {touched && err ? (\n          <FormHelperText error>{firstErr}</FormHelperText>\n        ) : null}\n      </span>\n    );\n\n    if (editable || !isBlank) {\n      return (\n        <FormControl fullWidth={fullWidth} marginBottom={marginBottom}>\n          {fld}\n        </FormControl>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\n// 'value' is needed in the event we are showing the display value\nCommonField = attach([\n  'label',\n  'required',\n  'fullWidth',\n  'value',\n  'err',\n  'editable',\n  'touched',\n  'help',\n  'hideLabel',\n  'useDisplayValue',\n  'autoHideLabel',\n])(CommonField);\n\nexport default CommonField;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = (theme) => ({\n  root: {\n    display: 'inline-block',\n  },\n});\n\nclass DisplayValueTypography extends React.PureComponent {\n  render() {\n    const { children, classes, id } = this.props;\n\n    // We use a span tag so that the element is inline\n    return (\n      <Typography\n        variant=\"subtitle1\"\n        component=\"span\"\n        className={classes.root}\n        id={id}\n        aria-label={this.props['aria-label']}\n      >\n        {children}\n      </Typography>\n    );\n  }\n}\n\nexport default withStyles(styles)(DisplayValueTypography);\n","import React from 'react';\nimport Switch from '@material-ui/core/Switch';\nimport CommonField from './common-field';\nimport attach from '../attach';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport DisplayValueTypography from './display-value-typography';\n\nclass BooleanField extends React.PureComponent {\n  handleChange = (event) => {\n    this.props.component.setValue(event.target.checked);\n  };\n\n  render() {\n    const {\n      value,\n      disabled,\n      component,\n      editable,\n      useDisplayValue,\n      label,\n    } = this.props;\n\n    let hideLabelUI = null;\n\n    let fld = null;\n    if (editable && !useDisplayValue) {\n      hideLabelUI = true;\n      fld = (\n        <FormControlLabel\n          control={\n            <Switch\n              checked={value ? value : false}\n              onChange={this.handleChange}\n              value=\"true\"\n              disabled={disabled}\n            />\n          }\n          label={label}\n        />\n      );\n    } else {\n      fld = (\n        <DisplayValueTypography>\n          {component.getDisplayValue()}\n        </DisplayValueTypography>\n      );\n    }\n\n    return (\n      <CommonField component={component} hideLabelUI={hideLabelUI}>\n        {fld}\n      </CommonField>\n    );\n  }\n}\n\nexport default attach([\n  'value',\n  'err',\n  'disabled',\n  'editable',\n  'useDisplayValue',\n  'label',\n])(BooleanField);\n","import React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Component from './component';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = (theme) => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(2),\n  },\n  content: {\n    flex: 1, // TODO: needed?\n  },\n});\n\nclass Card extends React.PureComponent {\n  render() {\n    const { classes, component } = this.props;\n\n    const content = component.get('content');\n    const title = component.get('title');\n\n    return (\n      <Grid container spacing={0} justify=\"center\">\n        <Grid item xs={12} sm={9} md={6} lg={6}>\n          <Paper className={classes.paper}>\n            <Grid container wrap=\"nowrap\">\n              <Grid item className={classes.content}>\n                <Typography variant=\"h5\" component=\"h2\">\n                  {title}\n                </Typography>\n                <Component component={content} />\n              </Grid>\n            </Grid>\n          </Paper>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(styles)(Card);\n","import React from 'react';\nimport attach from '../attach';\nimport Component from '../component';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = (theme) => ({\n  root: {\n    marginLeft: theme.spacing(1),\n  },\n});\n\nclass ComponentField extends React.PureComponent {\n  render() {\n    const { content, classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <Component component={content} />\n      </div>\n    );\n  }\n}\n\nComponentField = withStyles(styles)(ComponentField);\nComponentField = attach(['content'])(ComponentField);\nexport default ComponentField;\n","import React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = (theme) => ({\n  // break: {\n  //   flexBasis: '100%',\n  //   width: '0px',\n  //   height: '0px',\n  //   overflow: 'hidden'\n  // }\n  break: {\n    width: '100%',\n  },\n});\n\nclass FlexBreak extends React.PureComponent {\n  render() {\n    const { classes } = this.props;\n    return <div className={classes.break} />;\n  }\n}\n\nexport default withStyles(styles)(FlexBreak);\n","import each from 'lodash/each';\nclass Utils {\n  getIfDefined(props) {\n    const definedProps = {};\n    each(props, (value, name) => {\n      if (value !== undefined) {\n        definedProps[name] = value;\n      }\n    });\n    return definedProps;\n  }\n}\nexport default new Utils();\n","import React from 'react';\nimport componentUtils from '../component-utils';\nimport attach from '../attach';\nimport FlexBreak from '../flex-break';\nimport utils from '../utils';\n\n// Use MSON React Component instead?\nclass Field extends React.PureComponent {\n  render() {\n    const {\n      component,\n      hidden,\n      block,\n      accessEditable,\n      didCreate,\n      noBlock,\n      disabled,\n    } = this.props;\n\n    // Don't show the component until didCreate is true as we may need to wait for fields to be\n    // hidden or otherwise modified by listeners\n    if (hidden || !didCreate) {\n      return null;\n    } else if (component.getClassName() === 'Field') {\n      // Prevent an infinite loop caused by trying to render component=Field\n      return null;\n    } else {\n      // Get corresponding UI component\n      const Field = componentUtils.getUIComponent(component);\n\n      // Note: we use React.Fragment over a span as spans can cause issues with the flexbox layout\n      // when displaying a nested form\n      return (\n        <React.Fragment>\n          <Field\n            component={component}\n            accessEditable={accessEditable}\n            block={block}\n            {...utils.getIfDefined({ disabled })}\n          />\n          {!noBlock && block ? <FlexBreak /> : null}\n        </React.Fragment>\n      );\n    }\n  }\n}\n\nexport default attach(['hidden', 'block', 'didCreate'])(Field);\n","import React from 'react';\nimport Field from './field';\nimport attach from '../attach';\nimport HelpToolTip from './help-tool-tip';\nimport FlexBreak from '../flex-break';\n\nclass CompositeField extends React.PureComponent {\n  render() {\n    const {\n      component,\n      help,\n      editable,\n      useDisplayValue,\n      block,\n      disabled,\n    } = this.props;\n\n    let fields = [];\n\n    let lastIsBlock = false;\n\n    let first = true;\n\n    component.eachField((field, index, last) => {\n      // Don't show the field if we are using the display value and it is blank, e.g. it is the\n      // empty \"next\" field.\n      if (first || !useDisplayValue || !field.isBlank()) {\n        if (last && field.get('block')) {\n          lastIsBlock = true;\n        }\n        fields.push(\n          <Field\n            component={field}\n            key={index}\n            noBlock={last}\n            disabled={disabled}\n          />\n        );\n      }\n\n      if (first) {\n        first = false;\n      }\n    });\n\n    if (help && editable) {\n      fields.push(<HelpToolTip help={help} key=\"help\" />);\n    }\n\n    if (lastIsBlock && block !== false) {\n      // Break after any help\n      fields.push(<FlexBreak key=\"break\" />);\n    }\n\n    return fields;\n  }\n}\n\n// We want the component to update when we receive new fields\nexport default attach(['change', 'help', 'editable', 'useDisplayValue'])(\n  CompositeField\n);\n","import React from 'react';\nimport attach from '../attach';\nimport CommonField from './common-field';\nimport {\n  MuiPickersUtilsProvider,\n  DateTimePicker,\n  DatePicker,\n} from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport DisplayValueTypography from './display-value-typography';\n\nconst styles = (theme) => ({\n  root: {\n    // We need to add a margin as the picker doesn't play well with the Material-UI label\n    marginTop: theme.spacing(2),\n  },\n});\n\nclass DateField extends React.PureComponent {\n  handleDateChange = (date) => {\n    this.props.component.setValue(date);\n  };\n\n  handleBlur = () => {\n    this.props.component.setTouched(true);\n  };\n\n  render() {\n    const {\n      component,\n      classes,\n      value,\n      includeTime,\n      editable,\n      useDisplayValue,\n      minDate,\n      maxDate,\n      fullWidth,\n      disabled,\n      accessEditable,\n    } = this.props;\n\n    const dis = accessEditable === false || disabled;\n\n    let shrinkLabel = false;\n\n    const Component = includeTime ? DateTimePicker : DatePicker;\n\n    let fld = null;\n    if (editable && !useDisplayValue) {\n      // The picker doesn't play well with the label from Material-UI so we need to manually shrink\n      // the label when there is a value.\n      shrinkLabel = !!value;\n      fld = (\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n          <span>\n            <Component\n              // Value cannot be undefined or else picker will default to today\n              value={value ? value : null}\n              onChange={this.handleDateChange}\n              clearable\n              className={classes.root}\n              minDate={minDate}\n              maxDate={maxDate}\n              onClose={this.handleBlur}\n              fullWidth={fullWidth}\n              disabled={dis}\n              id={component.getUniqueId()}\n              // format=\"M/d/YYYY h:m a\"\n            />\n          </span>\n        </MuiPickersUtilsProvider>\n      );\n    } else {\n      fld = (\n        <DisplayValueTypography>\n          {component.getDisplayValue()}\n        </DisplayValueTypography>\n      );\n    }\n\n    return (\n      <CommonField component={component} shrinkLabel={shrinkLabel}>\n        {fld}\n      </CommonField>\n    );\n  }\n}\n\nDateField = withStyles(styles)(DateField);\n\nexport default attach([\n  'value',\n  'includeTime',\n  'editable',\n  'useDisplayValue',\n  'minDate',\n  'maxDate',\n  'fullWidth',\n  'disabled',\n])(DateField);\n","import React from 'react';\nimport Field from './fields/field';\nimport attach from './attach';\nimport access from 'mson/lib/access';\n\nclass Form extends React.PureComponent {\n  state = {\n    fieldsCanAccess: null,\n  };\n\n  // Enable automatic validation whenever a user changes data. This feature allows the user to see\n  // errors in real-time.\n  turnOnAutoValidate() {\n    this.props.component.set({ autoValidate: true });\n  }\n\n  calcFieldsCanAccess() {\n    const { component, mode } = this.props;\n    const canDowngrade = true;\n    const fieldsCanAccess = access.fieldsCanAccess(\n      // Default to update so that access control has a sensible default\n      mode ? mode : 'update',\n      component,\n      null,\n      canDowngrade\n    );\n\n    // We need to set the ignoreErrs state as there may be a field that is not accessible that is\n    // generating an error.\n    for (const field of component.getFields()) {\n      const ignoreErrs = fieldsCanAccess[field.get('name')] === undefined;\n      field.set({ ignoreErrs });\n    }\n\n    return fieldsCanAccess;\n  }\n\n  adjustAccess() {\n    let fieldsCanAccess = null;\n\n    // Was access specified? We check the form instead of this.props.access as this.props.access may\n    // not have been updated yet.\n    if (this.props.component.get('access')) {\n      fieldsCanAccess = this.calcFieldsCanAccess();\n    }\n\n    this.setState({ fieldsCanAccess });\n  }\n\n  constructor(props) {\n    super(props);\n    this.turnOnAutoValidate();\n\n    if (props.access) {\n      const fieldsCanAccess = this.calcFieldsCanAccess();\n      this.state.fieldsCanAccess = fieldsCanAccess;\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { component, access, mode } = this.props;\n\n    // Did the form change?\n    if (prevProps.component !== component) {\n      this.turnOnAutoValidate();\n    }\n\n    // Did the access, mode or form change?\n    if (\n      prevProps.access !== access ||\n      prevProps.mode !== mode ||\n      prevProps.component !== component ||\n      prevProps.value !== this.props.value\n    ) {\n      this.adjustAccess();\n    }\n  }\n\n  handleSave = (event) => {\n    // Stop the form from refreshing the page. We can't rely on the default functionality as there\n    // may be form errors that need to stop the form from submitting.\n    event.preventDefault();\n\n    // No errors?\n    const { component } = this.props;\n\n    // Is the submit action enabled?\n    if (!component.get('disableSubmit')) {\n      component.setTouched(true);\n      component.validate();\n      if (component.getErrs().length === 0) {\n        component.submit();\n      }\n    }\n  };\n\n  render() {\n    const { component, formTag, isLoading, disabled } = this.props;\n    const { fieldsCanAccess } = this.state;\n    const fields = component.get('fields');\n\n    // Hide until the data has finished loading\n    if (isLoading) {\n      return null;\n    }\n\n    // The form key is needed or else React will not re-render all fields when the field indexes are\n    // the same and we switch from route to another.\n    const key = component.getKey();\n\n    const flds = fields.map((field, index) => {\n      if (\n        fieldsCanAccess === null ||\n        fieldsCanAccess[field.get('name')] !== undefined\n      ) {\n        let accessEditable = null;\n        if (\n          fieldsCanAccess !== null &&\n          fieldsCanAccess[field.get('name')] === 'read'\n        ) {\n          accessEditable = false;\n        }\n        return (\n          <Field\n            key={key + '_' + index}\n            component={field}\n            accessEditable={accessEditable}\n            disabled={disabled}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n\n    if (formTag !== false) {\n      return <form onSubmit={this.handleSave}>{flds}</form>;\n    } else {\n      return flds;\n    }\n  }\n}\n\nexport default attach([\n  'access',\n  'mode',\n  'isLoading',\n\n  // We listen for a change to fields so that we can render when a field is added\n  'change',\n  'value',\n])(Form);\n","import React from 'react';\nimport CommonField from './common-field';\nimport Component from '../component';\nimport attach from '../attach';\nimport FlexBreak from '../flex-break';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = (theme) => ({\n  root: {\n    marginLeft: theme.spacing(2),\n\n    // The following flex properties are needed so that we can set a margin for all fields in the\n    // nested form\n    display: 'flex',\n    flexFlow: 'wrap',\n  },\n});\n\nclass FormField extends React.PureComponent {\n  render() {\n    const { component, hideLabel, classes, disabled } = this.props;\n\n    const isBlank = component.isBlank();\n\n    const form = component.get('form');\n\n    return (\n      <span>\n        {!hideLabel && (\n          <CommonField\n            component={component}\n            inlineLabel=\"true\"\n            shrinkLabel={!isBlank}\n            marginBottom={false}\n          />\n        )}\n        <FlexBreak />\n        <span className={classes.root}>\n          <Component component={form} formTag={false} disabled={disabled} />\n        </span>\n      </span>\n    );\n  }\n}\n\nFormField = withStyles(styles)(FormField);\n\nexport default attach([\n  'hideLabel',\n  'value', // Changes when the value is or isn't blank\n])(FormField);\n","import React from 'react';\nimport attach from './attach';\nimport Component from './component';\n\nclass Fragment extends React.PureComponent {\n  render() {\n    return (\n      <React.Fragment>\n        {this.props.items.map((item, index) => (\n          <Component component={item} key={index} />\n        ))}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default attach(['items'])(Fragment);\n","import React from 'react';\nimport attach from './attach';\nimport GridMui from '@material-ui/core/Grid';\nimport Component from './component';\n\nclass GridItem extends React.PureComponent {\n  render() {\n    const { hidden, content, xl, lg, md, sm, xs } = this.props;\n    if (hidden) {\n      return null;\n    } else {\n      return (\n        <GridMui item xl={xl} lg={lg} md={md} sm={sm} xs={xs}>\n          <Component component={content} />\n        </GridMui>\n      );\n    }\n  }\n}\n\nexport default attach(['hidden', 'content', 'xl', 'lg', 'md', 'sm', 'xs'])(\n  GridItem\n);\n","import React from 'react';\nimport attach from './attach';\nimport GridMui from '@material-ui/core/Grid';\nimport GridItem from './grid-item';\n\nclass Grid extends React.PureComponent {\n  render() {\n    return (\n      <GridMui container>\n        {this.props.items.map((item, index) => (\n          <GridItem component={item} key={index} />\n        ))}\n      </GridMui>\n    );\n  }\n}\n\nexport default attach(['items'])(Grid);\n","import React from 'react';\nimport IconButton from './icon-button';\nimport Grid from '@material-ui/core/Grid';\n\n// FUTURE: support for hamburger menus\nexport default class FormCardButtons extends React.PureComponent {\n  render() {\n    const {\n      forbidUpdate,\n      forbidDelete,\n      editable,\n      disabled,\n      archivedAt,\n      onEdit,\n      onDelete,\n      id,\n    } = this.props;\n\n    let updateButton = null;\n    if (!forbidUpdate) {\n      updateButton = (\n        <IconButton\n          onClick={onEdit}\n          icon=\"Edit\"\n          tooltip=\"Edit\"\n          aria-label={`Edit ${id}`}\n        />\n      );\n    }\n\n    let deleteButton = null;\n    if (!forbidDelete) {\n      const title = archivedAt ? 'Restore' : 'Delete';\n      deleteButton = (\n        <IconButton\n          onClick={onDelete}\n          icon={title}\n          tooltip={title}\n          aria-label={`Delete ${id}`}\n        />\n      );\n    }\n\n    if (editable && !disabled && (!forbidUpdate || !forbidDelete)) {\n      return (\n        <Grid item>\n          {updateButton}\n          {deleteButton}\n        </Grid>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n","import React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Component from './component';\nimport attach from './attach';\nimport FormCardButtons from './form-card-buttons';\n\nconst styles = (theme) => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(2),\n  },\n  content: {\n    flex: 1,\n    cursor: 'pointer',\n  },\n});\n\n// Use PureComponent so that we avoid unnecessary re-rendering\nclass FormCard extends React.PureComponent {\n  handleClick = (event) => {\n    if (this.props.onClick) {\n      this.props.onClick(event, this.props.component);\n    }\n  };\n\n  handleEdit = (event, id) => {\n    if (this.props.onEdit) {\n      this.props.onEdit(event, this.props.component);\n    }\n  };\n\n  handleDelete = (event) => {\n    // this.handleMoreClose();\n    if (this.props.onDelete) {\n      this.props.onDelete(this.props.component);\n    }\n  };\n\n  render() {\n    const {\n      classes,\n      component,\n      forbidUpdate,\n      forbidDelete,\n      editable,\n      disabled,\n      value,\n      buttons,\n      id,\n    } = this.props;\n\n    let cardButtons;\n    if (buttons) {\n      cardButtons = <Component component={buttons} />;\n    } else {\n      cardButtons = (\n        <FormCardButtons\n          forbidUpdate={forbidUpdate}\n          forbidDelete={forbidDelete}\n          editable={editable}\n          disabled={disabled}\n          archivedAt={value.archivedAt}\n          onEdit={(event) => this.handleEdit(event)}\n          onDelete={(event) => this.handleDelete(event)}\n          id={id}\n        />\n      );\n    }\n\n    return (\n      <div>\n        <Paper className={classes.paper}>\n          <Grid container wrap=\"nowrap\">\n            <Grid\n              item\n              className={classes.content}\n              onClick={(event) => this.handleClick(event)}\n              role=\"button\"\n              aria-label={this.props['aria-label']}\n              id={id}\n            >\n              <Component component={component} formTag={false} mode=\"read\" />\n            </Grid>\n            {cardButtons}\n          </Grid>\n        </Paper>\n      </div>\n    );\n  }\n}\n\nFormCard = withStyles(styles)(FormCard);\nexport default attach(['value'])(FormCard);\n","import React from 'react';\nimport Button from './button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport withMobileDialog from '@material-ui/core/withMobileDialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Component from './component';\nimport attach from './attach';\nimport CollectionFieldCore from 'mson/lib/fields/collection-field';\n\nclass FormDialog extends React.PureComponent {\n  state = { saveClicked: false, previousMode: null };\n\n  handleClose = (withCancelButton) => {\n    // Prevent the user from losing data when pressing esc or clicking outside dialog\n    const { mode, onClose, onCancel, currentForm } = this.props;\n    if (withCancelButton || mode !== 'update') {\n      if (mode === 'update') {\n        if (onCancel) {\n          onCancel(currentForm);\n        }\n      } else {\n        if (onClose) {\n          onClose(currentForm);\n        }\n      }\n    }\n  };\n\n  handleEdit = () => {\n    if (this.props.onEdit) {\n      this.props.onEdit(this.props.currentForm);\n    }\n  };\n\n  handleSave = (event) => {\n    // Stop the form from refreshing the page\n    event.preventDefault();\n\n    // Should the submit action be disabled? For example, we may be editing in a nested dialog\n    if (!this.props.disableSubmit) {\n      if (this.props.onSave) {\n        this.props.onSave();\n      }\n\n      // Disable the save button so that the user sees that something is being processed\n      this.setState({ saveClicked: true });\n    }\n  };\n\n  handleDelete = () => {\n    if (this.props.onDelete) {\n      this.props.onDelete(this.props.currentForm);\n    }\n  };\n\n  isOpen() {\n    const { mode } = this.props;\n    if (\n      mode === CollectionFieldCore.MODES.DELETE ||\n      mode === CollectionFieldCore.MODES.RESTORE\n    ) {\n      // Don't show the dialog when restoring\n      return false;\n    } else {\n      return !!mode;\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    // If the mode or err changes then allow the user to click save\n    if (\n      this.props.mode !== prevProps.mode ||\n      this.props.err !== prevProps.err\n    ) {\n      this.setState({ saveClicked: false });\n    }\n\n    if (this.props.mode !== prevProps.mode) {\n      this.setState({ previousMode: prevProps.mode });\n    }\n  }\n\n  render() {\n    const {\n      mode,\n      component,\n      forbidUpdate,\n      forbidDelete,\n      value,\n      fullScreen,\n    } = this.props;\n\n    const { saveClicked, previousMode } = this.state;\n\n    const disableSave =\n      component.hasErrorForTouchedField() ||\n      !component.get('dirty') ||\n      saveClicked;\n\n    const open = this.isOpen();\n\n    let buttons = null;\n\n    // Note: we analyze the previousMode so that the user isn't flashed with new buttons immediately\n    // after they click save or close the dialog\n    if (\n      mode === 'update' ||\n      mode === 'create' ||\n      (mode === null &&\n        (previousMode === 'update' || previousMode === 'create'))\n    ) {\n      buttons = (\n        <div>\n          {/* We use type=submit so that the form is submitted when the user presses enter */}\n          <Button\n            type=\"submit\"\n            label=\"Save\"\n            icon=\"Save\"\n            disabled={disableSave}\n          />\n          <Button\n            label=\"Cancel\"\n            icon=\"Cancel\"\n            onClick={() => this.handleClose(true)}\n          />\n        </div>\n      );\n    } else if (!forbidUpdate || !forbidDelete) {\n      buttons = (\n        <div>\n          {forbidUpdate ? (\n            ''\n          ) : (\n            <Button label=\"Edit\" icon=\"Edit\" onClick={this.handleEdit} />\n          )}\n          {forbidDelete ? (\n            ''\n          ) : (\n            <Button\n              label={value.archivedAt ? 'Restore' : 'Delete'}\n              icon={value.archivedAt ? 'Restore' : 'Delete'}\n              onClick={this.handleDelete}\n            />\n          )}\n          <Button\n            label=\"Close\"\n            icon=\"Cancel\"\n            onClick={() => this.handleClose(true)}\n          />\n        </div>\n      );\n    }\n\n    return (\n      <Dialog\n        // fullScreen will be true on a small screen\n        fullScreen={fullScreen}\n        open={open}\n        onClose={() => this.handleClose(false)}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        {/* We use a form element so that we can submit the form on enter */}\n        <form onSubmit={this.handleSave}>\n          <DialogContent>\n            <Component component={component} formTag={false} mode={mode} />\n          </DialogContent>\n          {buttons ? <DialogActions>{buttons}</DialogActions> : ''}\n        </form>\n      </Dialog>\n    );\n  }\n}\n\nFormDialog = withMobileDialog()(FormDialog);\nFormDialog = attach(['err', 'dirty', 'value', 'mode', 'disableSubmit'])(\n  FormDialog\n);\nexport default FormDialog;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport default class ConfirmationDialog extends React.PureComponent {\n  handleClose = (yes) => {\n    if (this.props.onClose) {\n      this.props.onClose(yes);\n    }\n  };\n\n  render() {\n    const { title, text, open, alert } = this.props;\n    return (\n      <div>\n        <Dialog\n          open={open}\n          onClose={() => this.handleClose(false)}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">\n            {title ? title : ''}\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              {text}\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            {alert ? null : (\n              <Button onClick={() => this.handleClose(false)} color=\"primary\">\n                No\n              </Button>\n            )}\n            <Button\n              onClick={() => this.handleClose(true)}\n              color=\"primary\"\n              autoFocus\n            >\n              {alert ? 'OK' : 'Yes'}\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Icon from '../icon';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = (theme) => ({\n  formControl: {\n    // Specify a more appropriate min width so that the field is wide enough to cover most labels\n    // minWidth: 120\n  },\n  flip: {\n    transform: 'scaleY(-1)',\n  },\n});\n\nclass SelectOrder extends React.PureComponent {\n  handleClick = () => {\n    const sortOrder = this.props.sortOrder === 'ASC' ? 'DESC' : 'ASC';\n    this.props.onChange({ sortOrder });\n  };\n\n  handleChange = (event) => {\n    this.props.onChange({ sortBy: event.target.value });\n  };\n\n  render() {\n    const { classes, sortBy, sortOrder, options } = this.props;\n\n    const flipped = sortOrder !== 'DESC';\n\n    const items = options.map((option) => {\n      return (\n        <MenuItem value={option.value} key={option.value}>\n          {option.label}\n        </MenuItem>\n      );\n    });\n\n    // If we wanted the icon as an adornment:\n    // <TextField\n    //   select\n    //   InputProps={{\n    //     startAdornment:\n    //     <InputAdornment position=\"start\">\n    //       <IconButton color=\"primary\" aria-label=\"new\" onClick={this.handleOrder}>\n    //         <Icon icon=\"Sort\" className={classes.flip} />\n    //       </IconButton>\n    //     </InputAdornment>,\n    //   }}\n    // >\n    //   <MenuItem value={10}>Ten</MenuItem>\n    //   <MenuItem value={20}>Twenty</MenuItem>\n    //   <MenuItem value={30}>Thirty</MenuItem>\n    // </TextField>\n    return (\n      <div>\n        <FormControl className={classes.formControl}>\n          {/*\n          <InputLabel>Sort by</InputLabel>\n          */}\n          <Select value={sortBy} onChange={this.handleChange}>\n            <MenuItem value=\"\">\n              <em>None</em>\n            </MenuItem>\n            {items}\n          </Select>\n        </FormControl>\n        <IconButton\n          color=\"primary\"\n          aria-label=\"sort order\"\n          onClick={this.handleClick}\n        >\n          <Icon icon=\"Sort\" className={flipped ? classes.flip : null} />\n        </IconButton>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(SelectOrder);\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport FormCard from '../form-card';\nimport FormDialog from '../form-dialog';\nimport attach from '../attach';\nimport Button from '../button';\nimport Typography from '@material-ui/core/Typography';\nimport ConfirmationDialog from '../confirmation-dialog';\nimport access from 'mson/lib/access';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './collection-field.css';\nimport SelectOrder from './select-order';\nimport ButtonField from 'mson/lib/fields/button-field';\nimport Icon from '../icon';\nimport CommonField from './common-field';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport CollectionFieldCore from 'mson/lib/fields/collection-field';\n\nconst getItemStyle = (isDragging, draggableStyle, theme) => ({\n  // some basic styles to make the items look a bit nicer\n  userSelect: 'none',\n  padding: theme.spacing(0.125),\n  margin: `0 0 ${theme.spacing(0.125)}px 0`,\n\n  // change background colour if dragging\n  background: isDragging ? theme.palette.secondary[400] : undefined,\n\n  // styles we need to apply on draggables\n  ...draggableStyle,\n});\n\nconst getListStyle = (isDraggingOver, theme) => ({\n  background: isDraggingOver ? theme.palette.grey[300] : undefined,\n  width: '100%',\n});\n\n// Note:\n//   - We use a dialog to view/edit the forms as we want to be able to display just a few pieces\n//     of data in the list and all the data when viewing/editing.\n\nconst styles = (theme) => ({\n  root: {\n    // Needed when field is nested in a form that is nested in a form, e.g. FormEditor\n    width: '100%',\n  },\n  spacer: {\n    backgroundColor: theme.palette.grey[300],\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    animation: 'fadeIn 1s infinite alternate',\n  },\n  footer: {\n    // Create space at the footer so that it is more evident to the user that the next page has been\n    // loaded\n    height: 50,\n    backgroundColor: theme.palette.grey[300],\n    margin: theme.spacing(1),\n    animation: 'fadeIn 1s infinite alternate',\n  },\n});\n\nclass CollectionField extends React.PureComponent {\n  state = {\n    sortBy: '',\n    sortOrder: 'ASC',\n  };\n\n  handleClose = () => {\n    this.props.component.set({ mode: null });\n  };\n\n  handleCancel = (form) => {\n    const { component, preventReadAction } = this.props;\n    if (component.get('skipRead') || preventReadAction) {\n      component.set({ mode: null });\n    } else {\n      component.set({\n        currentForm: form,\n        mode: CollectionFieldCore.MODES.READ,\n      });\n    }\n  };\n\n  handleClick = (form) => {\n    const { component } = this.props;\n    if (component.get('skipRead')) {\n      component.set({\n        currentForm: form,\n        mode: CollectionFieldCore.MODES.UPDATE,\n      });\n    } else {\n      component.set({\n        currentForm: form,\n        mode: CollectionFieldCore.MODES.READ,\n      });\n    }\n  };\n\n  handleEdit = (form) => {\n    this.props.component.set({\n      currentForm: form,\n      mode: CollectionFieldCore.MODES.UPDATE,\n    });\n  };\n\n  handleNew = () => {\n    this.props.component.set({\n      currentForm: null,\n      mode: CollectionFieldCore.MODES.CREATE,\n    });\n  };\n\n  handleSave = async () => {\n    await this.props.component.save();\n  };\n\n  handleDelete = async (formToDelete) => {\n    const { component } = this.props;\n\n    const form = formToDelete ? formToDelete : component.get('form');\n\n    const archivedAt = form.getValue('archivedAt');\n\n    // Are we restoring?\n    if (archivedAt) {\n      component.set({\n        currentForm: form,\n        mode: CollectionFieldCore.MODES.RESTORE,\n      });\n    } else if (formToDelete) {\n      component.set({\n        currentForm: formToDelete,\n        mode: CollectionFieldCore.MODES.DELETE,\n      });\n    }\n  };\n\n  handleConfirmationClose = async (yes) => {\n    const { component } = this.props;\n    if (yes) {\n      await component.archive(component.get('form'));\n    }\n    component.set({ mode: null });\n  };\n\n  canCreate() {\n    return access.canCreate(this.props.component.get('form'));\n  }\n\n  canUpdate() {\n    return access.canUpdate(this.props.component.get('form'));\n  }\n\n  canArchive() {\n    return access.canArchive(this.props.component.get('form'));\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.bufferTopId !== prevProps.bufferTopId) {\n      // Resize the spacer now that the newly prepended items have been rendered\n      this.props.component._infiniteLoader.resizeSpacer(this.props.bufferTopId);\n    }\n\n    if (this.props.spacerHeight !== prevProps.spacerHeight) {\n      this.props.component._infiniteLoader.setSpacerResizing(false);\n    }\n\n    if (this.props.change !== prevProps.change) {\n      this.props.component.set({ isLoading: false });\n    }\n  }\n\n  canDrag() {\n    const { forbidOrder, showArchived, searchString, order } = this.props;\n\n    // Can we order by dragging?\n    return !forbidOrder && !showArchived && !searchString && !order;\n  }\n\n  cards(canUpdate, canArchive) {\n    const {\n      component,\n      forbidUpdate,\n      forbidDelete,\n      forbidOrder,\n      editable,\n      disabled,\n      useDisplayValue,\n      theme,\n    } = this.props;\n\n    // Force to 1 colum when ordering allowed\n    const maxColumns = forbidOrder === false ? 1 : this.props.maxColumns;\n\n    const maxGrids = 12 / maxColumns;\n\n    let cards = [];\n\n    let index = 0;\n    for (const form of component.getForms()) {\n      // TODO: Rendering should not change form. Use utils.getIfDefined() in form to allow passing\n      // in of editable via React layer\n      form.setEditable(false);\n\n      // We need to use the id for the key as we use the same list of cards when toggling\n      // showArchive\n      const key = form.getUniqueId();\n\n      // Note: we use an id instead of ref so that more of our logic can be reused across different\n      // frameworks. We use the form id so that we have a consistent way of referencing the element\n      // for things like infinite loading.\n      const id = component.getUniqueItemId(component._getFormKey(form));\n\n      const formExtras = component.getFormExtras(form);\n\n      const item = (\n        <Grid item xs={12} sm={maxGrids} lg={maxGrids} key={key} id={id}>\n          <FormCard\n            onClick={() => this.handleClick(form)}\n            onEdit={() => this.handleEdit(form)}\n            onDelete={this.handleDelete}\n            component={form}\n            forbidUpdate={forbidUpdate || !canUpdate || useDisplayValue}\n            forbidDelete={forbidDelete || !canArchive || useDisplayValue}\n            editable={editable}\n            disabled={disabled}\n            buttons={formExtras?.buttons}\n            id={id}\n            aria-label={`View ${id}`}\n          />\n        </Grid>\n      );\n\n      if (this.canDrag()) {\n        cards.push(\n          <Draggable key={id} draggableId={id} index={index++}>\n            {(provided, snapshot) => (\n              <div\n                ref={provided.innerRef}\n                {...provided.draggableProps}\n                {...provided.dragHandleProps}\n                style={getItemStyle(\n                  snapshot.isDragging,\n                  provided.draggableProps.style,\n                  theme\n                )}\n                aria-label={`Drag ${id}`}\n              >\n                {item}\n              </div>\n            )}\n          </Draggable>\n        );\n      } else {\n        cards.push(item);\n      }\n    }\n\n    return cards;\n  }\n\n  handleOrdering = (props) => {\n    // TODO: shouldn't the ordering just be in the field and not have to be in this state?\n    this.setState(props, () => {\n      this.props.component.set({\n        order: this.state.sortBy\n          ? [[this.state.sortBy, this.state.sortOrder]]\n          : null,\n      });\n    });\n  };\n\n  sortOptions() {\n    const { component } = this.props;\n    if (component && component.get('form')) {\n      const form = component.get('form');\n      const fieldsCanAccess = access.fieldsCanAccess('read', form);\n      const fields = [];\n      form.eachField((field) => {\n        const name = field.get('name');\n\n        // Do we have access to the field? Allowed to sort? Not hidden? Not a button?\n        if (\n          fieldsCanAccess[name] !== undefined &&\n          !field.get('forbidSort') &&\n          !field.get('hidden') &&\n          !(field instanceof ButtonField)\n        ) {\n          fields.push({\n            value: (form.isDefaultField(name) ? '' : 'fieldValues.') + name,\n            label: field.get('label'),\n          });\n        }\n      });\n      return fields;\n    }\n  }\n\n  header(numCards) {\n    const {\n      forbidCreate,\n      editable,\n      disabled,\n      component,\n      forbidSort,\n      store,\n      useDisplayValue,\n    } = this.props;\n\n    const { sortBy, sortOrder } = this.state;\n\n    const singularLabel = component.getSingularLabel();\n\n    const reachedMax = component.reachedMax();\n\n    const canCreate = this.canCreate();\n\n    const showNewButton =\n      editable &&\n      !disabled &&\n      !useDisplayValue &&\n      !forbidCreate &&\n      !reachedMax &&\n      canCreate;\n\n    const canOrder = !forbidSort;\n\n    const sortOptions = this.sortOptions();\n\n    // Sorting only works when there is a backing store\n    const hasStore = !!store;\n    const showOrder = numCards > 0 && hasStore;\n\n    return (\n      <Grid container spacing={0}>\n        <Grid item xs={12} sm={6} lg={6}>\n          {showNewButton ? (\n            <Button\n              aria-label=\"new\"\n              onClick={this.handleNew}\n              icon=\"Add\"\n              label={'New ' + singularLabel}\n              marginTop={false}\n            />\n          ) : null}\n        </Grid>\n        <Grid item xs={12} sm={6} lg={6} align=\"right\">\n          {showOrder && canOrder ? (\n            <SelectOrder\n              onChange={this.handleOrdering}\n              sortBy={sortBy}\n              sortOrder={sortOrder}\n              options={sortOptions}\n            />\n          ) : null}\n        </Grid>\n      </Grid>\n    );\n  }\n\n  onDragEnd = (result) => {\n    // dropped outside the list\n    if (!result.destination) {\n      return;\n    }\n\n    if (result.destination.index !== result.source.index) {\n      this.props.component.moveAndSaveForm({\n        sourceIndex: result.source.index,\n        destinationIndex: result.destination.index,\n      });\n    }\n  };\n\n  // TODO: how to prevent re-rendering of all form-cards when dialog open state is changed? Or, does\n  // it not really matter as we are using PureComponents?\n  field() {\n    const {\n      forbidUpdate,\n      forbidDelete,\n      component,\n      spacerHeight,\n      classes,\n      isLoading,\n      form,\n      currentForm,\n      noResults,\n      disabled,\n      accessEditable,\n      useDisplayValue,\n      theme,\n      preventUpdate,\n      preventDeleteAction,\n      mode,\n    } = this.props;\n\n    const dis = accessEditable === false || disabled;\n\n    let confirmationOpen = false;\n    let confirmationTitle = null;\n    if (\n      !preventDeleteAction &&\n      currentForm &&\n      mode === CollectionFieldCore.MODES.DELETE &&\n      !currentForm.getValue('archivedAt')\n    ) {\n      confirmationOpen = true;\n      // confirmationTitle: `Are you sure you want to delete this ${singularLabel}?`\n      confirmationTitle = 'Delete this?';\n    }\n\n    const label = component.get('label').toLowerCase();\n\n    const canUpdate = this.canUpdate();\n    const canArchive = this.canArchive();\n\n    const spacerStyle = { height: spacerHeight };\n\n    const spacerId = component.get('spacerId');\n\n    let cards = this.cards(canUpdate, canArchive);\n\n    let cardContainer = cards;\n\n    if (this.canDrag()) {\n      cardContainer = (\n        <DragDropContext onDragEnd={this.onDragEnd}>\n          <Droppable droppableId=\"droppable\">\n            {(provided, snapshot) => (\n              <div\n                ref={provided.innerRef}\n                style={getListStyle(snapshot.isDraggingOver, theme)}\n              >\n                {cards}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </DragDropContext>\n      );\n    }\n\n    const searchString = component.get('searchString');\n\n    // Is the user searching and there are no records?\n    const showNoRecords = searchString && noResults;\n\n    const header = this.header(cards.length);\n\n    return (\n      <div>\n        {header}\n\n        {showNoRecords ? (\n          <Typography variant=\"h4\">\n            <Icon icon=\"Info\" /> No {label} found\n          </Typography>\n        ) : null}\n\n        <div id={spacerId} className={classes.spacer} style={spacerStyle} />\n\n        <Grid container spacing={0}>\n          {cardContainer}\n        </Grid>\n\n        {isLoading ? <div className={classes.footer} /> : null}\n\n        {/* TODO: would it be better to have a single, global FormDialog instance? Or, is it better\n        to have multiple instances so that you can have different memory spaces. Currenly we have a\n        hybrid where we have a dialog per form. There is almost certainly more overhead in having an\n        instance per record, right? */}\n        <FormDialog\n          component={form}\n          currentForm={currentForm}\n          onClose={this.handleClose}\n          onCancel={this.handleCancel}\n          onSave={this.handleSave}\n          onEdit={this.handleEdit}\n          onDelete={this.handleDelete}\n          forbidUpdate={\n            forbidUpdate ||\n            !canUpdate ||\n            dis ||\n            useDisplayValue ||\n            preventUpdate\n          }\n          forbidDelete={\n            forbidDelete ||\n            !canArchive ||\n            dis ||\n            useDisplayValue ||\n            preventDeleteAction\n          }\n        />\n\n        <ConfirmationDialog\n          open={confirmationOpen}\n          onClose={this.handleConfirmationClose}\n          title={confirmationTitle}\n        />\n      </div>\n    );\n  }\n\n  render() {\n    const { component, hideLabel, classes } = this.props;\n\n    const isBlank = component.isBlank();\n\n    return (\n      <span className={classes.root}>\n        {!hideLabel && (\n          <CommonField\n            component={component}\n            inlineLabel=\"true\"\n            shrinkLabel={!isBlank}\n          />\n        )}\n        {this.field()}\n      </span>\n    );\n  }\n}\n\nCollectionField = withStyles(styles, { withTheme: true })(CollectionField);\nCollectionField = attach([\n  'change',\n  'label',\n  'singularLabel',\n  'forbidCreate',\n  'forbidUpdate',\n  'forbidDelete',\n  'forbidSort',\n  'forbidOrder',\n  'editable',\n  'disabled',\n  'spacerHeight',\n  'bufferTopId',\n  'isLoading',\n  'form',\n  'currentForm',\n  'mode',\n  'noResults',\n  'store',\n  'maxColumns',\n  'useDisplayValue',\n  'hideLabel',\n  'showArchived',\n  'searchString',\n  'order',\n  'preventReadAction',\n  'preventUpdate',\n  'preventDeleteAction',\n  'buttonsFactory',\n])(CollectionField);\nexport default CollectionField;\n","import React from 'react';\nimport Field from './field';\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from '../icon';\nimport FlexBreak from '../flex-break';\nimport attach from '../attach';\nimport HelpToolTip from './help-tool-tip';\n\nclass ListItemField extends React.PureComponent {\n  handleDelete = () => {\n    this.props.component.emit('delete');\n  };\n\n  render() {\n    // Note: allowDelete and help have to be passed in as a prop as it is really the parent's values\n    // that we need\n    const { component, allowDelete, help, disabled, editable } = this.props;\n\n    if (component) {\n      const block = component.get('block');\n      return (\n        <span>\n          <Field component={component} block={false} disabled={disabled} />\n          {allowDelete && !disabled && editable ? (\n            <IconButton aria-label=\"Delete\" onClick={this.handleDelete}>\n              <Icon icon=\"DeleteIcon\" />\n            </IconButton>\n          ) : null}\n          {help && editable ? <HelpToolTip help={help} /> : ''}\n          {block ? <FlexBreak /> : null}\n        </span>\n      );\n    } else {\n      // component can be falsy if it was just deleteed\n      return null;\n    }\n  }\n}\n\n// We want the component to update when the value changes as blank fields should not display a\n// delete button\nexport default attach(['value', 'disabled', 'editable'])(ListItemField);\n","import React from 'react';\nimport ListItemField from './list-item-field';\nimport attach from '../attach';\nimport Button from '../button';\nimport CommonField from './common-field';\n\nclass ListField extends React.PureComponent {\n  handleNew = () => {\n    this.props.component.createField();\n\n    // Reset the touched state so that errors aren't reported immediately when the user hasn't\n    // finished entering the new value.\n    this.props.component.set({ touched: false });\n  };\n\n  render() {\n    const {\n      component,\n      allowDelete,\n      useDisplayValue,\n      autoCreateFields,\n      hideLabel,\n      editable,\n      canDeleteEmpty,\n      accessEditable,\n      disabled,\n      hideDeleteButton,\n    } = this.props;\n\n    const singularLabel = component.getSingularLabel();\n\n    const dis = accessEditable === false || disabled;\n\n    let fields = [];\n    let first = true;\n\n    const isBlank = component.isBlank();\n\n    component.eachField((field, index) => {\n      const fieldIsBlank = field.isBlank();\n\n      // When using the display value, we hide any blank fields, e.g. the empty \"next\" fields\n      if (first || !useDisplayValue || !fieldIsBlank) {\n        // We have to pass allowDelete as it is the allowDelete of the parent\n        fields.push(\n          <ListItemField\n            component={field}\n            key={index}\n            allowDelete={\n              allowDelete &&\n              !useDisplayValue &&\n              (canDeleteEmpty || !fieldIsBlank) &&\n              !hideDeleteButton\n            }\n            disabled={disabled}\n          />\n        );\n      }\n\n      if (first) {\n        first = false;\n      }\n    });\n\n    if (!autoCreateFields && !useDisplayValue && editable && !dis) {\n      fields.push(\n        <Button\n          key=\"button\"\n          aria-label=\"add\"\n          onClick={this.handleNew}\n          icon=\"Add\"\n          label={'Add ' + (singularLabel ? singularLabel : '')}\n          marginTop={false}\n        />\n      );\n    }\n\n    return (\n      <span>\n        {!hideLabel && (\n          <CommonField\n            component={component}\n            inlineLabel=\"true\"\n            marginBottom={false}\n            shrinkLabel={!isBlank}\n          />\n        )}\n        <div>{fields}</div>\n      </span>\n    );\n  }\n}\n\n// We want the component to update when we receive new fields\nexport default attach([\n  'change',\n  'help',\n  'allowDelete',\n  'useDisplayValue',\n  'autoCreateFields',\n  'hideLabel',\n  'value',\n  'editable',\n  'canDeleteEmpty',\n  'disabled',\n  'hideDeleteButton',\n  'singularLabel',\n  'label',\n])(ListField);\n","import React from 'react';\nimport attach from '../attach';\nimport ReCAPTCHA from 'react-google-recaptcha';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport globals from 'mson/lib/globals';\n\nconst styles = (theme) => ({\n  captcha: {\n    margin: theme.spacing(1),\n  },\n});\n\nclass ReCAPTCHAField extends React.PureComponent {\n  handleChange = (value) => {\n    this.props.component.setValue(value);\n  };\n\n  render() {\n    const {\n      disabled,\n      editable,\n      accessEditable,\n      classes,\n      useDisplayValue,\n    } = this.props;\n\n    const isEditable = accessEditable !== false && editable && !disabled;\n\n    const siteKey = globals.get('reCAPTCHASiteKey');\n\n    if (isEditable && !useDisplayValue) {\n      return (\n        <div className={classes.captcha}>\n          <ReCAPTCHA\n            ref=\"recaptcha\"\n            sitekey={siteKey}\n            onChange={this.handleChange}\n          />\n        </div>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nReCAPTCHAField = withStyles(styles)(ReCAPTCHAField);\n\nexport default attach(['disabled', 'editable', 'useDisplayValue'])(\n  ReCAPTCHAField\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport Select from 'react-select';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Chip from '@material-ui/core/Chip';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Icon from '../icon';\nimport { emphasize } from '@material-ui/core/styles/colorManipulator';\n\nconst styles = (theme) => ({\n  input: {\n    display: 'flex',\n    padding: 0,\n    minWidth: 240, // A good default for most labels\n    height: 'auto',\n  },\n  valueContainer: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    flex: 1,\n    alignItems: 'center',\n\n    // Adjust for MUI label\n    marginTop: theme.spacing(2) + 5,\n  },\n  chip: {\n    margin: `${theme.spacing(1)}px ${theme.spacing(0.25)}px`,\n  },\n  chipFocused: {\n    backgroundColor: emphasize(\n      theme.palette.type === 'light'\n        ? theme.palette.grey[300]\n        : theme.palette.grey[700],\n      0.08\n    ),\n  },\n  noOptionsMessage: {\n    padding: `${theme.spacing(1)}px ${theme.spacing(2)}px`,\n  },\n  singleValue: {\n    fontSize: theme.typography.subtitle1.fontSize,\n  },\n  // placeholder: {\n  //   position: 'absolute',\n  //   left: 2,\n  //   fontSize: theme.typography.subtitle1.fontSize\n  // },\n  paper: {\n    position: 'absolute',\n    zIndex: 1,\n\n    // Adjust for MUI label\n    // marginTop: theme.spacing.unit * 7\n    marginTop: theme.spacing(1),\n  },\n  root: {\n    // Allow for help icon to be placed on right of field\n    display: 'inline-flex',\n  },\n  fullWidth: {\n    width: '100%',\n  },\n  disabled: {\n    color: theme.palette.text.secondary,\n  },\n});\n\nfunction NoOptionsMessage(props) {\n  return (\n    <Typography\n      color=\"textSecondary\"\n      className={props.selectProps.classes.noOptionsMessage}\n      {...props.innerProps}\n    >\n      {props.children}\n    </Typography>\n  );\n}\n\nfunction inputComponent({ inputRef, ...props }) {\n  return <div ref={inputRef} {...props} />;\n}\n\nfunction Control(props) {\n  const optionalProps = {};\n  if (props.selectProps.fullWidth) {\n    optionalProps.fullWidth = true;\n  }\n  return (\n    <TextField\n      {...optionalProps}\n      InputProps={{\n        inputComponent,\n        inputProps: {\n          className: props.selectProps.classes.input,\n          inputRef: props.innerRef,\n          children: props.children,\n          // We need to specify the aria-label so that this element is the one that receives focus\n          // for the target field label\n          'aria-label': props.selectProps.ariaLabel,\n          ...props.innerProps,\n        },\n      }}\n      {...props.selectProps.textFieldProps}\n    />\n  );\n}\n\nfunction Option(props) {\n  return (\n    <MenuItem\n      buttonRef={props.innerRef}\n      selected={props.isFocused}\n      component=\"div\"\n      style={{\n        fontWeight: props.isSelected ? 500 : 400,\n      }}\n      {...props.innerProps}\n    >\n      {props.children}\n    </MenuItem>\n  );\n}\n\n// Note: kept in case we want to implement the placeholder in the future\n// function Placeholder(props) {\n//   return (\n//     <Typography\n//       color=\"textSecondary\"\n//       className={props.selectProps.classes.placeholder}\n//       {...props.innerProps}\n//     >\n//       {props.children}\n//     </Typography>\n//   );\n// }\n\nfunction SingleValue(props) {\n  return (\n    <Typography\n      className={classNames(\n        props.selectProps.classes.singleValue,\n        props.selectProps.isDisabled ? props.selectProps.classes.disabled : null\n      )}\n      {...props.innerProps}\n    >\n      {props.children}\n    </Typography>\n  );\n}\n\nfunction ValueContainer(props) {\n  return (\n    <div className={props.selectProps.classes.valueContainer}>\n      {props.children}\n    </div>\n  );\n}\n\nfunction MultiValue(props) {\n  return (\n    <Chip\n      tabIndex={-1}\n      label={props.children}\n      className={classNames(props.selectProps.classes.chip, {\n        [props.selectProps.classes.chipFocused]: props.isFocused,\n        [props.selectProps.classes.disabled]: props.selectProps.isDisabled,\n      })}\n      onDelete={props.removeProps.onClick}\n      deleteIcon={\n        <Icon\n          icon=\"Cancel\"\n          aria-label=\"Remove\"\n          role=\"button\"\n          aria-hidden=\"false\"\n        />\n      }\n    />\n  );\n}\n\nfunction Menu(props) {\n  return (\n    <Paper\n      square\n      className={props.selectProps.classes.paper}\n      {...props.innerProps}\n    >\n      {props.children}\n    </Paper>\n  );\n}\n\nconst components = {\n  Control,\n  Menu,\n  MultiValue,\n  NoOptionsMessage,\n  Option,\n  // Placeholder,\n  SingleValue,\n  ValueContainer,\n};\n\nclass AutoCompleteSelect extends React.Component {\n  render() {\n    const {\n      classes,\n      options,\n      isClearable,\n      placeholder,\n      onChange,\n      onBlur,\n      onFocus,\n      onInputChange,\n      value,\n      isDisabled,\n      fullWidth,\n      isMulti,\n      id,\n    } = this.props;\n\n    const selectStyles = {\n      dropdownIndicator: (base) => ({\n        ...base,\n        cursor: 'pointer',\n      }),\n      clearIndicator: (base) => ({\n        ...base,\n        cursor: 'pointer',\n      }),\n\n      // Needed so that the menu appears above any dialog windows\n      menuPortal: (base) => ({\n        ...base,\n        zIndex: 2000,\n      }),\n    };\n\n    return (\n      <Select\n        id={id}\n        className={classNames(classes.root, fullWidth && classes.fullWidth)}\n        classes={classes}\n        styles={selectStyles}\n        options={options}\n        components={components}\n        value={value}\n        onChange={onChange}\n        onBlur={onBlur}\n        onFocus={onFocus}\n        onInputChange={onInputChange}\n        placeholder={placeholder}\n        isClearable={isClearable}\n        isDisabled={isDisabled}\n        fullWidth={fullWidth}\n        isMulti={isMulti}\n        // Needed so that the menu is not clipped by the app's root level overflow:hidden or when it\n        // appears in a dialog window\n        menuPortalTarget={document.body}\n        // Specify ariaLabel instead of aria-label as it is the Control that needs to render the\n        // aria-label\n        ariaLabel={this.props['aria-label']}\n      />\n    );\n  }\n}\n\nexport default withStyles(styles)(AutoCompleteSelect);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Input from '@material-ui/core/Input';\nimport Chip from '@material-ui/core/Chip';\nimport CommonField from './common-field';\nimport attach from '../attach';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport DisplayValueTypography from './display-value-typography';\nimport AutoCompleteSelect from './autocomplete-select';\n\nconst styles = (theme) => ({\n  formControl: {\n    // Specify a more appropriate min width so that the field is wide enough to cover most labels\n    minWidth: 120,\n  },\n  chip: {\n    margin: theme.spacing(0.25),\n  },\n});\n\nclass SelectField extends React.PureComponent {\n  state = {\n    focus: false,\n  };\n\n  handleChange(value) {\n    this.props.component.setValue(value);\n  }\n\n  handleAutocompleteChange(value) {\n    const { multiple } = this.props;\n    if (multiple) {\n      this.handleChange(value ? value.map((val) => val.value) : null);\n    } else {\n      this.handleChange(value && (value.value ? value.value : null));\n    }\n  }\n\n  handleFocus() {\n    this.setState({ focus: true });\n  }\n\n  handleBlur() {\n    this.setState({ focus: false });\n    this.props.component.setTouched(true);\n  }\n\n  renderOptions() {\n    const { options, blankString, value, multiple } = this.props;\n\n    if (options) {\n      let opts = [];\n\n      if (!multiple && blankString) {\n        // Note: the blankString doesn't make sense when we allow multiple selections\n        opts.push(\n          <MenuItem value=\"\" key=\"\">\n            <em>{blankString}</em>\n          </MenuItem>\n        );\n      }\n\n      options.forEach((option) => {\n        if (multiple) {\n          const checked = value ? value.indexOf(option.value) !== -1 : false;\n          opts.push(\n            <MenuItem value={option.value} key={option.value}>\n              <Checkbox checked={checked} />\n              <ListItemText primary={option.label} />\n            </MenuItem>\n          );\n        } else {\n          opts.push(\n            <MenuItem value={option.value} key={option.value}>\n              {option.label}\n            </MenuItem>\n          );\n        }\n      });\n\n      return opts;\n    }\n  }\n\n  render() {\n    const {\n      value,\n      err,\n      touched,\n      disabled,\n      component,\n      fullWidth,\n      classes,\n      editable,\n      multiple,\n      accessEditable,\n      useDisplayValue,\n      options,\n      autocomplete,\n    } = this.props;\n\n    const { focus } = this.state;\n\n    const dis = accessEditable === false || disabled;\n\n    let fieldValue = multiple ? [] : '';\n    if (value) {\n      fieldValue = value;\n    }\n\n    let input = undefined;\n    let renderValue = undefined;\n    if (multiple) {\n      input = <Input />;\n\n      renderValue = (selected) => (\n        <div className={classes.chips}>\n          {selected.map((value) => (\n            <Chip\n              key={value}\n              label={component.getOptionLabel(value)}\n              className={classes.chip}\n            />\n          ))}\n        </div>\n      );\n    }\n\n    const optionalProps = {};\n\n    let fld = null;\n    const ariaLabel = component.get('label');\n    if (editable && !useDisplayValue) {\n      if (autocomplete) {\n        let autocompleteValue = null;\n\n        if (multiple) {\n          autocompleteValue = fieldValue.map((value) => ({\n            value: value,\n            label: component.getOptionLabel(value),\n          }));\n        } else {\n          autocompleteValue = {\n            value: fieldValue,\n            label: component.getOptionLabel(fieldValue),\n          };\n        }\n\n        // Shrink the label?\n        if (focus || !component.isValueBlank(fieldValue)) {\n          optionalProps.shrinkLabel = true;\n        }\n\n        fld = (\n          <AutoCompleteSelect\n            id={component.getUniqueId()}\n            options={options}\n            isClearable={true}\n            placeholder=\"\"\n            onChange={(value) => this.handleAutocompleteChange(value)}\n            onBlur={() => this.handleBlur()}\n            onFocus={() => this.handleFocus()}\n            value={autocompleteValue}\n            isDisabled={dis}\n            fullWidth={fullWidth}\n            isMulti={multiple}\n            aria-label={ariaLabel}\n          />\n        );\n      } else {\n        fld = (\n          <Select\n            id={component.getUniqueId()}\n            multiple={multiple}\n            error={touched && err ? true : false}\n            onChange={(event) => this.handleChange(event.target.value)}\n            onBlur={() => this.handleBlur()}\n            input={input}\n            renderValue={renderValue}\n            value={fieldValue}\n            disabled={dis}\n            fullWidth={fullWidth}\n            className={classes.formControl}\n            aria-label={ariaLabel}\n          >\n            {this.renderOptions()}\n          </Select>\n        );\n      }\n    } else {\n      let displayValue = null;\n      if (multiple && value) {\n        displayValue = value.map((val) => (\n          <Chip\n            key={val}\n            label={component.getOptionLabel(val)}\n            className={classes.chip}\n          />\n        ));\n      } else {\n        displayValue = component.getDisplayValue();\n      }\n      fld = (\n        <DisplayValueTypography aria-label={ariaLabel}>\n          {displayValue}\n        </DisplayValueTypography>\n      );\n    }\n\n    return (\n      <CommonField component={component} {...optionalProps}>\n        {fld}\n      </CommonField>\n    );\n  }\n}\n\nSelectField = withStyles(styles)(SelectField);\n\nexport default attach([\n  'value',\n  'err',\n  'options',\n  'touched',\n  'blankString',\n  'disabled',\n  'fullWidth',\n  'editable',\n  'multiple',\n  'useDisplayValue',\n  'autocomplete',\n])(SelectField);\n","import React from 'react';\nimport attach from './attach';\nimport AppBar from '@material-ui/core/AppBar';\nimport TabsMui from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Icon from './icon';\n\nclass Tabs extends React.Component {\n  handleChange = (event, value) => {\n    const { component, items } = this.props;\n    component.set({ value });\n\n    const itemName = items[value].name;\n    component.emitChange(itemName);\n  };\n\n  render() {\n    const { items, value } = this.props;\n\n    // FUTURE: option to make this fixed under the main app bar?\n    return (\n      <AppBar\n        position=\"static\"\n        color=\"default\"\n        elevation={1} // tone down the elevation>\n      >\n        <TabsMui\n          value={value}\n          onChange={this.handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          scrollButtons=\"auto\"\n          variant=\"fullWidth\"\n        >\n          {items.map((item, index) => (\n            <Tab\n              label={item.label}\n              icon={<Icon icon={item.icon} />}\n              key={index}\n            />\n          ))}\n        </TabsMui>\n      </AppBar>\n    );\n  }\n}\n\nTabs = attach(['items', 'value'])(Tabs);\n\nexport default Tabs;\n","import React from 'react';\nimport attach from '../attach';\nimport CommonField from './common-field';\nimport { MuiPickersUtilsProvider, TimePicker } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport DisplayValueTypography from './display-value-typography';\n\nconst styles = (theme) => ({\n  root: {\n    // We need to add a margin as the picker doesn't play well with the Material-UI label\n    marginTop: theme.spacing(2),\n  },\n});\n\nclass TimeField extends React.PureComponent {\n  handleDateChange = (date) => {\n    this.props.component.setValue(date);\n  };\n\n  handleBlur = () => {\n    this.props.component.setTouched(true);\n  };\n\n  render() {\n    const {\n      component,\n      classes,\n      value,\n      editable,\n      useDisplayValue,\n      showSeconds,\n      fullWidth,\n      disabled,\n      accessEditable,\n    } = this.props;\n\n    const dis = accessEditable === false || disabled;\n\n    let shrinkLabel = false;\n\n    let fld = null;\n    if (editable && !useDisplayValue) {\n      // The picker doesn't play well with the label from Material-UI so we need to manually shrink\n      // the label when there is a value.\n      shrinkLabel = !!value;\n      fld = (\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n          <span>\n            <TimePicker\n              // Value cannot be undefined or else picker will default to today\n              value={value ? value : null}\n              onChange={this.handleDateChange}\n              clearable\n              className={classes.root}\n              seconds={showSeconds}\n              // The minDate and maxDate are not used as they are confusing. They impose a\n              // restriction on the actual day, which doesn't make sense as the time is store as a\n              // timestamp with today's date and therefore the days may not match. Moreover, the\n              // picker doesn't change when these dates are specified so we can just handle the\n              // validation at the MSON-core layer. TODO: we can implement these ranges in the\n              // MSON-core layer by constructing dates with the current day and specified time from\n              // minDate and maxDate.\n              // minDate={minDate}\n              // maxDate={maxDate}\n\n              onClose={this.handleBlur}\n              fullWidth={fullWidth}\n              disabled={dis}\n              invalidDateMessage=\"\" // Let CommonField display the error\n              // format=\"M/d/YYYY h:m a\"\n            />\n          </span>\n        </MuiPickersUtilsProvider>\n      );\n    } else {\n      fld = (\n        <DisplayValueTypography>\n          {component.getDisplayValue()}\n        </DisplayValueTypography>\n      );\n    }\n\n    return (\n      <CommonField component={component} shrinkLabel={shrinkLabel}>\n        {fld}\n      </CommonField>\n    );\n  }\n}\n\nTimeField = withStyles(styles)(TimeField);\n\nexport default attach([\n  'value',\n  'editable',\n  'useDisplayValue',\n  'showSeconds',\n  'fullWidth',\n  'disabled',\n])(TimeField);\n","import React from 'react';\nimport attach from './attach';\nimport Typography from '@material-ui/core/Typography';\nimport ReactMarkdown from 'react-markdown';\n\nclass Text extends React.PureComponent {\n  render() {\n    const { text } = this.props;\n\n    // We use component=div to force usage of a div, instead of a p, as properly formatted HTML\n    // cannot nest tags like h1 under a <p>.\n    return (\n      <Typography component=\"div\">\n        <ReactMarkdown source={text} />\n      </Typography>\n    );\n  }\n}\n\nText = attach(['text'])(Text);\nexport default Text;\n","import React from 'react';\nimport Input from '@material-ui/core/Input';\nimport CommonField from './common-field';\nimport attach from '../attach';\nimport DisplayValueTypography from './display-value-typography';\nimport MaskedInput from 'react-text-mask';\n\nclass TextField extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    // Create a custom TextMask component. This is done once in the constructor so that it is not\n    // done in each call to render()\n    this.TextMaskCustom = (props) => {\n      const { inputRef, ...other } = props;\n      const { mask } = this.props;\n\n      return (\n        <MaskedInput\n          {...other}\n          ref={(ref) => {\n            inputRef(ref ? ref.inputElement : null);\n          }}\n          mask={mask}\n        />\n      );\n    };\n  }\n\n  handleChange = (event) => {\n    const { component } = this.props;\n    const value = component.fromUIValue(event.target.value);\n    component.setValue(value);\n  };\n\n  handleBlur = () => {\n    this.props.component.setTouched(true);\n  };\n\n  handleKeyUp = (event) => {\n    // If the user presses enter on the field then mark as touched. This is necessary for when the\n    // user is using the keyboard to enter data and there is an error on the last field that needs\n    // to be reported when the user presses enter.\n    if (event.keyCode === 13) {\n      this.props.component.setTouched(true);\n    }\n  };\n\n  render() {\n    const {\n      err,\n      maxLength,\n      touched,\n      disabled,\n      component,\n      fullWidth,\n      type,\n      editable,\n      accessEditable,\n      multiline,\n      rows,\n      rowsMax,\n      useDisplayValue,\n      mask,\n      displayValue,\n    } = this.props;\n\n    const dis = accessEditable === false || disabled;\n\n    let fld = null;\n    if (editable && !useDisplayValue) {\n      const optional = {};\n      if (mask) {\n        optional.inputComponent = this.TextMaskCustom;\n      }\n      const uiValue = component.getUIValue();\n\n      fld = (\n        <Input\n          id={component.getUniqueId()}\n          error={touched && err ? true : false}\n          inputProps={{\n            maxLength: maxLength,\n          }}\n          onChange={this.handleChange}\n          onBlur={this.handleBlur}\n          onKeyUp={this.handleKeyUp}\n          value={uiValue ? uiValue : ''}\n          disabled={dis}\n          fullWidth={fullWidth}\n          type={type}\n          multiline={multiline}\n          rows={rows}\n          rowsMax={rowsMax}\n          {...optional}\n        />\n      );\n    } else {\n      fld = (\n        <DisplayValueTypography\n          id={component.getUniqueId()}\n          // We need to specify the aria-label so that this element is linked to the target field\n          // label\n          aria-label={component.get('label')}\n        >\n          {displayValue ? displayValue : component.getDisplayValue()}\n        </DisplayValueTypography>\n      );\n    }\n\n    return <CommonField component={component}>{fld}</CommonField>;\n  }\n}\n\nexport default attach([\n  'value',\n  'err',\n  'maxLength',\n  'touched',\n  'disabled',\n  'fullWidth',\n  'type',\n  'editable',\n  'multiline',\n  'rows',\n  'rowsMax',\n  'useDisplayValue',\n  'mask',\n  'unmask',\n])(TextField);\n","import React from 'react';\nimport TextField from './text-field';\nimport attach from '../attach';\n\nclass URLField extends React.PureComponent {\n  render() {\n    const {\n      component,\n      value,\n      editable,\n      useDisplayValue,\n      newWindow,\n    } = this.props;\n\n    let displayValue = null;\n\n    // Note: editable & useDisplayValue are checked to avoid unnecessary rendering\n    if ((!editable || useDisplayValue) && value) {\n      let href = value;\n      if (href.indexOf('http') !== 0) {\n        href = 'http://' + href;\n      }\n      displayValue = (\n        <a href={href} target={newWindow ? '_blank' : '_self'}>\n          {value}\n        </a>\n      );\n    }\n\n    return <TextField component={component} displayValue={displayValue} />;\n  }\n}\n\nexport default attach(['value', 'editable', 'useDisplayValue', 'newWindow'])(\n  URLField\n);\n","// NOTE: this file should only contain the component registrations\n\nimport ButtonField from './fields/button-field';\nimport BooleanField from './fields/boolean-field';\nimport Card from './card';\nimport ComponentField from './fields/component-field';\nimport CompositeField from './fields/composite-field';\nimport DateField from './fields/date-field';\nimport Field from './fields/field';\nimport Form from './form';\nimport FormField from './fields/form-field';\nimport Fragment from './fragment';\nimport Grid from './grid';\nimport GridItem from './grid-item';\nimport CollectionField from './fields/collection-field';\nimport ListField from './fields/list-field';\nimport ReCAPTCHAField from './fields/re-captcha-field';\nimport SelectField from './fields/select-field';\nimport Tabs from './tabs';\nimport TimeField from './fields/time-field';\nimport Text from './text';\nimport TextField from './fields/text-field';\nimport URLField from './fields/url-field';\n\nexport default {\n  ButtonField,\n  BooleanField,\n  Card,\n  ChainedSelectField: CompositeField,\n  ChainedSelectListField: ListField,\n  ComponentField,\n  CompositeField,\n  DateField,\n  Field,\n  Form,\n  FormField,\n  Fragment,\n  Grid,\n  GridItem,\n  CollectionField,\n  IdField: TextField,\n  IntegerField: TextField,\n  ListField,\n  MoneyField: TextField,\n  NumberField: TextField,\n  PhoneField: TextField,\n  ReCAPTCHAField,\n  SelectField,\n  SelectListField: ListField,\n  Tabs,\n  TimeField,\n  Text,\n  TextField,\n  TextListField: ListField,\n  URLField,\n  User: Form,\n};\n","import components from './components';\nimport compiler from 'mson/lib/compiler';\n\nclass Utils {\n  getUIComponent(component) {\n    const name = component.getClassName();\n    const Component = components[name];\n    if (Component !== undefined) {\n      return Component;\n    } else if (compiler.isCompiled(compiler.getComponent(name))) {\n      const Parent = Object.getPrototypeOf(component.constructor);\n      return this.getUIComponent(new Parent());\n    } else {\n      // The React component wasn't found so check the MSON layer to see if we can automatically\n      // determine the component from any MSON.\n      const ancestorName = compiler.getOldestCompiledAncestor(name);\n      const Ancestor = compiler.getComponent(ancestorName);\n      return this.getUIComponent(new Ancestor());\n    }\n  }\n}\n\nexport default new Utils();\n","import React from 'react';\nimport componentUtils from './component-utils';\n\nexport default class InnerComponent extends React.PureComponent {\n  handleChange = (name, value) => {\n    const { on, component } = this.props;\n\n    // Generic handler\n    if (on) {\n      on({ name, value, component });\n    }\n\n    // Handler for specific event\n    const handlerName = 'on' + name.charAt(0).toUpperCase() + name.slice(1);\n    if (this.props[handlerName]) {\n      this.props[handlerName]({ value, component });\n    }\n  };\n\n  addChangeListener() {\n    this.props.component.on('$change', this.handleChange);\n\n    // Emit a mount event so that the component can load any initial data, etc... We emit this event\n    // here and not in componentDidMount() as the component may actually be set after\n    // componentDidMount() was run.\n    this.props.component.emitChange('mount');\n  }\n\n  removeChangeListener() {\n    this.props.component.removeListener('$change', this.handleChange);\n  }\n\n  componentDidMount() {\n    if (this.props.component) {\n      this.addChangeListener();\n    }\n  }\n\n  componentWillUnmount() {\n    // Emit a unmount event so that we can perform any needed clean up\n    this.props.component.emitChange('unmount');\n\n    this.removeChangeListener();\n  }\n\n  componentDidUpdate(prevProps) {\n    // Is the component changing?\n    if (this.props.component !== prevProps.component) {\n      // Recreate the listener\n      this.removeChangeListener();\n      this.addChangeListener();\n    }\n  }\n\n  render() {\n    const { component, ...others } = this.props;\n\n    if (component) {\n      const Component = componentUtils.getUIComponent(component);\n      return <Component component={component} {...others} />;\n    } else {\n      return null;\n    }\n  }\n}\n","import React from 'react';\nimport InnerComponent from './inner-component';\nimport compiler from 'mson/lib/compiler';\nimport attach from './attach';\n\nexport class Component extends React.PureComponent {\n  state = { component: null };\n\n  createComponent() {\n    const { definition } = this.props;\n    this.setState({ component: compiler.newComponent(definition) });\n  }\n\n  componentDidMount() {\n    if (this.props.definition) {\n      this.createComponent();\n    }\n  }\n\n  componentWillUnmount() {\n    const { component } = this.state;\n\n    // Did we use a definition to define a component in the state?\n    if (component) {\n      // Fire the unmount before we destroy the component so that the event is not lost\n      component.emitChange('unmount');\n\n      // Remove all listeners to prevent listener leaks\n      this.state.component.destroy();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    // Is the definition changing?\n    if (this.props.definition !== prevProps.definition) {\n      this.createComponent();\n    }\n  }\n\n  render() {\n    const { definition, component, ...childProps } = this.props;\n    let comp = component;\n\n    // Should we use the component generated from the definition?\n    if (!component) {\n      comp = this.state.component;\n    }\n\n    // Note: the component can be falsy, e.g. it has not yet been defined\n    if (comp && comp.get('hidden')) {\n      return null;\n    } else {\n      return <InnerComponent component={comp} {...childProps} />;\n    }\n  }\n}\n\nexport default attach(['hidden'])(Component);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\n// import Button from '@material-ui/core/Button';\nimport SnackbarMUI from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from './icon';\n\nconst styles = (theme) => ({\n  close: {\n    padding: theme.spacing(0.5),\n  },\n});\n\nclass Snackbar extends React.PureComponent {\n  handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    if (this.props.onClose) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    const { classes, message, open } = this.props;\n    return (\n      <SnackbarMUI\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={this.handleClose}\n        ContentProps={{\n          'aria-describedby': 'message-id',\n        }}\n        message={<span id=\"message-id\">{message}</span>}\n        action={[\n          // <Button key=\"undo\" color=\"secondary\" size=\"small\" onClick={this.handleClose}>\n          //   UNDO\n          // </Button>,\n          <IconButton\n            key=\"close\"\n            aria-label=\"Close\"\n            color=\"inherit\"\n            className={classes.close}\n            onClick={this.handleClose}\n          >\n            <Icon icon=\"Close\" />\n          </IconButton>,\n        ]}\n      />\n    );\n  }\n}\n\nSnackbar.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Snackbar);\n","// TODO:\n//   - On mobile when using search bar, display title and search icon. When user clicks icon then\n//     hides title and allows for search string to be entered.\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from './icon';\nimport Menu from './menu';\nimport SearchBar from './search-bar';\nimport { Switch, Route } from 'react-router-dom';\nimport Component from './component';\nimport ComponentMSON from 'mson/lib/component';\n// import compiler from 'mson/lib/compiler';\nimport { withRouter } from 'react-router';\nimport withWidth, { isWidthDown } from '@material-ui/core/withWidth';\nimport attach from './attach';\nimport globals from 'mson/lib/globals';\nimport Snackbar from './snackbar';\nimport ConfirmationDialog from './confirmation-dialog';\nimport MUISwitch from '@material-ui/core/Switch';\n// import UserMenu from './user-menu';\nimport Action from 'mson/lib/actions/action';\nimport CollectionField from 'mson/lib/fields/collection-field';\nimport Form from 'mson/lib/form';\nimport access from 'mson/lib/access';\nimport registrar from 'mson/lib/compiler/registrar';\n\nconst drawerWidth = 240;\n\nconst styles = (theme) => ({\n  root: {\n    width: '100%',\n    // height: 430,\n    // marginTop: theme.spacing.unit * 3,\n    zIndex: 1,\n    overflow: 'hidden',\n  },\n  appFrame: {\n    position: 'relative',\n    display: 'flex',\n    width: '100%',\n    height: '100%',\n  },\n  appBar: {\n    position: 'fixed',\n    marginLeft: drawerWidth,\n  },\n  appBarResponsive: {\n    [theme.breakpoints.up('md')]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n    },\n  },\n  navIconHide: {\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n  content: {\n    backgroundColor: theme.palette.background.default,\n    width: '100%',\n    padding: theme.spacing(3),\n    height: 'calc(100% - 56px)',\n    marginTop: 56,\n    [theme.breakpoints.up('sm')]: {\n      height: 'calc(100% - 64px)',\n      marginTop: 64,\n    },\n\n    // Disable Chrome's Scroll Anchoring as it causes problems with infinite scrolling when\n    // scrolling up. Specifically, the scroll location is locked after items are prepended to the\n    // top of the list before the spacer is resized.\n    overflowAnchor: 'none',\n  },\n  contentResponsive: {\n    // Also needed to extend menu vertically\n    [theme.breakpoints.up('md')]: {\n      marginLeft: drawerWidth,\n    },\n  },\n  alignRight: {\n    marginLeft: 'auto', // right align\n  },\n});\n\n// TODO: break up into components for header, menu, body, etc...\nclass App extends React.PureComponent {\n  state = {\n    mobileOpen: false,\n    menuItem: null,\n    snackbarOpen: false,\n    snackbarMessage: '',\n    confirmationOpen: false,\n    nextMenuItem: null,\n    showArchivedToggle: false,\n\n    // Note: we need both searchStringInput and globals.searchString as searchStringInput is the\n    // controlled value for the text input and globals.searchString is the actual string with which\n    // we are searching. These values not the same as we expect the user to submit the search before\n    // it is performed so that we don't search on every keystroke. FUTURE: wait a little bit after\n    // characters have been entered and then automatically search.\n    searchStringInput: '',\n    showSearch: false,\n\n    showSearchOnMobile: false,\n\n    // isLoggedIn: false\n  };\n\n  form = null;\n\n  path = null;\n\n  constructor(props) {\n    super(props);\n    this.setGlobalOnNavigate();\n  }\n\n  onNavigate = (callback) => {\n    // We don't warn about discarding changes when fullScreen, e.g. a login page\n    const menuItem = this.state.menuItem;\n    if (\n      menuItem &&\n      menuItem.producedContent.has('dirty') &&\n      menuItem.producedContent.get('dirty') &&\n      !menuItem.fullScreen\n    ) {\n      // Show a confirmation dialog to see if the user wants to continue\n      globals.displayConfirmation({\n        title: 'Discard changes?',\n        callback,\n      });\n    } else {\n      // Nothing is dirty so allow the navigation to continue\n      callback(true);\n    }\n  };\n\n  setGlobalOnNavigate() {\n    globals.setOnNavigate(this.onNavigate);\n  }\n\n  handleDrawerToggle = () => {\n    this.setState({ mobileOpen: !this.state.mobileOpen });\n  };\n\n  redirect(path) {\n    const { history } = this.props;\n\n    // Clear the redirectPath so that back-to-back redirects to the same route are considered\n    // unique, e.g. if / routes to /somepage and then the user hits back.\n    globals.set({ redirectPath: null });\n\n    history.push(path);\n  }\n\n  navigateTo(path) {\n    const { component } = this.props;\n    const menu = component.get('menu');\n    const item = menu.getItemAndParsePath(path);\n    return this.switchContent(item.item, item.params);\n  }\n\n  handleNavigate = async (menuItem) => {\n    this.props.history.push(menuItem.path);\n  };\n\n  handleConfirmationClose = async (yes) => {\n    const { confirmation } = this.props;\n    if (confirmation.callback && yes) {\n      // Allow/prohibit the route change\n      confirmation.callback(yes);\n    }\n    this.setState({ confirmationOpen: false });\n  };\n\n  canArchive(currentComponent) {\n    let canArchive = false;\n    let canSearch = false;\n    if (currentComponent && currentComponent instanceof Form) {\n      for (const field of currentComponent.getFields()) {\n        if (field instanceof CollectionField) {\n          canArchive =\n            !field.get('forbidViewArchived') &&\n            access.canArchive(field.get('form'));\n          canSearch = !field.get('forbidSearch');\n        }\n      }\n    }\n    return {\n      canArchive,\n      canSearch,\n    };\n  }\n\n  emitLoggedOut() {\n    globals.set({ redirectAfterLogin: this.props.location.pathname });\n    this.props.component.emitLoggedOut();\n  }\n\n  requireAccess(roles) {\n    const canAccess =\n      !roles || (registrar.client && registrar.client.user.hasRole(roles));\n    if (!canAccess) {\n      this.emitLoggedOut();\n    }\n    return canAccess;\n  }\n\n  switchContent = async (menuItem, parameters) => {\n    const { currentComponent } = this.state;\n\n    // Prevent infinite recursion when menuItem is null by making sure that the menuItem is\n    // changing before changing anything else; especially the state\n    if (currentComponent) {\n      // Emit an unload event so that the component can unload any data, etc...\n      currentComponent.emitUnload();\n    }\n\n    // Note: menuItem can be null if there is no content on the landing page\n    const content = menuItem && menuItem.content;\n\n    if (content) {\n      const { location, component } = this.props;\n      const menu = component.get('menu');\n      globals.set({\n        route: menu.toRoute({\n          parameters,\n          queryString: location.search.substr(1),\n          hash: location.hash.substr(1),\n        }),\n      });\n\n      const parentItem = menu.getParent(menuItem.path);\n      if (\n        this.requireAccess(menuItem.roles) &&\n        (!parentItem || this.requireAccess(parentItem.roles))\n      ) {\n        let producedContent = null;\n\n        if (content instanceof Action) {\n          // Execute the actions\n          producedContent = await content.run({ component: content });\n        } else {\n          producedContent = content;\n        }\n\n        // producedContent can be null if content is an action, which doesn't generate a\n        // component. And, producedContent can also be something other than a Component if content\n        // is an action that returns a non-component\n        if (producedContent && producedContent instanceof ComponentMSON) {\n          // TODO: we are mutating the menuItem object directory. Would it be better to promote\n          // the MenuItem to a component and set the producedContent there?\n          menuItem.producedContent = producedContent;\n\n          const newComponent = producedContent;\n\n          // Emit a load event so that the component can load any initial data, etc...\n          newComponent.emitLoad();\n\n          const { canArchive, canSearch } = this.canArchive(newComponent);\n\n          globals.set({ searchString: null });\n\n          // Set showArchived to false whenever we change the route\n          this.setState({\n            menuItem,\n            showArchived: false,\n            showArchivedToggle: canArchive,\n            searchStringInput: '',\n            showSearch: canSearch,\n            currentComponent: newComponent,\n          });\n        }\n      }\n    } else {\n      this.setState({ currentComponent: null });\n    }\n  };\n\n  onLocation = (location) => {\n    globals.set({\n      path: location.pathname,\n      pathHash: location.hash,\n      pathSearch: location.search,\n    });\n  };\n\n  componentDidUpdate(prevProps) {\n    const snackbarMessage = globals.get('snackbarMessage');\n    if (snackbarMessage) {\n      this.displaySnackbar(snackbarMessage);\n      globals.set({ snackbarMessage: null });\n    }\n\n    if (\n      this.props.redirectPath &&\n      this.props.redirectPath !== prevProps.redirectPath\n    ) {\n      this.redirect(this.props.redirectPath);\n    }\n\n    if (\n      this.props.path !== prevProps.path ||\n      this.props.pathHash !== prevProps.pathHash ||\n      this.props.pathSearch !== prevProps.pathSearch\n    ) {\n      this.navigateTo(this.props.path);\n    }\n\n    if (this.props.confirmation !== prevProps.confirmation) {\n      // Show the popup if any of the confirmation info has changed\n      this.setState({ confirmationOpen: true });\n    }\n\n    if (this.props.searchString !== prevProps.searchString) {\n      // Pass search string down to current component\n      const menuItem = this.state.menuItem;\n      if (menuItem && menuItem.producedContent.has('searchString')) {\n        menuItem.producedContent.set({\n          searchString: this.props.searchString,\n        });\n      }\n    }\n  }\n\n  componentDidMount() {\n    // Allows us to listen to back and forward button clicks\n    this.unlisten = this.props.history.listen(this.onLocation);\n\n    if (registrar.client) {\n      // Wait for the session to load before loading the initial component so that we can do things\n      // like route based on a user's role\n      registrar.client.user.awaitSession();\n    }\n\n    // Load the correct component based on the initial path\n    this.onLocation(this.props.location);\n\n    // TODO: is this too inefficient in that it cascades a lot of unecessary events? Instead, could:\n    // 1. move more logic to app layer so that only cascade when need new window 2. use something\n    // like a global scroll listener that the component can use when it is active\n    window.addEventListener('scroll', (e) => {\n      const { menuItem } = this.state;\n      if (menuItem) {\n        menuItem.producedContent.emit('scroll', e);\n      }\n    });\n\n    // Handle immediate redirects, e.g. if user is not logged in\n    if (this.props.redirectPath) {\n      this.redirect(this.props.redirectPath);\n    }\n  }\n\n  componentWillUnmount() {\n    this.unlisten();\n  }\n\n  displaySnackbar(message) {\n    this.setState({ snackbarOpen: true, snackbarMessage: message });\n  }\n\n  handleSnackbarClose = () => {\n    this.setState({ snackbarOpen: false });\n  };\n\n  handleArchivedChange = (event) => {\n    this.setState({ showArchived: event.target.checked });\n\n    const { menuItem } = this.state;\n\n    if (menuItem) {\n      menuItem.producedContent.set({ showArchived: event.target.checked });\n\n      // Scroll to the top of the page as otherwise it is confusing to the user as to why they are\n      // dumped in some random place within the newly queried data.\n      window.scrollTo({\n        top: 0,\n      });\n    }\n  };\n\n  handleSearchStringInputChange = (searchStringInput) => {\n    this.setState({\n      searchStringInput,\n    });\n  };\n\n  handleSearch = (searchStringInput) => {\n    this.setState(\n      {\n        searchStringInput,\n      },\n      () => {\n        globals.set({\n          searchString: searchStringInput ? searchStringInput : null,\n        });\n      }\n    );\n  };\n\n  archivedToggle() {\n    const { showArchived, showArchivedToggle } = this.state;\n\n    // A component must not switch from controlled to uncontrolled so we need to avoid setting\n    // checked=undefined\n    const showArchivedChecked = showArchived ? true : false;\n\n    let archivedToggle = null;\n    if (showArchivedToggle) {\n      archivedToggle = (\n        <Tooltip title={showArchived ? 'Show Active' : 'Show Deleted'}>\n          <MUISwitch\n            onChange={this.handleArchivedChange}\n            checked={showArchivedChecked}\n          />\n        </Tooltip>\n      );\n    }\n\n    return archivedToggle;\n  }\n\n  searchBox(fullWidth) {\n    const { classes } = this.props;\n    const { searchStringInput, showSearch } = this.state;\n\n    let searchBox = null;\n    if (showSearch) {\n      searchBox = (\n        <SearchBar\n          fullWidth={fullWidth}\n          className={classes.alignRight}\n          searchString={searchStringInput}\n          onChange={this.handleSearchStringInputChange}\n          onSearch={this.handleSearch}\n        />\n      );\n    }\n    return searchBox;\n  }\n\n  toggleShowSearch = () => {\n    this.setState({ showSearchOnMobile: !this.state.showSearchOnMobile });\n  };\n\n  menuButton() {\n    const { classes } = this.props;\n    const responsive = this.isResponsive();\n    return (\n      <IconButton\n        color=\"inherit\"\n        aria-label=\"open drawer\"\n        onClick={this.handleDrawerToggle}\n        className={responsive ? classes.navIconHide : ''}\n      >\n        <Icon icon=\"Menu\" />\n      </IconButton>\n    );\n  }\n\n  title() {\n    const { menuItem } = this.state;\n    return (\n      <Typography variant=\"h6\" color=\"inherit\" noWrap>\n        {menuItem ? menuItem.label : ''}\n      </Typography>\n    );\n  }\n\n  appBar() {\n    const { classes, width } = this.props;\n    const { showSearchOnMobile } = this.state;\n\n    const onMobile = isWidthDown('sm', width);\n    const responsive = this.isResponsive();\n\n    let bar = null;\n\n    if (onMobile) {\n      if (showSearchOnMobile) {\n        bar = (\n          <React.Fragment>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"close search\"\n              onClick={this.toggleShowSearch}\n            >\n              <Icon icon=\"ArrowBack\" />\n            </IconButton>\n            {this.searchBox(true)}\n          </React.Fragment>\n        );\n      } else {\n        bar = (\n          <React.Fragment>\n            {this.menuButton()}\n            {this.title()}\n            {this.archivedToggle()}\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"toggle search\"\n              onClick={this.toggleShowSearch}\n              className={classes.alignRight}\n            >\n              <Icon icon=\"Search\" />\n            </IconButton>\n          </React.Fragment>\n        );\n      }\n    } else {\n      bar = (\n        <React.Fragment>\n          {this.menuButton()}\n          {this.title()}\n          {this.archivedToggle()}\n          {this.searchBox()}\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <AppBar\n        elevation={1} // tone down the elevation\n        className={\n          classes.appBar + (responsive ? ` ${classes.appBarResponsive}` : '')\n        }\n      >\n        <Toolbar>{bar}</Toolbar>\n      </AppBar>\n    );\n  }\n\n  isResponsive() {\n    return !this.props.menuAlwaysTemporary;\n  }\n\n  render() {\n    const { classes, component, confirmation } = this.props;\n    const {\n      mobileOpen,\n      menuItem,\n      snackbarOpen,\n      snackbarMessage,\n      confirmationOpen,\n      currentComponent,\n    } = this.state;\n\n    const responsive = this.isResponsive();\n\n    const menu = component.get('menu');\n\n    // Use the path from the location prop as this.state.path may not be up to date\n    const path = this.props.location.pathname;\n\n    const comp = currentComponent ? (\n      <Component component={currentComponent} />\n    ) : null;\n\n    const appBar = this.appBar();\n\n    const menuSidebar = (\n      <Menu\n        component={menu}\n        onDrawerToggle={this.handleDrawerToggle}\n        mobileOpen={mobileOpen}\n        onNavigate={this.handleNavigate}\n        path={path}\n        responsive={responsive}\n      />\n    );\n\n    let fullScreenStyle = null;\n    if (menuItem && menuItem.fullScreen) {\n      fullScreenStyle = {\n        marginLeft: 0,\n        marginTop: 0,\n      };\n    }\n\n    return (\n      <div className={classes.root}>\n        <div className={classes.appFrame}>\n          {menuItem && menuItem.fullScreen ? null : appBar}\n          {menuItem && menuItem.fullScreen ? null : menuSidebar}\n          <main\n            className={\n              classes.content +\n              (responsive ? ` ${classes.contentResponsive}` : '')\n            }\n            style={fullScreenStyle}\n          >\n            <Switch>\n              {/* Omitting path so that all paths are matched */}\n              <Route />\n            </Switch>\n\n            {comp}\n\n            <Snackbar\n              open={snackbarOpen}\n              message={snackbarMessage}\n              onClose={this.handleSnackbarClose}\n            />\n            <ConfirmationDialog\n              open={confirmationOpen}\n              onClose={this.handleConfirmationClose}\n              title={confirmation ? confirmation.title : null}\n              text={confirmation ? confirmation.text : null}\n              alert={confirmation ? confirmation.alert : null}\n            />\n          </main>\n        </div>\n      </div>\n    );\n  }\n}\n\nApp = withStyles(styles, { withTheme: true })(App);\nApp = withWidth()(App);\nApp = withRouter(App);\nApp = attach(['menuAlwaysTemporary'])(App);\nApp = attach(\n  [\n    'path',\n    'pathHash',\n    'pathSearch',\n    'redirectPath',\n    'snackbarMessage',\n    'confirmation',\n    'searchString',\n  ],\n  globals\n)(App);\nexport default App;\n","import React from 'react';\nimport AppUI from './app';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme';\nimport blueGrey from '@material-ui/core/colors/blueGrey';\nimport lightBlue from '@material-ui/core/colors/lightBlue';\nimport { BrowserRouter, Prompt } from 'react-router-dom';\nimport globals from 'mson/lib/globals';\nimport attach from './attach';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: blueGrey,\n    // primary: blue,\n    // type: 'dark',\n    // secondary: cyan\n    secondary: lightBlue,\n  },\n\n  // TODO: remove after next major Material-UI release\n  // (https://material-ui.com/style/typography/#migration-to-typography-v2)\n  typography: {\n    useNextVariants: true,\n  },\n\n  // shadows: ['none']\n});\n\n// Note: BrowserRouter needs to be outside of App so that we can use withRouter\nclass AppContainer extends React.Component {\n  onNavigate = (message, callback) => {\n    globals.onNavigate(message, callback);\n  };\n\n  render() {\n    const { component, basename } = this.props;\n    return (\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        <BrowserRouter\n          getUserConfirmation={this.onNavigate}\n          basename={basename}\n        >\n          {/* Wrapping div required by BrowserRouter */}\n          <div>\n            <AppUI component={component} />\n\n            {/* A Prompt is needed to capture back/forward button events with ReactRouter. message\n            is required, but the value is arbitrary */}\n            <Prompt message=\"foo\" />\n          </div>\n        </BrowserRouter>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default attach(['basename'])(AppContainer);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AppContainer from './app-container';\nimport registrar from 'mson/lib/compiler/registrar';\nimport registerServiceWorker from './register-service-worker';\n\nexport default async (app) => {\n  // Was the client registered?\n  if (registrar.client) {\n    // Make sure we load the session before doing any rendering so that components can do their\n    // initial rendering based on the user's authentication status\n    await registrar.client.user.awaitSession();\n  }\n\n  ReactDOM.render(\n    <AppContainer component={app} />,\n    document.getElementById('root')\n  );\n  registerServiceWorker();\n};\n","export default {\n  name: 'app.App',\n  component: 'App',\n  // menuAlwaysTemporary: true,\n  basename: '/mson-react', // Root of site is https://redgeoff.github.io/mson-react\n  menu: {\n    component: 'Menu',\n    items: [\n      {\n        path: '/',\n        label: 'Home',\n        content: {\n          component: 'app.Home',\n        },\n      },\n      {\n        path: '/fields',\n        label: 'Fields',\n        content: {\n          component: 'app.FieldsScreen',\n        },\n      },\n      {\n        path: '/contacts',\n        label: 'Contacts',\n        items: [\n          {\n            path: '/contacts',\n            label: 'Contacts LocalStorage',\n            content: {\n              component: 'app.ContactsLocalStorage',\n            },\n          },\n          {\n            path: '/contacts-firebase',\n            label: 'Contacts Firebase',\n            content: {\n              component: 'app.ContactsFirebase',\n            },\n          },\n        ],\n      },\n      {\n        path: '/tasks',\n        label: 'Tasks',\n        items: [\n          {\n            path: '/tasks',\n            label: 'Tasks LocalStorage',\n            content: {\n              component: 'app.TasksLocalStorage',\n            },\n          },\n          {\n            path: '/tasks-firebase',\n            label: 'Tasks Firebase',\n            content: {\n              component: 'app.TasksFirebase',\n            },\n          },\n        ],\n      },\n      {\n        path: '/form-builder',\n        label: 'Form Builder',\n        content: {\n          component: 'app.FormBuilder',\n        },\n      },\n      {\n        path: '/contact/edit',\n        label: 'Edit Contact',\n        content: {\n          component: 'app.EditContact',\n        },\n      },\n      {\n        path: '/contact-no-mson',\n        label: 'Contact No MSON',\n        content: {\n          component: 'app.ContactNoMSON',\n        },\n      },\n      {\n        path: '/grid',\n        label: 'Grid',\n        content: {\n          component: 'app.Grid',\n        },\n      },\n      {\n        path: '/router',\n        label: 'Router',\n        items: [\n          {\n            path: '/router/redirect',\n            label: 'Redirect',\n            content: {\n              component: 'Action',\n              actions: [\n                {\n                  component: 'Redirect',\n                  path:\n                    '/router/person/p123/message/m456?first=Trevor&last=Noah#hash123',\n                },\n              ],\n            },\n          },\n          {\n            path: '/router/generate-component',\n            label: 'Generate Component',\n            content: {\n              component: 'app.GenerateComponent',\n            },\n          },\n        ],\n      },\n      {\n        path: '/router/person/:personId/message/:messageId',\n        label: 'Router',\n        content: {\n          component: 'app.Router',\n        },\n        hidden: true, // Register route, but don't expose it in the menu\n      },\n    ],\n  },\n};\n","import Form from 'mson/lib/form';\nimport { TextField, EmailField, ButtonField } from 'mson/lib/fields';\nimport compiler from 'mson/lib/compiler';\nimport globals from 'mson/lib/globals';\n\n// Note: you can also use the following instead of the import above\n// const Form = compiler.getCompiledComponent('Form');\n\nclass ContactNoMSON extends Form {\n  _create(props) {\n    super._create(props);\n\n    this.set({\n      fields: [\n        new TextField({\n          name: 'firstName',\n          label: 'First Name',\n          required: true,\n          block: false,\n        }),\n        new TextField({ name: 'lastName', label: 'Last Name', required: true }),\n        new EmailField({ name: 'email', label: 'Email' }),\n        new ButtonField({\n          name: 'import',\n          label: 'Import',\n          icon: 'ImportContacts',\n        }),\n        new ButtonField({\n          name: 'submit',\n          label: 'Submit',\n          type: 'submit',\n          icon: 'Save',\n        }),\n        new ButtonField({ name: 'cancel', label: 'Cancel', icon: 'Cancel' }),\n      ],\n    });\n\n    this.on('import', () => {\n      this.setValues({\n        firstName: 'Prince',\n        lastName: 'Nelson',\n        email: 'prince@example.com',\n      });\n    });\n\n    this.on('submit', () => {\n      // TODO: do something like contact an API\n\n      const values = this.getValues();\n      console.log('submitting', values);\n\n      globals.displaySnackbar(\n        `Submitted ${values.firstName} ${values.lastName}`\n      );\n\n      // Clear the values, in case we return to the Contact form later\n      this.reset();\n    });\n\n    this.on('cancel', () => {\n      // Redirect home\n      globals.redirect('/');\n    });\n  }\n}\n\ncompiler.registerComponent('app.ContactNoMSON', ContactNoMSON);\n","export default {\n  name: 'app.Contacts',\n  component: 'Form',\n  schema: {\n    component: 'Form',\n    fields: [\n      {\n        name: 'store',\n        component: 'Field',\n      },\n    ],\n  },\n  fields: [\n    {\n      component: 'CollectionField',\n      name: 'contacts',\n      label: 'Contacts',\n      hideLabel: true,\n      // forbidCreate: true,\n      // forbidUpdate: true,\n      // forbidDelete: true,\n      // forbidViewArchived: true,\n      // forbidSearch: true,\n      // forbidSort: true,\n      formFactory: {\n        component: 'Factory',\n        product: {\n          component: 'Form',\n          fields: [\n            {\n              name: 'firstName',\n              component: 'TextField',\n              label: 'First Name',\n              required: true,\n              block: false,\n            },\n            {\n              name: 'lastName',\n              component: 'TextField',\n              label: 'Last Name',\n            },\n            {\n              name: 'email',\n              component: 'EmailField',\n              label: 'Email',\n            },\n          ],\n        },\n      },\n      store: '{{store}}',\n    },\n  ],\n};\n","export default {\n  name: 'app.ContactsLocalStorage',\n  component: 'app.Contacts',\n  store: {\n    component: 'LocalStorageStore',\n    storeName: 'contactsLocalStorage',\n  },\n};\n","export default {\n  name: 'app.ContactsFirebase',\n  component: 'app.Contacts',\n  store: {\n    component: 'FirebaseStore',\n    apiKey: 'AIzaSyCJfqjdBBrXtwkXla6uMX3LZGOLDAgTEx0',\n    authDomain: 'mson-contacts.firebaseapp.com',\n    projectId: 'mson-contacts',\n    collection: 'contacts',\n  },\n};\n","export default {\n  name: 'app.EditContact',\n  component: 'RecordEditor',\n  baseForm: {\n    component: 'Form',\n    fields: [\n      {\n        name: 'firstName',\n        component: 'TextField',\n        label: 'First Name',\n        required: true,\n        block: false,\n      },\n      {\n        name: 'lastName',\n        component: 'TextField',\n        label: 'Last Name',\n      },\n      {\n        name: 'email',\n        component: 'EmailField',\n        label: 'Email',\n      },\n    ],\n    listeners: [\n      {\n        event: 'load',\n        actions: [\n          {\n            // Default the id to '1' so that we can edit the doc later. Usually, this id would come\n            // from the route or the user's session\n            component: 'Set',\n            name: 'fields.id.value',\n            value: '1',\n          },\n        ],\n      },\n    ],\n  },\n  label: 'Contact',\n  store: {\n    component: 'LocalStorageStore',\n    storeName: 'contactLocalStorage',\n  },\n  storeWhere: {\n    id: '1',\n  },\n};\n","export default {\n  name: 'app.FieldsScreen',\n  component: 'app.Fields',\n  fields: [\n    {\n      name: 'import',\n      component: 'ButtonField',\n      label: 'Import',\n      icon: 'ImportContacts',\n    },\n    {\n      name: 'reset',\n      component: 'ButtonField',\n      label: 'Reset',\n      icon: 'ClearAll',\n    },\n    {\n      name: 'toggleDisplayValues',\n      component: 'ButtonField',\n      label: 'Show Display Values',\n      icon: 'ViewHeadline',\n    },\n    {\n      name: 'toggleEditable',\n      component: 'ButtonField',\n      label: 'Immutable',\n      icon: 'NotInterested',\n    },\n    {\n      name: 'toggleDisabled',\n      component: 'ButtonField',\n      label: 'Disable',\n      icon: 'Lock',\n    },\n    {\n      name: 'toggleFullWidth',\n      component: 'ButtonField',\n      label: 'Full Width',\n      icon: 'FormatAlignJustify',\n    },\n    {\n      name: 'log',\n      component: 'ButtonField',\n      label: 'Log Values',\n      icon: 'MoveToInbox',\n    },\n  ],\n  listeners: [\n    {\n      event: 'import',\n      actions: [\n        {\n          component: 'Set',\n          name: 'component',\n          value: {\n            'fields.addressField.value': {\n              addressLine1: '121 Pike Street',\n              addressLine2: 'Suite 201',\n              city: 'Seatte',\n              stateProvince: 'WA',\n              postalCode: '98107',\n              country: 'US',\n            },\n            'fields.booleanField.value': true,\n            'fields.chainedSelectField.value': [2, 5, 9, 10],\n            'fields.chainedSelectListField.value': [\n              [1, 3, 7],\n              [2, 5, 9, 10],\n            ],\n            'fields.cityField.value': 'Seattle',\n            'fields.collectionField.value': [\n              {\n                id: 'daenerys',\n                firstName: 'Daenerys',\n                lastName: 'Targaryen',\n              },\n              {\n                id: 'jon',\n                firstName: 'Jon',\n                lastName: 'Snow',\n              },\n              {\n                id: 'tyrion',\n                firstName: 'Tyrion',\n                lastName: 'Lannister',\n              },\n            ],\n            'fields.countryField.value': 'US',\n            'fields.dateField.value': '2018-09-27T17:24:24.960Z',\n            'fields.emailField.value': 'test@example.com',\n            'fields.formField.value': {\n              github: 'github.com/redgeoff',\n              medium: 'medium.com/@redgeoff',\n              twitter: 'twitter.com/redgeoff7',\n            },\n            // 'fields.github.value': 'github.com/redgeoff',\n            // 'fields.medium.value': 'medium.com/@redgeoff',\n            // 'fields.twitter.value': 'twitter.com/redgeoff7',\n            'fields.idField.value': 'id-123',\n            'fields.integerField.value': 123,\n            'fields.listFieldEmail.value': [\n              'test1@example.com',\n              'test2@example.com',\n            ],\n            'fields.listFieldName.value': [\n              { firstName: 'Ella', lastName: 'Fitzgerald' },\n              { firstName: 'Ray', lastName: 'Charles' },\n            ],\n            'fields.moneyField.value': 1000000.11,\n            'fields.numberField.value': 123.4,\n            'fields.passwordField.value': 'password123',\n            'fields.personFullNameField.value': {\n              firstName: 'Daenerys',\n              lastName: 'Targaryen',\n            },\n            'fields.personNameField.value': 'Daenerys',\n            'fields.phoneField.value': '6461234567',\n            'fields.postalCodeField.value': '98107',\n            'fields.provinceField.value': 'British Columbia',\n            'fields.selectField.value': 'red',\n            'fields.selectFieldMult.value': ['red', 'blue'],\n            'fields.selectListField.value': ['red', 'green'],\n            'fields.stateField.value': 'WA',\n            'fields.timeField.value': '2018-09-27T17:24:24.960Z',\n            'fields.textField.value': 'Go MSON',\n            'fields.textListField.value': ['MSON', 'React', 'Material-UI'],\n            'fields.urlField.value': 'mson.co',\n          },\n        },\n      ],\n    },\n    {\n      event: 'reset',\n      actions: [\n        {\n          component: 'Set',\n          name: 'reset',\n          value: true,\n        },\n      ],\n    },\n    {\n      event: 'toggleDisplayValues',\n      actions: [\n        {\n          component: 'Action',\n          if: {\n            'fields.id.useDisplayValue': {\n              $ne: true,\n            },\n          },\n          actions: [\n            {\n              component: 'Set',\n              name: 'component',\n              value: {\n                eachField: {\n                  useDisplayValue: true,\n                },\n                'fields.toggleDisplayValues': {\n                  label: 'Hide Display Values',\n                  icon: 'Input',\n                },\n              },\n            },\n          ],\n          else: [\n            {\n              component: 'Set',\n              name: 'component',\n              value: {\n                eachField: {\n                  useDisplayValue: false,\n                },\n                'fields.toggleDisplayValues': {\n                  label: 'Show Display Values',\n                  icon: 'ViewHeadline',\n                },\n              },\n            },\n          ],\n        },\n      ],\n    },\n    {\n      event: 'toggleEditable',\n      actions: [\n        {\n          component: 'Action',\n          if: {\n            'fields.id.editable': {\n              $ne: true,\n            },\n          },\n          actions: [\n            {\n              component: 'Set',\n              name: 'component',\n              value: {\n                editable: true,\n                'fields.toggleEditable': {\n                  label: 'Immutable',\n                  icon: 'NotInterested',\n                },\n              },\n            },\n          ],\n          else: [\n            {\n              component: 'Set',\n              name: 'component',\n              value: {\n                editable: false,\n                'fields.toggleEditable': {\n                  label: 'Editable',\n                  icon: 'Edit',\n                },\n              },\n            },\n          ],\n        },\n      ],\n    },\n    {\n      event: 'toggleDisabled',\n      actions: [\n        {\n          component: 'Action',\n          if: {\n            'fields.id.disabled': {\n              $ne: true,\n            },\n          },\n          actions: [\n            {\n              component: 'Set',\n              name: 'component',\n              value: {\n                disabled: true,\n                'fields.toggleDisabled': {\n                  label: 'Enable',\n                  icon: 'LockOpen',\n                },\n              },\n            },\n            {\n              // Renable so we can still click the button\n              component: 'Set',\n              name: 'fields.toggleDisabled.disabled',\n              value: false,\n            },\n          ],\n          else: [\n            {\n              component: 'Set',\n              name: 'component',\n              value: {\n                disabled: false,\n                'fields.toggleDisabled': {\n                  label: 'Disable',\n                  icon: 'Lock',\n                },\n              },\n            },\n          ],\n        },\n      ],\n    },\n    {\n      event: 'toggleFullWidth',\n      actions: [\n        {\n          component: 'Action',\n          if: {\n            'fields.id.fullWidth': {\n              $ne: true,\n            },\n          },\n          actions: [\n            {\n              component: 'Set',\n              name: 'component',\n              value: {\n                fullWidth: true,\n                'fields.toggleFullWidth': {\n                  label: 'Flex Width',\n                  icon: 'FormatAlignLeft',\n                },\n              },\n            },\n          ],\n          else: [\n            {\n              component: 'Set',\n              name: 'component',\n              value: {\n                fullWidth: false,\n                'fields.toggleFullWidth': {\n                  label: 'Full Width',\n                  icon: 'FormatAlignLeft',\n                },\n              },\n            },\n          ],\n        },\n      ],\n    },\n    {\n      event: 'log',\n      actions: [\n        {\n          component: 'ConsoleLog',\n          message: '{{value}}',\n        },\n      ],\n    },\n  ],\n};\n","const chainedSelectOptions = [\n  { value: 1, parentValue: null, label: 'Germany' },\n  { value: 2, parentValue: null, label: 'USA' },\n\n  { value: 3, parentValue: 1, label: 'BMW' },\n  { value: 4, parentValue: 1, label: 'Mercedes' },\n\n  { value: 5, parentValue: 2, label: 'Tesla' },\n\n  { value: 6, parentValue: 3, label: 'i3' },\n  { value: 7, parentValue: 3, label: 'i8' },\n  { value: 8, parentValue: 4, label: 'S-Class' },\n\n  { value: 9, parentValue: 5, label: 'Model S' },\n\n  { value: 10, parentValue: 9, label: 'Red' },\n  { value: 11, parentValue: 9, label: 'Blue' },\n];\n\nexport default {\n  name: 'app.Fields',\n  component: 'Form',\n  fields: [\n    {\n      component: 'AddressField',\n      name: 'addressField',\n      label: 'AddressField',\n      help: 'Example help',\n      required: true,\n      elevate: false,\n    },\n\n    {\n      component: 'BooleanField',\n      name: 'booleanField',\n      label: 'BooleanField',\n      help: 'Example help',\n    },\n\n    {\n      name: 'buttonField',\n      component: 'ButtonField',\n      label: 'ButtonField',\n      icon: 'Save',\n      type: 'submit',\n      block: true,\n    },\n\n    {\n      component: 'ChainedSelectField',\n      name: 'chainedSelectField',\n      label: 'ChainedSel',\n      help: 'Example help',\n      required: true,\n      blankString: 'None',\n      // multiline: true,\n      // fullWidth: true,\n      options: chainedSelectOptions,\n    },\n\n    {\n      component: 'ChainedSelectListField',\n      name: 'chainedSelectListField',\n      label: 'ChainSelList',\n      help: 'Example help',\n      required: true,\n      blankString: 'None',\n      // multiline: true,\n      // fullWidth: true,\n      options: chainedSelectOptions,\n    },\n\n    {\n      name: 'cityField',\n      component: 'CityField',\n      label: 'CityField',\n      help: 'Example help',\n      required: true,\n    },\n\n    {\n      component: 'CollectionField',\n      name: 'collectionField',\n      label: 'Records',\n      help: 'Example help',\n      required: true,\n      // maxColumns: 1,\n      formFactory: {\n        component: 'Factory',\n        product: {\n          component: 'Form',\n          fields: [\n            {\n              name: 'firstName',\n              component: 'TextField',\n              label: 'First Name',\n              required: true,\n            },\n            {\n              name: 'lastName',\n              component: 'TextField',\n              label: 'Last Name',\n            },\n          ],\n        },\n      },\n    },\n\n    {\n      name: 'countryField',\n      component: 'CountryField',\n      label: 'CountryField',\n      help: 'Example help',\n      blankString: 'None',\n      required: true,\n    },\n\n    {\n      name: 'dateField',\n      component: 'DateField',\n      label: 'DateField',\n      help: 'Example help',\n      // includeTime: true,\n      minDate: '2018-01-01T23:07:28.157Z',\n      maxDate: '2022-01-01T23:07:28.157Z',\n      required: true,\n    },\n\n    {\n      component: 'EmailField',\n      name: 'emailField',\n      label: 'Email',\n      help: 'Example help',\n      required: true,\n    },\n\n    {\n      component: 'FormField',\n      name: 'formField',\n      label: 'FormField',\n      help: 'Example help',\n      required: true,\n      // elevate: true,\n      form: {\n        component: 'Form',\n        fields: [\n          {\n            name: 'github',\n            component: 'URLField',\n            block: false,\n            label: 'GitHub',\n          },\n          {\n            name: 'medium',\n            component: 'URLField',\n            label: 'Medium',\n          },\n          {\n            name: 'twitter',\n            component: 'URLField',\n            label: 'Twitter',\n          },\n        ],\n      },\n    },\n\n    {\n      name: 'idField',\n      component: 'IdField',\n      label: 'IdField',\n      help: 'Example help',\n      required: true,\n    },\n\n    {\n      name: 'integerField',\n      component: 'IntegerField',\n      label: 'IntegerField',\n      help: 'Example help',\n      required: true,\n    },\n\n    {\n      component: 'ListField',\n      name: 'listFieldEmail',\n      label: 'ListField Email',\n      singularLabel: 'Email',\n      help: 'Example help',\n      required: true,\n      fieldFactory: {\n        component: 'Factory',\n        product: {\n          component: 'EmailField',\n        },\n      },\n    },\n\n    {\n      component: 'ListField',\n      name: 'listFieldName',\n      label: 'ListField Name',\n      singularLabel: 'Name',\n      help: 'Example help',\n      required: true,\n      fieldFactory: {\n        component: 'Factory',\n        product: {\n          component: 'PersonFullNameField',\n        },\n      },\n    },\n\n    {\n      name: 'moneyField',\n      component: 'MoneyField',\n      label: 'MoneyField',\n      help: 'Example help',\n      // prefix: '€',\n      // decimalSymbol: ',',\n      // thousandsSeparatorSymbol: '.',\n      required: true,\n    },\n\n    {\n      name: 'numberField',\n      component: 'NumberField',\n      label: 'NumberField',\n      help: 'Example help',\n      // includeThousandsSeparator: true,\n      required: true,\n    },\n\n    {\n      name: 'passwordField',\n      component: 'PasswordField',\n      label: 'PasswordField',\n      help: 'Example help',\n      required: true,\n    },\n\n    {\n      name: 'personFullNameField',\n      component: 'PersonFullNameField',\n      label: 'PersonFullNameField',\n      help: 'Example help',\n      required: true,\n    },\n\n    {\n      name: 'personNameField',\n      component: 'PersonNameField',\n      label: 'PersonNameField',\n      help: 'Example help',\n      required: true,\n    },\n\n    {\n      name: 'phoneField',\n      component: 'PhoneField',\n      label: 'PhoneField',\n      help: 'Example help',\n      // defaultMask: '.... ......',\n      required: true,\n    },\n\n    {\n      name: 'postalCodeField',\n      component: 'PostalCodeField',\n      label: 'PostalCodeField',\n      help: 'Example help',\n      required: true,\n    },\n\n    {\n      name: 'provinceField',\n      component: 'ProvinceField',\n      label: 'ProvinceField',\n      help: 'Example help',\n      required: true,\n    },\n\n    {\n      component: 'ReCAPTCHAField',\n    },\n\n    {\n      name: 'selectField',\n      component: 'SelectField',\n      label: 'SelectField',\n      help: 'Example help',\n      required: true,\n      blankString: 'None',\n      options: [\n        { value: 'red', label: 'Red' },\n        { value: 'green', label: 'Green' },\n        { value: 'blue', label: 'Blue' },\n      ],\n    },\n\n    {\n      name: 'selectFieldMult',\n      component: 'SelectField',\n      label: 'SelFld (mult)',\n      help: 'Example help',\n      required: true,\n      multiple: true,\n      blankString: 'None',\n      // autocomplete: false,\n      options: [\n        { value: 'red', label: 'Red' },\n        { value: 'green', label: 'Green' },\n        { value: 'blue', label: 'Blue' },\n      ],\n    },\n\n    {\n      name: 'selectListField',\n      component: 'SelectListField',\n      label: 'SelListField',\n      help: 'Example help',\n      required: true,\n      blankString: 'None', // Provide a way for the user to delete the entry\n      options: [\n        { value: 'red', label: 'Red' },\n        { value: 'green', label: 'Green' },\n        { value: 'blue', label: 'Blue' },\n      ],\n    },\n\n    {\n      name: 'stateField',\n      component: 'StateField',\n      label: 'StateField',\n      help: 'Example help',\n      blankString: 'None',\n      required: true,\n    },\n\n    {\n      name: 'text',\n      component: 'Text',\n      text:\n        '# Text\\nCan contain any [markdown](https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet)',\n    },\n\n    {\n      name: 'timeField',\n      component: 'TimeField',\n      label: 'TimeField',\n      help: 'Example help',\n      // showSeconds: true,\n      required: true,\n    },\n\n    {\n      name: 'textField',\n      component: 'TextField',\n      label: 'TextField',\n      help: 'Example help',\n      // mask: ['(', '/[1-9]/', '/\\\\d/', '/\\\\d/', ')'],\n      // mask: '(...)',\n      required: true,\n    },\n\n    {\n      name: 'textListField',\n      component: 'TextListField',\n      label: 'TextListField',\n      help: 'Example help',\n      singularLabel: 'Text Item',\n      required: true,\n    },\n\n    {\n      name: 'urlField',\n      component: 'URLField',\n      label: 'URLField',\n      help: 'Example help',\n      // newWindow: true,\n      required: true,\n    },\n  ],\n};\n","export default {\n  name: 'app.FormBuilder',\n  component: 'FormBuilder',\n  'fields.form.form.fields.fields.store': {\n    component: 'LocalStorageStore',\n    storeName: 'myForm',\n  },\n};\n","// Dynamically generate a field based on a query parameter\nexport default {\n  name: 'app.GenerateComponent',\n  component: 'Action',\n  schema: {\n    component: 'Form',\n    fields: [\n      {\n        name: 'componentType',\n        component: 'TextField',\n        // value: 'CountryField' // TODO: allow for defaulting here\n      },\n    ],\n  },\n  actions: [\n    {\n      component: 'Action',\n      if: {\n        'globals.route.query.type': null,\n      },\n      actions: [\n        {\n          component: 'Set',\n          name: 'componentType',\n          value: 'CountryField',\n        },\n      ],\n      else: [\n        {\n          component: 'Set',\n          name: 'componentType',\n          value: '{{globals.route.query.type}}',\n        },\n      ],\n    },\n    {\n      component: 'GenerateComponent',\n      definition: JSON.stringify({\n        component: 'Form',\n        fields: [\n          {\n            name: 'type',\n            component: 'SelectField',\n            label: 'Field Type',\n            options: [\n              { value: 'TextField', label: 'TextField' },\n              { value: 'PersonFullNameField', label: 'PersonFullNameField' },\n              { value: 'CountryField', label: 'CountryField' },\n            ],\n            value: '{{componentType}}',\n            autocomplete: false,\n          },\n          {\n            name: 'generatedField',\n            component: '{{componentType}}',\n            label: 'Generated Field',\n          },\n        ],\n        listeners: [\n          {\n            event: 'fields.type.value',\n            actions: [\n              {\n                component: 'Redirect',\n                path: '/router/generate-component?type={{fields.type.value}}',\n              },\n            ],\n          },\n        ],\n      }),\n    },\n  ],\n};\n","export default {\n  name: 'app.Grid',\n  component: 'Grid',\n  items: [\n    {\n      component: 'GridItem',\n      md: 6,\n      xs: 12,\n      content: {\n        component: 'Text',\n        text: '# A',\n      },\n    },\n    {\n      component: 'GridItem',\n      md: 6,\n      xs: 12,\n      content: {\n        component: 'Text',\n        text: '# B',\n      },\n    },\n    {\n      component: 'GridItem',\n      md: 6,\n      xs: 12,\n      content: {\n        component: 'Text',\n        text: '# C',\n      },\n    },\n    {\n      component: 'GridItem',\n      md: 6,\n      xs: 12,\n      content: {\n        component: 'Text',\n        text: '# D',\n      },\n    },\n    {\n      component: 'GridItem',\n      md: 6,\n      xs: 12,\n      content: {\n        name: 'toggleA',\n        component: 'ButtonField',\n        label: 'Toggle A',\n        listeners: [\n          {\n            event: 'click',\n            actions: [\n              {\n                component: 'Action',\n                if: {\n                  'parent.parent.items.0.hidden': true,\n                },\n                actions: [\n                  {\n                    component: 'Set',\n                    name: 'parent.parent.items.0.hidden',\n                    value: false,\n                  },\n                ],\n                else: [\n                  {\n                    component: 'Set',\n                    name: 'parent.parent.items.0.hidden',\n                    value: true,\n                  },\n                ],\n              },\n            ],\n          },\n        ],\n      },\n    },\n  ],\n};\n","export default {\n  name: 'app.Home',\n  component: 'Text',\n  text: '# Welcome\\nCheck out the examples on the left',\n};\n","export default {\n  name: 'app.Tasks',\n  component: 'Form',\n  schema: {\n    component: 'Form',\n    fields: [\n      {\n        name: 'store',\n        component: 'Field',\n      },\n    ],\n  },\n  fields: [\n    {\n      component: 'Text',\n      name: 'header',\n      text: '(drag to reorder)',\n    },\n    {\n      component: 'CollectionField',\n      name: 'tasks',\n      label: 'Tasks',\n      hideLabel: true,\n      // forbidCreate: true,\n      // forbidUpdate: true,\n      // forbidDelete: true,\n      // forbidViewArchived: true,\n      // forbidSearch: true,\n      // forbidSort: true,\n      forbidOrder: false,\n      formFactory: {\n        component: 'Factory',\n        product: {\n          component: 'Form',\n          fields: [\n            {\n              name: 'task',\n              component: 'TextField',\n              label: 'Task',\n              multiline: true,\n              required: true,\n            },\n            {\n              name: 'due',\n              component: 'DateField',\n              label: 'Due',\n            },\n          ],\n        },\n      },\n      store: '{{store}}',\n    },\n  ],\n};\n","export default {\n  name: 'app.TasksLocalStorage',\n  component: 'app.Tasks',\n  store: {\n    component: 'LocalStorageStore',\n    storeName: 'tasksLocalStorage',\n  },\n};\n","export default {\n  name: 'app.TasksFirebase',\n  component: 'app.Tasks',\n  store: {\n    component: 'FirebaseStore',\n    apiKey: 'AIzaSyCJfqjdBBrXtwkXla6uMX3LZGOLDAgTEx0',\n    authDomain: 'mson-contacts.firebaseapp.com',\n    projectId: 'mson-contacts',\n    collection: 'tasks',\n  },\n};\n","export default {\n  name: 'app.Router',\n  component: 'Form',\n  fields: [\n    {\n      component: 'TextField',\n      name: 'personId',\n      label: 'personId',\n      block: false,\n    },\n    {\n      component: 'TextField',\n      name: 'messageId',\n      label: 'messageId',\n    },\n    {\n      component: 'TextField',\n      name: 'first',\n      label: 'first',\n      block: false,\n    },\n    {\n      component: 'TextField',\n      name: 'last',\n      label: 'last',\n    },\n    {\n      component: 'TextField',\n      name: 'hash',\n      label: 'hash',\n    },\n    {\n      component: 'ButtonField',\n      name: 'submit',\n      label: 'Go',\n      type: 'submit',\n      icon: 'Send',\n    },\n  ],\n  listeners: [\n    {\n      event: 'load',\n      actions: [\n        {\n          component: 'Set',\n          name: 'value',\n          value: {\n            personId: '{{globals.route.parameters.personId}}',\n            messageId: '{{globals.route.parameters.messageId}}',\n            first: '{{globals.route.query.first}}',\n            last: '{{globals.route.query.last}}',\n            hash: '{{globals.route.hash}}',\n          },\n        },\n      ],\n    },\n    {\n      event: 'submit',\n      actions: [\n        {\n          component: 'Set',\n          name: 'pristine',\n          value: true,\n        },\n        {\n          component: 'Redirect',\n          path:\n            '/router/person/{{fields.personId.value}}/message/{{fields.messageId.value}}?first={{fields.first.value}}&last={{fields.last.value}}#{{fields.hash.value}}',\n        },\n      ],\n    },\n  ],\n};\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Form from './form';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Field from './fields/field';\nimport compiler from 'mson/lib/compiler';\nimport each from 'lodash/each';\nimport attach from './attach';\nimport ComponentField from 'mson/lib/fields/component-field';\n\nconst styles = (theme) => ({\n  form: {\n    overflowY: 'scroll',\n    maxHeight: 'calc(100vh - 390px)',\n    marginTop: theme.spacing(3),\n  },\n});\n\nclass FieldEditorForm extends React.PureComponent {\n  state = {\n    field: null,\n  };\n\n  handleValueChange = (value) => {\n    const form = this.props.component;\n    let { field } = this.state;\n    let component = null;\n\n    // Is the field changing?\n    if (!field || value.componentName !== field.getClassName()) {\n      if (field) {\n        // Prevent listener leak\n        field.destroy();\n      }\n\n      if (value.componentName) {\n        component = compiler.newComponent({\n          component: value.componentName,\n        });\n\n        // Is the component a field?\n        if (component.isField) {\n          field = component;\n        } else {\n          // e.g. Text component is not a field\n          field = new ComponentField({ content: component });\n        }\n\n        // Auto validate so that the user can preview how the validation will work\n        const validate = () => {\n          field.clearErr();\n          field.validate();\n        };\n        field.on('value', validate);\n        field.on('touched', validate);\n      } else {\n        field = null;\n      }\n    }\n\n    if (field) {\n      // Set field values using form values. The corresponding values may not exist if the field was\n      // just changed.\n      const values = form.getValues({ default: false });\n      component =\n        field.getClassName() === 'ComponentField'\n          ? field.get('content')\n          : field;\n      each(values, (value, name) => {\n        if (component.has(name)) {\n          component.set({ [name]: value });\n        }\n      });\n    }\n\n    this.setState({ field });\n  };\n\n  componentDidMount() {\n    // Note: we use a listener on value instead of attaching to value as a shallow compare of value\n    // would not trigger a state change.\n    this.props.component.on('value', this.handleValueChange);\n\n    // Initialize with the current value\n    this.handleValueChange(this.props.component.getValues());\n  }\n\n  componentWillUnmount() {\n    this.props.component.removeListener('value', this.handleValueChange);\n  }\n\n  render() {\n    const { component, classes, formTag, mode } = this.props;\n    const { field } = this.state;\n\n    let preview = null;\n    if (field && mode !== 'read') {\n      preview = (\n        <Card className={classes.card}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Preview\n            </Typography>\n            <Field component={field} />\n          </CardContent>\n        </Card>\n      );\n    }\n\n    if (mode !== 'read') {\n      return (\n        <React.Fragment>\n          <div className={classes.preview}>{preview}</div>\n          <div className={classes.form}>\n            <Form component={component} formTag={formTag} mode={mode} />\n          </div>\n        </React.Fragment>\n      );\n    } else if (field) {\n      // Disable so that the user can edit the field with a click\n      return <Field component={field} disabled={true} />;\n    } else {\n      return null;\n    }\n  }\n}\n\nFieldEditorForm = withStyles(styles)(FieldEditorForm);\nFieldEditorForm = attach(['mode'])(FieldEditorForm);\n\nexport default FieldEditorForm;\n","import React from 'react';\nimport Form from './form';\nimport Component from './component';\nimport attach from './attach';\n\nclass FormEditor extends React.Component {\n  render() {\n    const { editable, component } = this.props;\n    if (editable !== false) {\n      return <Form {...this.props} />;\n    } else {\n      // Note: we need to use a getter to generate the definition\n      const definition = component.get('definition');\n\n      // Needed as form tag cannot be a descendant of a form tag\n      const formTag = false;\n\n      return <Component definition={definition} formTag={formTag} />;\n    }\n  }\n}\n\nFormEditor = attach(['editable'])(FormEditor);\n\nexport default FormEditor;\n","import compiler from 'mson/lib/compiler';\nimport * as components from './components';\nimport globals from 'mson/lib/globals';\nimport uiComponents from '../components';\nimport FieldEditorForm from 'mson/lib/form/field-editor-form';\nimport FieldEditorFormUI from '../field-editor-form';\nimport FormEditor from 'mson/lib/form/form-editor';\nimport FormEditorUI from '../form-editor';\nimport FormBuilder from 'mson/lib/form/form-builder';\n\n// Set the site key when using the ReCAPTCHAField\nglobals.set({ reCAPTCHASiteKey: '6LdIbGMUAAAAAJnipR9t-SnWzCbn0ZX2myXBIauh' });\n\n// Register optional core components\ncompiler.registerComponent('FieldEditorForm', FieldEditorForm);\nuiComponents.FieldEditorForm = FieldEditorFormUI;\ncompiler.registerComponent('FormEditor', FormEditor);\nuiComponents.FormEditor = FormEditorUI;\ncompiler.registerComponent('FormBuilder', FormBuilder);\n\n// Register all the components\nfor (let name in components) {\n  let component = components[name];\n  compiler.registerComponent(component.name, component);\n}\n\n// Instantiate the app\nconst app = compiler.newComponent({\n  component: 'app.App',\n});\n\nexport default app;\n","import { render } from '../bundle';\nimport 'typeface-roboto';\nimport app from './app';\n\n// Render the app\nrender(app);\n"],"sourceRoot":""}